{"mappings":"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","sources":["node_modules/pts/dist/index.mjs","src/scripts/projects/19-pts.ts"],"sourcesContent":["// src/LinearAlgebra.ts\nvar Vec = class {\n  static add(a, b) {\n    if (typeof b == \"number\") {\n      for (let i = 0, len = a.length; i < len; i++)\n        a[i] += b;\n    } else {\n      for (let i = 0, len = a.length; i < len; i++)\n        a[i] += b[i] || 0;\n    }\n    return a;\n  }\n  static subtract(a, b) {\n    if (typeof b == \"number\") {\n      for (let i = 0, len = a.length; i < len; i++)\n        a[i] -= b;\n    } else {\n      for (let i = 0, len = a.length; i < len; i++)\n        a[i] -= b[i] || 0;\n    }\n    return a;\n  }\n  static multiply(a, b) {\n    if (typeof b == \"number\") {\n      for (let i = 0, len = a.length; i < len; i++)\n        a[i] *= b;\n    } else {\n      if (a.length != b.length) {\n        throw new Error(`Cannot do element-wise multiply since the array lengths don't match: ${a.toString()} multiply-with ${b.toString()}`);\n      }\n      for (let i = 0, len = a.length; i < len; i++)\n        a[i] *= b[i];\n    }\n    return a;\n  }\n  static divide(a, b) {\n    if (typeof b == \"number\") {\n      if (b === 0)\n        throw new Error(\"Cannot divide by zero\");\n      for (let i = 0, len = a.length; i < len; i++)\n        a[i] /= b;\n    } else {\n      if (a.length != b.length) {\n        throw new Error(`Cannot do element-wise divide since the array lengths don't match. ${a.toString()} divide-by ${b.toString()}`);\n      }\n      for (let i = 0, len = a.length; i < len; i++)\n        a[i] /= b[i];\n    }\n    return a;\n  }\n  static dot(a, b) {\n    if (a.length != b.length)\n      throw new Error(\"Array lengths don't match\");\n    let d = 0;\n    for (let i = 0, len = a.length; i < len; i++) {\n      d += a[i] * b[i];\n    }\n    return d;\n  }\n  static cross2D(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n  }\n  static cross(a, b) {\n    return new Pt(a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]);\n  }\n  static magnitude(a) {\n    return Math.sqrt(Vec.dot(a, a));\n  }\n  static unit(a, magnitude = void 0) {\n    let m = magnitude === void 0 ? Vec.magnitude(a) : magnitude;\n    if (m === 0)\n      return Pt.make(a.length);\n    return Vec.divide(a, m);\n  }\n  static abs(a) {\n    return Vec.map(a, Math.abs);\n  }\n  static floor(a) {\n    return Vec.map(a, Math.floor);\n  }\n  static ceil(a) {\n    return Vec.map(a, Math.ceil);\n  }\n  static round(a) {\n    return Vec.map(a, Math.round);\n  }\n  static max(a) {\n    let m = Number.MIN_VALUE;\n    let index = 0;\n    for (let i = 0, len = a.length; i < len; i++) {\n      m = Math.max(m, a[i]);\n      if (m === a[i])\n        index = i;\n    }\n    return { value: m, index };\n  }\n  static min(a) {\n    let m = Number.MAX_VALUE;\n    let index = 0;\n    for (let i = 0, len = a.length; i < len; i++) {\n      m = Math.min(m, a[i]);\n      if (m === a[i])\n        index = i;\n    }\n    return { value: m, index };\n  }\n  static sum(a) {\n    let s = 0;\n    for (let i = 0, len = a.length; i < len; i++)\n      s += a[i];\n    return s;\n  }\n  static map(a, fn) {\n    for (let i = 0, len = a.length; i < len; i++) {\n      a[i] = fn(a[i], i, a);\n    }\n    return a;\n  }\n};\nvar Mat = class {\n  constructor() {\n    this.reset();\n  }\n  get value() {\n    return this._33;\n  }\n  get domMatrix() {\n    return new DOMMatrix(Mat.toDOMMatrix(this._33));\n  }\n  reset() {\n    this._33 = Mat.scale2DMatrix(1, 1);\n  }\n  scale2D(val, at = [0, 0]) {\n    const m = Mat.scaleAt2DMatrix(val[0] || 1, val[1] || 1, at);\n    this._33 = Mat.multiply(this._33, m);\n    return this;\n  }\n  rotate2D(ang, at = [0, 0]) {\n    const m = Mat.rotateAt2DMatrix(Math.cos(ang), Math.sin(ang), at);\n    this._33 = Mat.multiply(this._33, m);\n    return this;\n  }\n  translate2D(val) {\n    const m = Mat.translate2DMatrix(val[0] || 0, val[1] || 0);\n    this._33 = Mat.multiply(this._33, m);\n    return this;\n  }\n  shear2D(val, at = [0, 0]) {\n    const m = Mat.shearAt2DMatrix(Math.tan(val[0] || 0), Math.tan(val[1] || 1), at);\n    this._33 = Mat.multiply(this._33, m);\n    return this;\n  }\n  static add(a, b) {\n    if (typeof b != \"number\") {\n      if (a[0].length != b[0].length)\n        throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n      if (a.length != b.length)\n        throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n    }\n    let g = new Group();\n    let isNum = typeof b == \"number\";\n    for (let i = 0, len = a.length; i < len; i++) {\n      g.push(a[i].$add(isNum ? b : b[i]));\n    }\n    return g;\n  }\n  static multiply(a, b, transposed = false, elementwise = false) {\n    let g = new Group();\n    if (typeof b != \"number\") {\n      if (elementwise) {\n        if (a.length != b.length)\n          throw new Error(\"Cannot multiply matrix element-wise because the matrices' sizes don't match.\");\n        for (let ai = 0, alen = a.length; ai < alen; ai++) {\n          g.push(a[ai].$multiply(b[ai]));\n        }\n      } else {\n        if (!transposed && a[0].length != b.length)\n          throw new Error(\"Cannot multiply matrix if rows in matrix-a don't match columns in matrix-b.\");\n        if (transposed && a[0].length != b[0].length)\n          throw new Error(\"Cannot multiply matrix if transposed and the columns in both matrices don't match.\");\n        if (!transposed)\n          b = Mat.transpose(b);\n        for (let ai = 0, alen = a.length; ai < alen; ai++) {\n          let p = Pt.make(b.length, 0);\n          for (let bi = 0, blen = b.length; bi < blen; bi++) {\n            p[bi] = Vec.dot(a[ai], b[bi]);\n          }\n          g.push(p);\n        }\n      }\n    } else {\n      for (let ai = 0, alen = a.length; ai < alen; ai++) {\n        g.push(a[ai].$multiply(b));\n      }\n    }\n    return g;\n  }\n  static zipSlice(g, index, defaultValue = false) {\n    let z = [];\n    for (let i = 0, len = g.length; i < len; i++) {\n      if (g[i].length - 1 < index && defaultValue === false)\n        throw `Index ${index} is out of bounds`;\n      z.push(g[i][index] || defaultValue);\n    }\n    return new Pt(z);\n  }\n  static zip(g, defaultValue = false, useLongest = false) {\n    let ps = new Group();\n    let len = useLongest ? g.reduce((a, b) => Math.max(a, b.length), 0) : g[0].length;\n    for (let i = 0; i < len; i++) {\n      ps.push(Mat.zipSlice(g, i, defaultValue));\n    }\n    return ps;\n  }\n  static transpose(g, defaultValue = false, useLongest = false) {\n    return Mat.zip(g, defaultValue, useLongest);\n  }\n  static toDOMMatrix(m) {\n    return [m[0][0], m[0][1], m[1][0], m[1][1], m[2][0], m[2][1]];\n  }\n  static transform2D(pt, m) {\n    let x = pt[0] * m[0][0] + pt[1] * m[1][0] + m[2][0];\n    let y = pt[0] * m[0][1] + pt[1] * m[1][1] + m[2][1];\n    return new Pt(x, y);\n  }\n  static scale2DMatrix(x, y) {\n    return new Group(\n      new Pt(x, 0, 0),\n      new Pt(0, y, 0),\n      new Pt(0, 0, 1)\n    );\n  }\n  static rotate2DMatrix(cosA, sinA) {\n    return new Group(\n      new Pt(cosA, sinA, 0),\n      new Pt(-sinA, cosA, 0),\n      new Pt(0, 0, 1)\n    );\n  }\n  static shear2DMatrix(tanX, tanY) {\n    return new Group(\n      new Pt(1, tanX, 0),\n      new Pt(tanY, 1, 0),\n      new Pt(0, 0, 1)\n    );\n  }\n  static translate2DMatrix(x, y) {\n    return new Group(\n      new Pt(1, 0, 0),\n      new Pt(0, 1, 0),\n      new Pt(x, y, 1)\n    );\n  }\n  static scaleAt2DMatrix(sx, sy, at) {\n    let m = Mat.scale2DMatrix(sx, sy);\n    m[2][0] = -at[0] * sx + at[0];\n    m[2][1] = -at[1] * sy + at[1];\n    return m;\n  }\n  static rotateAt2DMatrix(cosA, sinA, at) {\n    let m = Mat.rotate2DMatrix(cosA, sinA);\n    m[2][0] = at[0] * (1 - cosA) + at[1] * sinA;\n    m[2][1] = at[1] * (1 - cosA) - at[0] * sinA;\n    return m;\n  }\n  static shearAt2DMatrix(tanX, tanY, at) {\n    let m = Mat.shear2DMatrix(tanX, tanY);\n    m[2][0] = -at[1] * tanY;\n    m[2][1] = -at[0] * tanX;\n    return m;\n  }\n  static reflectAt2DMatrix(p1, p2) {\n    let intercept = Line.intercept(p1, p2);\n    if (intercept == void 0) {\n      return [\n        new Pt([-1, 0, 0]),\n        new Pt([0, 1, 0]),\n        new Pt([p1[0] + p2[0], 0, 1])\n      ];\n    } else {\n      let yi = intercept.yi;\n      let ang2 = Math.atan(intercept.slope) * 2;\n      let cosA = Math.cos(ang2);\n      let sinA = Math.sin(ang2);\n      return [\n        new Pt([cosA, sinA, 0]),\n        new Pt([sinA, -cosA, 0]),\n        new Pt([-yi * sinA, yi + yi * cosA, 1])\n      ];\n    }\n  }\n};\n\n// src/Op.ts\nvar _errorLength = (obj, param = \"expected\") => Util.warn(\"Group's length is less than \" + param, obj);\nvar _errorOutofBound = (obj, param = \"\") => Util.warn(`Index ${param} is out of bound in Group`, obj);\nvar Line = class {\n  static fromAngle(anchor, angle, magnitude) {\n    let g = new Group(new Pt(anchor), new Pt(anchor));\n    g[1].toAngle(angle, magnitude, true);\n    return g;\n  }\n  static slope(p1, p2) {\n    return p2[0] - p1[0] === 0 ? void 0 : (p2[1] - p1[1]) / (p2[0] - p1[0]);\n  }\n  static intercept(p1, p2) {\n    if (p2[0] - p1[0] === 0) {\n      return void 0;\n    } else {\n      let m = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n      let c = p1[1] - m * p1[0];\n      return { slope: m, yi: c, xi: m === 0 ? void 0 : -c / m };\n    }\n  }\n  static sideOfPt2D(line, pt) {\n    let _line = Util.iterToArray(line);\n    return (_line[1][0] - _line[0][0]) * (pt[1] - _line[0][1]) - (pt[0] - _line[0][0]) * (_line[1][1] - _line[0][1]);\n  }\n  static collinear(p1, p2, p3, threshold = 0.01) {\n    let a = new Pt(0, 0, 0).to(p1).$subtract(p2);\n    let b = new Pt(0, 0, 0).to(p1).$subtract(p3);\n    return a.$cross(b).divide(1e3).equals(new Pt(0, 0, 0), threshold);\n  }\n  static magnitude(line) {\n    let _line = Util.iterToArray(line);\n    return _line.length >= 2 ? _line[1].$subtract(_line[0]).magnitude() : 0;\n  }\n  static magnitudeSq(line) {\n    let _line = Util.iterToArray(line);\n    return _line.length >= 2 ? _line[1].$subtract(_line[0]).magnitudeSq() : 0;\n  }\n  static perpendicularFromPt(line, pt, asProjection = false) {\n    let _line = Util.iterToArray(line);\n    if (_line[0].equals(_line[1]))\n      return void 0;\n    let a = _line[0].$subtract(_line[1]);\n    let b = _line[1].$subtract(pt);\n    let proj = b.$subtract(a.$project(b));\n    return asProjection ? proj : proj.$add(pt);\n  }\n  static distanceFromPt(line, pt) {\n    let _line = Util.iterToArray(line);\n    let projectionVector = Line.perpendicularFromPt(_line, pt, true);\n    if (projectionVector) {\n      return projectionVector.magnitude();\n    } else {\n      return _line[0].$subtract(pt).magnitude();\n    }\n  }\n  static intersectRay2D(la, lb) {\n    let _la = Util.iterToArray(la);\n    let _lb = Util.iterToArray(lb);\n    let a = Line.intercept(_la[0], _la[1]);\n    let b = Line.intercept(_lb[0], _lb[1]);\n    let pa = _la[0];\n    let pb = _lb[0];\n    if (a == void 0) {\n      if (b == void 0)\n        return void 0;\n      let y1 = -b.slope * (pb[0] - pa[0]) + pb[1];\n      return new Pt(pa[0], y1);\n    } else {\n      if (b == void 0) {\n        let y1 = -a.slope * (pa[0] - pb[0]) + pa[1];\n        return new Pt(pb[0], y1);\n      } else if (b.slope != a.slope) {\n        let px = (a.slope * pa[0] - b.slope * pb[0] + pb[1] - pa[1]) / (a.slope - b.slope);\n        let py = a.slope * (px - pa[0]) + pa[1];\n        return new Pt(px, py);\n      } else {\n        if (a.yi == b.yi) {\n          return new Pt(pa[0], pa[1]);\n        } else {\n          return void 0;\n        }\n      }\n    }\n  }\n  static intersectLine2D(la, lb) {\n    let _la = Util.iterToArray(la);\n    let _lb = Util.iterToArray(lb);\n    let pt = Line.intersectRay2D(_la, _lb);\n    return pt && Geom.withinBound(pt, _la[0], _la[1]) && Geom.withinBound(pt, _lb[0], _lb[1]) ? pt : void 0;\n  }\n  static intersectLineWithRay2D(line, ray) {\n    let _line = Util.iterToArray(line);\n    let _ray = Util.iterToArray(ray);\n    let pt = Line.intersectRay2D(_line, _ray);\n    return pt && Geom.withinBound(pt, _line[0], _line[1]) ? pt : void 0;\n  }\n  static intersectPolygon2D(lineOrRay, poly, sourceIsRay = false) {\n    let _lineOrRay = Util.iterToArray(lineOrRay);\n    let _poly = Util.iterToArray(poly);\n    let fn = sourceIsRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n    let pts = new Group();\n    for (let i = 0, len = _poly.length; i < len; i++) {\n      let next = i === len - 1 ? 0 : i + 1;\n      let d = fn([_poly[i], _poly[next]], _lineOrRay);\n      if (d)\n        pts.push(d);\n    }\n    return pts.length > 0 ? pts : void 0;\n  }\n  static intersectLines2D(lines1, lines2, isRay = false) {\n    let group = new Group();\n    let fn = isRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n    for (let l1 of lines1) {\n      for (let l2 of lines2) {\n        let _ip = fn(l1, l2);\n        if (_ip)\n          group.push(_ip);\n      }\n    }\n    return group;\n  }\n  static intersectGridWithRay2D(ray, gridPt) {\n    let _ray = Util.iterToArray(ray);\n    let t = Line.intercept(new Pt(_ray[0]).subtract(gridPt), new Pt(_ray[1]).subtract(gridPt));\n    let g = new Group();\n    if (t && t.xi)\n      g.push(new Pt(gridPt[0] + t.xi, gridPt[1]));\n    if (t && t.yi)\n      g.push(new Pt(gridPt[0], gridPt[1] + t.yi));\n    return g;\n  }\n  static intersectGridWithLine2D(line, gridPt) {\n    let _line = Util.iterToArray(line);\n    let g = Line.intersectGridWithRay2D(_line, gridPt);\n    let gg = new Group();\n    for (let i = 0, len = g.length; i < len; i++) {\n      if (Geom.withinBound(g[i], _line[0], _line[1]))\n        gg.push(g[i]);\n    }\n    return gg;\n  }\n  static intersectRect2D(line, rect) {\n    let _line = Util.iterToArray(line);\n    let _rect = Util.iterToArray(rect);\n    let box = Geom.boundingBox(Group.fromPtArray(_line));\n    if (!Rectangle.hasIntersectRect2D(box, _rect))\n      return new Group();\n    return Line.intersectLines2D([_line], Rectangle.sides(_rect));\n  }\n  static subpoints(line, num) {\n    let _line = Util.iterToArray(line);\n    let pts = new Group();\n    for (let i = 1; i <= num; i++) {\n      pts.push(Geom.interpolate(_line[0], _line[1], i / (num + 1)));\n    }\n    return pts;\n  }\n  static crop(line, size, index = 0, cropAsCircle = true) {\n    let _line = Util.iterToArray(line);\n    let tdx = index === 0 ? 1 : 0;\n    let ls = _line[tdx].$subtract(_line[index]);\n    if (ls[0] === 0 || size[0] === 0)\n      return _line[index];\n    if (cropAsCircle) {\n      let d = ls.unit().multiply(size[1]);\n      return _line[index].$add(d);\n    } else {\n      let rect = Rectangle.fromCenter(_line[index], size);\n      let sides = Rectangle.sides(rect);\n      let sideIdx = 0;\n      if (Math.abs(ls[1] / ls[0]) > Math.abs(size[1] / size[0])) {\n        sideIdx = ls[1] < 0 ? 0 : 2;\n      } else {\n        sideIdx = ls[0] < 0 ? 3 : 1;\n      }\n      return Line.intersectRay2D(sides[sideIdx], _line);\n    }\n  }\n  static marker(line, size, graphic = \"arrow\", atTail = true) {\n    let _line = Util.iterToArray(line);\n    let h = atTail ? 0 : 1;\n    let t = atTail ? 1 : 0;\n    let unit = _line[h].$subtract(_line[t]);\n    if (unit.magnitudeSq() === 0)\n      return new Group();\n    unit.unit();\n    let ps = Geom.perpendicular(unit).multiply(size[0]).add(_line[t]);\n    if (graphic == \"arrow\") {\n      ps.add(unit.$multiply(size[1]));\n      return new Group(_line[t], ps[0], ps[1]);\n    } else {\n      return new Group(ps[0], ps[1]);\n    }\n  }\n  static toRect(line) {\n    let _line = Util.iterToArray(line);\n    return new Group(_line[0].$min(_line[1]), _line[0].$max(_line[1]));\n  }\n};\nvar Rectangle = class {\n  static from(topLeft, widthOrSize, height) {\n    return Rectangle.fromTopLeft(topLeft, widthOrSize, height);\n  }\n  static fromTopLeft(topLeft, widthOrSize, height) {\n    let size = typeof widthOrSize == \"number\" ? [widthOrSize, height || widthOrSize] : widthOrSize;\n    return new Group(new Pt(topLeft), new Pt(topLeft).add(size));\n  }\n  static fromCenter(center, widthOrSize, height) {\n    let half = typeof widthOrSize == \"number\" ? [widthOrSize / 2, (height || widthOrSize) / 2] : new Pt(widthOrSize).divide(2);\n    return new Group(new Pt(center).subtract(half), new Pt(center).add(half));\n  }\n  static toCircle(pts, within = true) {\n    return Circle.fromRect(pts, within);\n  }\n  static toSquare(pts, enclose = false) {\n    let _pts = Util.iterToArray(pts);\n    let s = Rectangle.size(_pts);\n    let m = enclose ? s.maxValue().value : s.minValue().value;\n    return Rectangle.fromCenter(Rectangle.center(_pts), m, m);\n  }\n  static size(pts) {\n    let p = Util.iterToArray(pts);\n    return p[0].$max(p[1]).subtract(p[0].$min(p[1]));\n  }\n  static center(pts) {\n    let p = Util.iterToArray(pts);\n    let min = p[0].$min(p[1]);\n    let max = p[0].$max(p[1]);\n    return min.add(max.$subtract(min).divide(2));\n  }\n  static corners(rect) {\n    let _rect = Util.iterToArray(rect);\n    let p0 = _rect[0].$min(_rect[1]);\n    let p2 = _rect[0].$max(_rect[1]);\n    return new Group(p0, new Pt(p2.x, p0.y), p2, new Pt(p0.x, p2.y));\n  }\n  static sides(rect) {\n    let [p0, p1, p2, p3] = Rectangle.corners(rect);\n    return [\n      new Group(p0, p1),\n      new Group(p1, p2),\n      new Group(p2, p3),\n      new Group(p3, p0)\n    ];\n  }\n  static boundingBox(rects) {\n    let _rects = Util.iterToArray(rects);\n    let merged = Util.flatten(_rects, false);\n    let min = Pt.make(2, Number.MAX_VALUE);\n    let max = Pt.make(2, Number.MIN_VALUE);\n    for (let i = 0, len = merged.length; i < len; i++) {\n      let k = 0;\n      for (let m of merged[i]) {\n        min[k] = Math.min(min[k], m[k]);\n        max[k] = Math.max(max[k], m[k]);\n        if (++k >= 2)\n          break;\n      }\n    }\n    return new Group(min, max);\n  }\n  static polygon(rect) {\n    return Rectangle.corners(rect);\n  }\n  static quadrants(rect, center) {\n    let _rect = Util.iterToArray(rect);\n    let corners = Rectangle.corners(_rect);\n    let _center = center != void 0 ? new Pt(center) : Rectangle.center(_rect);\n    return corners.map((c) => new Group(c, _center).boundingBox());\n  }\n  static halves(rect, ratio = 0.5, asRows = false) {\n    let _rect = Util.iterToArray(rect);\n    let min = _rect[0].$min(_rect[1]);\n    let max = _rect[0].$max(_rect[1]);\n    let mid = asRows ? Num.lerp(min[1], max[1], ratio) : Num.lerp(min[0], max[0], ratio);\n    return asRows ? [new Group(min, new Pt(max[0], mid)), new Group(new Pt(min[0], mid), max)] : [new Group(min, new Pt(mid, max[1])), new Group(new Pt(mid, min[1]), max)];\n  }\n  static withinBound(rect, pt) {\n    let _rect = Util.iterToArray(rect);\n    return Geom.withinBound(pt, _rect[0], _rect[1]);\n  }\n  static hasIntersectRect2D(rect1, rect2, resetBoundingBox = false) {\n    let _rect1 = Util.iterToArray(rect1);\n    let _rect2 = Util.iterToArray(rect2);\n    if (resetBoundingBox) {\n      _rect1 = Geom.boundingBox(_rect1);\n      _rect2 = Geom.boundingBox(_rect2);\n    }\n    if (_rect1[0][0] > _rect2[1][0] || _rect2[0][0] > _rect1[1][0])\n      return false;\n    if (_rect1[0][1] > _rect2[1][1] || _rect2[0][1] > _rect1[1][1])\n      return false;\n    return true;\n  }\n  static intersectRect2D(rect1, rect2) {\n    let _rect1 = Util.iterToArray(rect1);\n    let _rect2 = Util.iterToArray(rect2);\n    if (!Rectangle.hasIntersectRect2D(_rect1, _rect2))\n      return new Group();\n    return Line.intersectLines2D(Rectangle.sides(_rect1), Rectangle.sides(_rect2));\n  }\n};\nvar Circle = class {\n  static fromRect(pts, enclose = false) {\n    let _pts = Util.iterToArray(pts);\n    let r = 0;\n    let min = r = Rectangle.size(_pts).minValue().value / 2;\n    if (enclose) {\n      let max = Rectangle.size(_pts).maxValue().value / 2;\n      r = Math.sqrt(min * min + max * max);\n    } else {\n      r = min;\n    }\n    return new Group(Rectangle.center(_pts), new Pt(r, r));\n  }\n  static fromTriangle(pts, enclose = false) {\n    if (enclose) {\n      return Triangle.circumcircle(pts);\n    } else {\n      return Triangle.incircle(pts);\n    }\n  }\n  static fromCenter(pt, radius) {\n    return new Group(new Pt(pt), new Pt(radius, radius));\n  }\n  static withinBound(pts, pt, threshold = 0) {\n    let _pts = Util.iterToArray(pts);\n    let d = _pts[0].$subtract(pt);\n    return d.dot(d) + threshold < _pts[1].x * _pts[1].x;\n  }\n  static intersectRay2D(circle, ray) {\n    let _pts = Util.iterToArray(circle);\n    let _ray = Util.iterToArray(ray);\n    let d = _ray[0].$subtract(_ray[1]);\n    let f = _pts[0].$subtract(_ray[0]);\n    let a = d.dot(d);\n    let b = f.dot(d);\n    let c = f.dot(f) - _pts[1].x * _pts[1].x;\n    let p = b / a;\n    let q = c / a;\n    let disc = p * p - q;\n    if (disc < 0) {\n      return new Group();\n    } else {\n      let discSqrt = Math.sqrt(disc);\n      let t1 = -p + discSqrt;\n      let p1 = _ray[0].$subtract(d.$multiply(t1));\n      if (disc === 0)\n        return new Group(p1);\n      let t2 = -p - discSqrt;\n      let p2 = _ray[0].$subtract(d.$multiply(t2));\n      return new Group(p1, p2);\n    }\n  }\n  static intersectLine2D(circle, line) {\n    let _pts = Util.iterToArray(circle);\n    let _line = Util.iterToArray(line);\n    let ps = Circle.intersectRay2D(_pts, _line);\n    let g = new Group();\n    if (ps.length > 0) {\n      for (let i = 0, len = ps.length; i < len; i++) {\n        if (Rectangle.withinBound(_line, ps[i]))\n          g.push(ps[i]);\n      }\n    }\n    return g;\n  }\n  static intersectCircle2D(circle1, circle2) {\n    let _pts = Util.iterToArray(circle1);\n    let _circle = Util.iterToArray(circle2);\n    let dv = _circle[0].$subtract(_pts[0]);\n    let dr2 = dv.magnitudeSq();\n    let dr = Math.sqrt(dr2);\n    let ar = _pts[1].x;\n    let br = _circle[1].x;\n    let ar2 = ar * ar;\n    let br2 = br * br;\n    if (dr > ar + br) {\n      return new Group();\n    } else if (dr < Math.abs(ar - br)) {\n      return new Group(_pts[0].clone());\n    } else {\n      let a = (ar2 - br2 + dr2) / (2 * dr);\n      let h = Math.sqrt(ar2 - a * a);\n      let p = dv.$multiply(a / dr).add(_pts[0]);\n      return new Group(\n        new Pt(p.x + h * dv.y / dr, p.y - h * dv.x / dr),\n        new Pt(p.x - h * dv.y / dr, p.y + h * dv.x / dr)\n      );\n    }\n  }\n  static intersectRect2D(circle, rect) {\n    let _pts = Util.iterToArray(circle);\n    let _rect = Util.iterToArray(rect);\n    let sides = Rectangle.sides(_rect);\n    let g = [];\n    for (let i = 0, len = sides.length; i < len; i++) {\n      let ps = Circle.intersectLine2D(_pts, sides[i]);\n      if (ps.length > 0)\n        g.push(ps);\n    }\n    return Util.flatten(g);\n  }\n  static toRect(circle, within = false) {\n    let _pts = Util.iterToArray(circle);\n    let r = _pts[1][0];\n    if (within) {\n      let half = Math.sqrt(r * r) / 2;\n      return new Group(_pts[0].$subtract(half), _pts[0].$add(half));\n    } else {\n      return new Group(_pts[0].$subtract(r), _pts[0].$add(r));\n    }\n  }\n  static toTriangle(circle, within = true) {\n    let _pts = Util.iterToArray(circle);\n    if (within) {\n      let ang = -Math.PI / 2;\n      let inc = Math.PI * 2 / 3;\n      let g = new Group();\n      for (let i = 0; i < 3; i++) {\n        g.push(_pts[0].clone().toAngle(ang, _pts[1][0], true));\n        ang += inc;\n      }\n      return g;\n    } else {\n      return Triangle.fromCenter(_pts[0], _pts[1][0]);\n    }\n  }\n};\nvar Triangle = class {\n  static fromRect(rect) {\n    let _rect = Util.iterToArray(rect);\n    let top = _rect[0].$add(_rect[1]).divide(2);\n    top.y = _rect[0][1];\n    let left = _rect[1].clone();\n    left.x = _rect[0][0];\n    return new Group(top, _rect[1].clone(), left);\n  }\n  static fromCircle(circle) {\n    return Circle.toTriangle(circle, true);\n  }\n  static fromCenter(pt, size) {\n    return Triangle.fromCircle(Circle.fromCenter(pt, size));\n  }\n  static medial(tri) {\n    let _pts = Util.iterToArray(tri);\n    if (_pts.length < 3)\n      return _errorLength(new Group(), 3);\n    return Polygon.midpoints(_pts, true);\n  }\n  static oppositeSide(tri, index) {\n    let _pts = Util.iterToArray(tri);\n    if (_pts.length < 3)\n      return _errorLength(new Group(), 3);\n    if (index === 0) {\n      return Group.fromPtArray([_pts[1], _pts[2]]);\n    } else if (index === 1) {\n      return Group.fromPtArray([_pts[0], _pts[2]]);\n    } else {\n      return Group.fromPtArray([_pts[0], _pts[1]]);\n    }\n  }\n  static altitude(tri, index) {\n    let _pts = Util.iterToArray(tri);\n    let opp = Triangle.oppositeSide(_pts, index);\n    if (opp.length > 1) {\n      return new Group(_pts[index], Line.perpendicularFromPt(opp, _pts[index]));\n    } else {\n      return new Group();\n    }\n  }\n  static orthocenter(tri) {\n    let _pts = Util.iterToArray(tri);\n    if (_pts.length < 3)\n      return _errorLength(void 0, 3);\n    let a = Triangle.altitude(_pts, 0);\n    let b = Triangle.altitude(_pts, 1);\n    return Line.intersectRay2D(a, b);\n  }\n  static incenter(tri) {\n    let _pts = Util.iterToArray(tri);\n    if (_pts.length < 3)\n      return _errorLength(void 0, 3);\n    let a = Polygon.bisector(_pts, 0).add(_pts[0]);\n    let b = Polygon.bisector(_pts, 1).add(_pts[1]);\n    return Line.intersectRay2D(new Group(_pts[0], a), new Group(_pts[1], b));\n  }\n  static incircle(tri, center) {\n    let _pts = Util.iterToArray(tri);\n    let c = center ? center : Triangle.incenter(_pts);\n    let area = Polygon.area(_pts);\n    let perim = Polygon.perimeter(_pts, true);\n    let r = 2 * area / perim.total;\n    return Circle.fromCenter(c, r);\n  }\n  static circumcenter(tri) {\n    let _pts = Util.iterToArray(tri);\n    let md = Triangle.medial(_pts);\n    let a = [md[0], Geom.perpendicular(_pts[0].$subtract(md[0])).p1.$add(md[0])];\n    let b = [md[1], Geom.perpendicular(_pts[1].$subtract(md[1])).p1.$add(md[1])];\n    return Line.intersectRay2D(a, b);\n  }\n  static circumcircle(tri, center) {\n    let _pts = Util.iterToArray(tri);\n    let c = center ? center : Triangle.circumcenter(_pts);\n    let r = _pts[0].$subtract(c).magnitude();\n    return Circle.fromCenter(c, r);\n  }\n};\nvar Polygon = class {\n  static centroid(pts) {\n    return Geom.centroid(pts);\n  }\n  static rectangle(center, widthOrSize, height) {\n    return Rectangle.corners(Rectangle.fromCenter(center, widthOrSize, height));\n  }\n  static fromCenter(center, radius, sides) {\n    let g = new Group();\n    for (let i = 0; i < sides; i++) {\n      let ang = Math.PI * 2 * i / sides;\n      g.push(new Pt(Math.cos(ang) * radius, Math.sin(ang) * radius).add(center));\n    }\n    return g;\n  }\n  static lineAt(pts, index) {\n    let _pts = Util.iterToArray(pts);\n    if (index < 0 || index >= _pts.length)\n      throw new Error(\"index out of the Polygon's range\");\n    return new Group(_pts[index], index === _pts.length - 1 ? _pts[0] : _pts[index + 1]);\n  }\n  static lines(poly, closePath = true) {\n    let _pts = Util.iterToArray(poly);\n    if (_pts.length < 2)\n      return _errorLength(new Group(), 2);\n    let sp = Util.split(_pts, 2, 1);\n    if (closePath)\n      sp.push(new Group(_pts[_pts.length - 1], _pts[0]));\n    return sp.map((g) => g);\n  }\n  static midpoints(poly, closePath = false, t = 0.5) {\n    let sides = Polygon.lines(poly, closePath);\n    let mids = sides.map((s) => Geom.interpolate(s[0], s[1], t));\n    return mids;\n  }\n  static adjacentSides(poly, index, closePath = false) {\n    let _pts = Util.iterToArray(poly);\n    if (_pts.length < 2)\n      return _errorLength(new Group(), 2);\n    if (index < 0 || index >= _pts.length)\n      return _errorOutofBound(new Group(), index);\n    let gs = [];\n    let left = index - 1;\n    if (closePath && left < 0)\n      left = _pts.length - 1;\n    if (left >= 0)\n      gs.push(new Group(_pts[index], _pts[left]));\n    let right = index + 1;\n    if (closePath && right > _pts.length - 1)\n      right = 0;\n    if (right <= _pts.length - 1)\n      gs.push(new Group(_pts[index], _pts[right]));\n    return gs;\n  }\n  static bisector(poly, index) {\n    let sides = Polygon.adjacentSides(poly, index, true);\n    if (sides.length >= 2) {\n      let a = sides[0][1].$subtract(sides[0][0]).unit();\n      let b = sides[1][1].$subtract(sides[1][0]).unit();\n      return a.add(b).divide(2);\n    } else {\n      return void 0;\n    }\n  }\n  static perimeter(poly, closePath = false) {\n    let lines = Polygon.lines(poly, closePath);\n    let mag = 0;\n    let p = Pt.make(lines.length, 0);\n    for (let i = 0, len = lines.length; i < len; i++) {\n      let m = Line.magnitude(lines[i]);\n      mag += m;\n      p[i] = m;\n    }\n    return {\n      total: mag,\n      segments: p\n    };\n  }\n  static area(pts) {\n    let _pts = Util.iterToArray(pts);\n    if (_pts.length < 3)\n      return _errorLength(new Group(), 3);\n    let det = (a, b) => a[0] * b[1] - a[1] * b[0];\n    let area = 0;\n    for (let i = 0, len = _pts.length; i < len; i++) {\n      if (i < _pts.length - 1) {\n        area += det(_pts[i], _pts[i + 1]);\n      } else {\n        area += det(_pts[i], _pts[0]);\n      }\n    }\n    return Math.abs(area / 2);\n  }\n  static convexHull(pts, sorted = false) {\n    let _pts = Util.iterToArray(pts);\n    if (_pts.length < 3)\n      return _errorLength(new Group(), 3);\n    if (!sorted) {\n      _pts = _pts.slice();\n      _pts.sort((a, b) => a[0] - b[0]);\n    }\n    let left = (a, b, c) => {\n      return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]) > 0;\n    };\n    let dq = [];\n    let bot = _pts.length - 2;\n    let top = bot + 3;\n    dq[bot] = _pts[2];\n    dq[top] = _pts[2];\n    if (left(_pts[0], _pts[1], _pts[2])) {\n      dq[bot + 1] = _pts[0];\n      dq[bot + 2] = _pts[1];\n    } else {\n      dq[bot + 1] = _pts[1];\n      dq[bot + 2] = _pts[0];\n    }\n    for (let i = 3, len = _pts.length; i < len; i++) {\n      let pt = _pts[i];\n      if (left(dq[bot], dq[bot + 1], pt) && left(dq[top - 1], dq[top], pt)) {\n        continue;\n      }\n      while (!left(dq[bot], dq[bot + 1], pt)) {\n        bot += 1;\n      }\n      bot -= 1;\n      dq[bot] = pt;\n      while (!left(dq[top - 1], dq[top], pt)) {\n        top -= 1;\n      }\n      top += 1;\n      dq[top] = pt;\n    }\n    let hull = new Group();\n    for (let h = 0; h < top - bot; h++) {\n      hull.push(dq[bot + h]);\n    }\n    return hull;\n  }\n  static network(poly, originIndex = 0) {\n    let _pts = Util.iterToArray(poly);\n    let g = [];\n    for (let i = 0, len = _pts.length; i < len; i++) {\n      if (i != originIndex)\n        g.push(new Group(_pts[originIndex], _pts[i]));\n    }\n    return g;\n  }\n  static nearestPt(poly, pt) {\n    let _near = Number.MAX_VALUE;\n    let _item = -1;\n    let i = 0;\n    for (let p of poly) {\n      let d = p.$subtract(pt).magnitudeSq();\n      if (d < _near) {\n        _near = d;\n        _item = i;\n      }\n      i++;\n    }\n    return _item;\n  }\n  static projectAxis(poly, unitAxis) {\n    let _poly = Util.iterToArray(poly);\n    let dot = unitAxis.dot(_poly[0]);\n    let d = new Pt(dot, dot);\n    for (let n = 1, len = _poly.length; n < len; n++) {\n      dot = unitAxis.dot(_poly[n]);\n      d = new Pt(Math.min(dot, d[0]), Math.max(dot, d[1]));\n    }\n    return d;\n  }\n  static _axisOverlap(poly1, poly2, unitAxis) {\n    let pa = Polygon.projectAxis(poly1, unitAxis);\n    let pb = Polygon.projectAxis(poly2, unitAxis);\n    return pa[0] < pb[0] ? pb[0] - pa[1] : pa[0] - pb[1];\n  }\n  static hasIntersectPoint(poly, pt) {\n    let _poly = Util.iterToArray(poly);\n    let c = false;\n    for (let i = 0, len = _poly.length; i < len; i++) {\n      let ln = Polygon.lineAt(_poly, i);\n      if (ln[0][1] > pt[1] != ln[1][1] > pt[1] && pt[0] < (ln[1][0] - ln[0][0]) * (pt[1] - ln[0][1]) / (ln[1][1] - ln[0][1]) + ln[0][0]) {\n        c = !c;\n      }\n    }\n    return c;\n  }\n  static hasIntersectCircle(poly, circle) {\n    let _poly = Util.iterToArray(poly);\n    let _circle = Util.iterToArray(circle);\n    let info = {\n      which: -1,\n      dist: 0,\n      normal: null,\n      edge: null,\n      vertex: null\n    };\n    let c = _circle[0];\n    let r = _circle[1][0];\n    let minDist = Number.MAX_SAFE_INTEGER;\n    for (let i = 0, len = _poly.length; i < len; i++) {\n      let edge = Polygon.lineAt(_poly, i);\n      let axis = new Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n      let poly2 = new Group(c.$add(axis.$multiply(r)), c.$subtract(axis.$multiply(r)));\n      let dist = Polygon._axisOverlap(_poly, poly2, axis);\n      if (dist > 0) {\n        return null;\n      } else if (Math.abs(dist) < minDist) {\n        let check = Rectangle.withinBound(edge, Line.perpendicularFromPt(edge, c)) || Circle.intersectLine2D(circle, edge).length > 0;\n        if (check) {\n          info.edge = edge;\n          info.normal = axis;\n          minDist = Math.abs(dist);\n          info.which = i;\n        }\n      }\n    }\n    if (!info.edge)\n      return null;\n    let dir = c.$subtract(Polygon.centroid(_poly)).dot(info.normal);\n    if (dir < 0)\n      info.normal.multiply(-1);\n    info.dist = minDist;\n    info.vertex = c;\n    return info;\n  }\n  static hasIntersectPolygon(poly1, poly2) {\n    let _poly1 = Util.iterToArray(poly1);\n    let _poly2 = Util.iterToArray(poly2);\n    let info = {\n      which: -1,\n      dist: 0,\n      normal: new Pt(),\n      edge: new Group(),\n      vertex: new Pt()\n    };\n    let minDist = Number.MAX_SAFE_INTEGER;\n    for (let i = 0, plen = _poly1.length + _poly2.length; i < plen; i++) {\n      let edge = i < _poly1.length ? Polygon.lineAt(_poly1, i) : Polygon.lineAt(_poly2, i - _poly1.length);\n      let axis = new Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n      let dist = Polygon._axisOverlap(_poly1, _poly2, axis);\n      if (dist > 0) {\n        return null;\n      } else if (Math.abs(dist) < minDist) {\n        info.edge = edge;\n        info.normal = axis;\n        minDist = Math.abs(dist);\n        info.which = i < _poly1.length ? 0 : 1;\n      }\n    }\n    info.dist = minDist;\n    let b1 = info.which === 0 ? _poly2 : _poly1;\n    let b2 = info.which === 0 ? _poly1 : _poly2;\n    let c1 = Polygon.centroid(b1);\n    let c2 = Polygon.centroid(b2);\n    let dir = c1.$subtract(c2).dot(info.normal);\n    if (dir < 0)\n      info.normal.multiply(-1);\n    let smallest = Number.MAX_SAFE_INTEGER;\n    for (let i = 0, len = b1.length; i < len; i++) {\n      let d = info.normal.dot(b1[i].$subtract(c2));\n      if (d < smallest) {\n        smallest = d;\n        info.vertex = b1[i];\n      }\n    }\n    return info;\n  }\n  static intersectPolygon2D(poly1, poly2) {\n    let _poly1 = Util.iterToArray(poly1);\n    let _poly2 = Util.iterToArray(poly2);\n    let lp = Polygon.lines(_poly1);\n    let g = [];\n    for (let i = 0, len = lp.length; i < len; i++) {\n      let ins = Line.intersectPolygon2D(lp[i], _poly2, false);\n      if (ins)\n        g.push(ins);\n    }\n    return Util.flatten(g, true);\n  }\n  static toRects(polys) {\n    let boxes = [];\n    for (let g of polys) {\n      boxes.push(Geom.boundingBox(g));\n    }\n    let merged = Util.flatten(boxes, false);\n    boxes.unshift(Geom.boundingBox(merged));\n    return boxes;\n  }\n};\nvar Curve = class {\n  static getSteps(steps) {\n    let ts = new Group();\n    for (let i = 0; i <= steps; i++) {\n      let t = i / steps;\n      ts.push(new Pt(t * t * t, t * t, t, 1));\n    }\n    return ts;\n  }\n  static controlPoints(pts, index = 0, copyStart = false) {\n    let _pts = Util.iterToArray(pts);\n    if (index > _pts.length - 1)\n      return new Group();\n    let _index = (i) => i < _pts.length - 1 ? i : _pts.length - 1;\n    let p0 = _pts[index];\n    index = copyStart ? index : index + 1;\n    return new Group(\n      p0,\n      _pts[_index(index++)],\n      _pts[_index(index++)],\n      _pts[_index(index++)]\n    );\n  }\n  static _calcPt(ctrls, params) {\n    let x = ctrls.reduce((a, c, i) => a + c.x * params[i], 0);\n    let y = ctrls.reduce((a, c, i) => a + c.y * params[i], 0);\n    if (ctrls[0].length > 2) {\n      let z = ctrls.reduce((a, c, i) => a + c.z * params[i], 0);\n      return new Pt(x, y, z);\n    }\n    return new Pt(x, y);\n  }\n  static catmullRom(pts, steps = 10) {\n    let _pts = Util.iterToArray(pts);\n    if (_pts.length < 2)\n      return new Group();\n    let ps = new Group();\n    let ts = Curve.getSteps(steps);\n    let c = Curve.controlPoints(_pts, 0, true);\n    for (let i = 0; i <= steps; i++) {\n      ps.push(Curve.catmullRomStep(ts[i], c));\n    }\n    let k = 0;\n    while (k < _pts.length - 2) {\n      let cp = Curve.controlPoints(_pts, k);\n      if (cp.length > 0) {\n        for (let i = 0; i <= steps; i++) {\n          ps.push(Curve.catmullRomStep(ts[i], cp));\n        }\n        k++;\n      }\n    }\n    return ps;\n  }\n  static catmullRomStep(step, ctrls) {\n    let m = new Group(\n      new Pt(-0.5, 1, -0.5, 0),\n      new Pt(1.5, -2.5, 0, 1),\n      new Pt(-1.5, 2, 0.5, 0),\n      new Pt(0.5, -0.5, 0, 0)\n    );\n    return Curve._calcPt(ctrls, Mat.multiply([step], m, true)[0]);\n  }\n  static cardinal(pts, steps = 10, tension = 0.5) {\n    let _pts = Util.iterToArray(pts);\n    if (_pts.length < 2)\n      return new Group();\n    let ps = new Group();\n    let ts = Curve.getSteps(steps);\n    let c = Curve.controlPoints(_pts, 0, true);\n    for (let i = 0; i <= steps; i++) {\n      ps.push(Curve.cardinalStep(ts[i], c, tension));\n    }\n    let k = 0;\n    while (k < _pts.length - 2) {\n      let cp = Curve.controlPoints(_pts, k);\n      if (cp.length > 0) {\n        for (let i = 0; i <= steps; i++) {\n          ps.push(Curve.cardinalStep(ts[i], cp, tension));\n        }\n        k++;\n      }\n    }\n    return ps;\n  }\n  static cardinalStep(step, ctrls, tension = 0.5) {\n    let m = new Group(\n      new Pt(-1, 2, -1, 0),\n      new Pt(-1, 1, 0, 0),\n      new Pt(1, -2, 1, 0),\n      new Pt(1, -1, 0, 0)\n    );\n    let h = Mat.multiply([step], m, true)[0].multiply(tension);\n    let h2 = 2 * step[0] - 3 * step[1] + 1;\n    let h3 = -2 * step[0] + 3 * step[1];\n    let pt = Curve._calcPt(ctrls, h);\n    pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n    pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n    if (pt.length > 2)\n      pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n    return pt;\n  }\n  static bezier(pts, steps = 10) {\n    let _pts = Util.iterToArray(pts);\n    if (_pts.length < 4)\n      return new Group();\n    let ps = new Group();\n    let ts = Curve.getSteps(steps);\n    let k = 0;\n    while (k < _pts.length - 3) {\n      let c = Curve.controlPoints(_pts, k);\n      if (c.length > 0) {\n        for (let i = 0; i <= steps; i++) {\n          ps.push(Curve.bezierStep(ts[i], c));\n        }\n        k += 3;\n      }\n    }\n    return ps;\n  }\n  static bezierStep(step, ctrls) {\n    let m = new Group(\n      new Pt(-1, 3, -3, 1),\n      new Pt(3, -6, 3, 0),\n      new Pt(-3, 3, 0, 0),\n      new Pt(1, 0, 0, 0)\n    );\n    return Curve._calcPt(ctrls, Mat.multiply([step], m, true)[0]);\n  }\n  static bspline(pts, steps = 10, tension = 1) {\n    let _pts = Util.iterToArray(pts);\n    if (_pts.length < 2)\n      return new Group();\n    let ps = new Group();\n    let ts = Curve.getSteps(steps);\n    let k = 0;\n    while (k < _pts.length - 3) {\n      let c = Curve.controlPoints(_pts, k);\n      if (c.length > 0) {\n        if (tension !== 1) {\n          for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.bsplineTensionStep(ts[i], c, tension));\n          }\n        } else {\n          for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.bsplineStep(ts[i], c));\n          }\n        }\n        k++;\n      }\n    }\n    return ps;\n  }\n  static bsplineStep(step, ctrls) {\n    let m = new Group(\n      new Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666),\n      new Pt(0.5, -1, 0, 0.6666666666666666),\n      new Pt(-0.5, 0.5, 0.5, 0.16666666666666666),\n      new Pt(0.16666666666666666, 0, 0, 0)\n    );\n    return Curve._calcPt(ctrls, Mat.multiply([step], m, true)[0]);\n  }\n  static bsplineTensionStep(step, ctrls, tension = 1) {\n    let m = new Group(\n      new Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666),\n      new Pt(-1.5, 2, 0, -0.3333333333333333),\n      new Pt(1.5, -2.5, 0.5, 0.16666666666666666),\n      new Pt(0.16666666666666666, 0, 0, 0)\n    );\n    let h = Mat.multiply([step], m, true)[0].multiply(tension);\n    let h2 = 2 * step[0] - 3 * step[1] + 1;\n    let h3 = -2 * step[0] + 3 * step[1];\n    let pt = Curve._calcPt(ctrls, h);\n    pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n    pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n    if (pt.length > 2)\n      pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n    return pt;\n  }\n};\n\n// src/uheprng.ts\nfunction Mash() {\n  var n = 4022871197;\n  var mash = function(data) {\n    if (data) {\n      data = data.toString();\n      for (var i = 0; i < data.length; i++) {\n        n += data.charCodeAt(i);\n        var h = 0.02519603282416938 * n;\n        n = h >>> 0;\n        h -= n;\n        h *= n;\n        n = h >>> 0;\n        h -= n;\n        n += h * 4294967296;\n      }\n      return (n >>> 0) * 23283064365386963e-26;\n    } else\n      n = 4022871197;\n  };\n  return mash;\n}\nfunction uheprng_default(seed) {\n  var o = 48;\n  var c = 1;\n  var p = o;\n  var s = new Array(o);\n  var i, j, k = 0;\n  var mash = Mash();\n  for (i = 0; i < o; i++)\n    s[i] = mash(Math.random().toString());\n  function initState() {\n    mash();\n    for (i = 0; i < o; i++)\n      s[i] = mash(\" \");\n    c = 1;\n    p = o;\n  }\n  function cleanString(inStr) {\n    inStr = inStr.replace(/(^\\s*)|(\\s*$)/gi, \"\");\n    inStr = inStr.replace(/[\\x00-\\x1F]/gi, \"\");\n    inStr = inStr.replace(/\\n /, \"\\n\");\n    return inStr;\n  }\n  function hashString(inStr) {\n    inStr = cleanString(inStr);\n    mash(inStr);\n    for (i = 0; i < inStr.length; i++) {\n      k = inStr.charCodeAt(i);\n      for (j = 0; j < o; j++) {\n        s[j] -= mash(k.toString());\n        if (s[j] < 0)\n          s[j] += 1;\n      }\n    }\n  }\n  initState();\n  hashString(seed);\n  return {\n    random() {\n      if (++p >= o)\n        p = 0;\n      var t = 1768863 * s[p] + c * 23283064365386963e-26;\n      return s[p] = t - (c = t | 0);\n    }\n  };\n}\n\n// src/Num.ts\nvar Num = class {\n  static equals(a, b, threshold = 1e-5) {\n    return Math.abs(a - b) < threshold;\n  }\n  static lerp(a, b, t) {\n    return (1 - t) * a + t * b;\n  }\n  static clamp(val, min, max) {\n    return Math.max(min, Math.min(max, val));\n  }\n  static boundValue(val, min, max) {\n    let len = Math.abs(max - min);\n    let a = val % len;\n    if (a > max)\n      a -= len;\n    else if (a < min)\n      a += len;\n    return a;\n  }\n  static within(p, a, b) {\n    return p >= Math.min(a, b) && p <= Math.max(a, b);\n  }\n  static randomRange(a, b = 0) {\n    let r = a > b ? a - b : b - a;\n    return a + Num.random() * r;\n  }\n  static randomPt(a, b) {\n    let p = new Pt(a.length);\n    let range = b ? Vec.subtract(b, a) : a;\n    let start = b ? a : new Pt(a.length).fill(0);\n    for (let i = 0, len = p.length; i < len; i++) {\n      p[i] = Num.random() * range[i] + start[i];\n    }\n    return p;\n  }\n  static normalizeValue(n, a, b) {\n    let min = Math.min(a, b);\n    let max = Math.max(a, b);\n    return (n - min) / (max - min);\n  }\n  static sum(pts) {\n    let _pts = Util.iterToArray(pts);\n    let c = new Pt(_pts[0]);\n    for (let i = 1, len = _pts.length; i < len; i++) {\n      Vec.add(c, _pts[i]);\n    }\n    return c;\n  }\n  static average(pts) {\n    let _pts = Util.iterToArray(pts);\n    return Num.sum(_pts).divide(_pts.length);\n  }\n  static cycle(t, method = Shaping.sineInOut) {\n    return method(t > 0.5 ? 2 - t * 2 : t * 2);\n  }\n  static mapToRange(n, currA, currB, targetA, targetB) {\n    if (currA == currB)\n      throw new Error(\"[currMin, currMax] must define a range that is not zero\");\n    let min = Math.min(targetA, targetB);\n    let max = Math.max(targetA, targetB);\n    return Num.normalizeValue(n, currA, currB) * (max - min) + min;\n  }\n  static seed(seed) {\n    this.generator = uheprng_default(seed);\n  }\n  static random() {\n    return this.generator ? this.generator.random() : Math.random();\n  }\n};\nvar Geom = class {\n  static boundAngle(angle) {\n    return Num.boundValue(angle, 0, 360);\n  }\n  static boundRadian(radian) {\n    return Num.boundValue(radian, 0, Const.two_pi);\n  }\n  static toRadian(angle) {\n    return angle * Const.deg_to_rad;\n  }\n  static toDegree(radian) {\n    return radian * Const.rad_to_deg;\n  }\n  static boundingBox(pts) {\n    let minPt, maxPt;\n    for (let p of pts) {\n      if (minPt == void 0) {\n        minPt = p.clone();\n        maxPt = p.clone();\n      } else {\n        minPt = minPt.$min(p);\n        maxPt = maxPt.$max(p);\n      }\n    }\n    return new Group(minPt, maxPt);\n  }\n  static centroid(pts) {\n    return Num.average(pts);\n  }\n  static anchor(pts, ptOrIndex = 0, direction = \"to\") {\n    let method = direction == \"to\" ? \"subtract\" : \"add\";\n    let i = 0;\n    for (let p of pts) {\n      if (typeof ptOrIndex == \"number\") {\n        if (ptOrIndex !== i)\n          p[method](pts[ptOrIndex]);\n      } else {\n        p[method](ptOrIndex);\n      }\n      i++;\n    }\n  }\n  static interpolate(a, b, t = 0.5) {\n    let len = Math.min(a.length, b.length);\n    let d = Pt.make(len);\n    for (let i = 0; i < len; i++) {\n      d[i] = a[i] * (1 - t) + b[i] * t;\n    }\n    return d;\n  }\n  static perpendicular(pt, axis = Const.xy) {\n    let y = axis[1];\n    let x = axis[0];\n    let p = new Pt(pt);\n    let pa = new Pt(p);\n    pa[x] = -p[y];\n    pa[y] = p[x];\n    let pb = new Pt(p);\n    pb[x] = p[y];\n    pb[y] = -p[x];\n    return new Group(pa, pb);\n  }\n  static isPerpendicular(p1, p2) {\n    return new Pt(p1).dot(p2) === 0;\n  }\n  static withinBound(pt, boundPt1, boundPt2) {\n    for (let i = 0, len = Math.min(pt.length, boundPt1.length, boundPt2.length); i < len; i++) {\n      if (!Num.within(pt[i], boundPt1[i], boundPt2[i]))\n        return false;\n    }\n    return true;\n  }\n  static sortEdges(pts) {\n    let _pts = Util.iterToArray(pts);\n    let bounds = Geom.boundingBox(_pts);\n    let center = bounds[1].add(bounds[0]).divide(2);\n    let fn = (a, b) => {\n      if (a.length < 2 || b.length < 2)\n        throw new Error(\"Pt dimension cannot be less than 2\");\n      let da = a.$subtract(center);\n      let db = b.$subtract(center);\n      if (da[0] >= 0 && db[0] < 0)\n        return 1;\n      if (da[0] < 0 && db[0] >= 0)\n        return -1;\n      if (da[0] == 0 && db[0] == 0) {\n        if (da[1] >= 0 || db[1] >= 0)\n          return da[1] > db[1] ? 1 : -1;\n        return db[1] > da[1] ? 1 : -1;\n      }\n      let det = da.$cross2D(db);\n      if (det < 0)\n        return 1;\n      if (det > 0)\n        return -1;\n      return da[0] * da[0] + da[1] * da[1] > db[0] * db[0] + db[1] * db[1] ? 1 : -1;\n    };\n    return _pts.sort(fn);\n  }\n  static scale(ps, scale, anchor) {\n    let pts = Util.iterToArray(ps[0] !== void 0 && typeof ps[0] == \"number\" ? [ps] : ps);\n    let scs = typeof scale == \"number\" ? Pt.make(pts[0].length, scale) : scale;\n    if (!anchor)\n      anchor = Pt.make(pts[0].length, 0);\n    for (let i = 0, len = pts.length; i < len; i++) {\n      let p = pts[i];\n      for (let k = 0, lenP = p.length; k < lenP; k++) {\n        p[k] = anchor && anchor[k] ? anchor[k] + (p[k] - anchor[k]) * scs[k] : p[k] * scs[k];\n      }\n    }\n    return Geom;\n  }\n  static rotate2D(ps, angle, anchor, axis) {\n    let pts = Util.iterToArray(ps[0] !== void 0 && typeof ps[0] == \"number\" ? [ps] : ps);\n    let fn = anchor ? Mat.rotateAt2DMatrix : Mat.rotate2DMatrix;\n    if (!anchor)\n      anchor = Pt.make(pts[0].length, 0);\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n    for (let i = 0, len = pts.length; i < len; i++) {\n      let p = axis ? pts[i].$take(axis) : pts[i];\n      p.to(Mat.transform2D(p, fn(cos, sin, anchor)));\n      if (axis) {\n        for (let k = 0; k < axis.length; k++) {\n          pts[i][axis[k]] = p[k];\n        }\n      }\n    }\n    return Geom;\n  }\n  static shear2D(ps, scale, anchor, axis) {\n    let pts = Util.iterToArray(ps[0] !== void 0 && typeof ps[0] == \"number\" ? [ps] : ps);\n    let s = typeof scale == \"number\" ? [scale, scale] : scale;\n    if (!anchor)\n      anchor = Pt.make(pts[0].length, 0);\n    let fn = anchor ? Mat.shearAt2DMatrix : Mat.shear2DMatrix;\n    let tanx = Math.tan(s[0]);\n    let tany = Math.tan(s[1]);\n    for (let i = 0, len = pts.length; i < len; i++) {\n      let p = axis ? pts[i].$take(axis) : pts[i];\n      p.to(Mat.transform2D(p, fn(tanx, tany, anchor)));\n      if (axis) {\n        for (let k = 0; k < axis.length; k++) {\n          pts[i][axis[k]] = p[k];\n        }\n      }\n    }\n    return Geom;\n  }\n  static reflect2D(ps, line, axis) {\n    let pts = Util.iterToArray(ps[0] !== void 0 && typeof ps[0] == \"number\" ? [ps] : ps);\n    let _line = Util.iterToArray(line);\n    let mat = Mat.reflectAt2DMatrix(_line[0], _line[1]);\n    for (let i = 0, len = pts.length; i < len; i++) {\n      let p = axis ? pts[i].$take(axis) : pts[i];\n      p.to(Mat.transform2D(p, mat));\n      if (axis) {\n        for (let k = 0; k < axis.length; k++) {\n          pts[i][axis[k]] = p[k];\n        }\n      }\n    }\n    return Geom;\n  }\n  static cosTable() {\n    let cos = new Float64Array(360);\n    for (let i = 0; i < 360; i++)\n      cos[i] = Math.cos(i * Math.PI / 180);\n    let find = (rad) => cos[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n    return { table: cos, cos: find };\n  }\n  static sinTable() {\n    let sin = new Float64Array(360);\n    for (let i = 0; i < 360; i++)\n      sin[i] = Math.sin(i * Math.PI / 180);\n    let find = (rad) => sin[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n    return { table: sin, sin: find };\n  }\n};\nvar Shaping = class {\n  static linear(t, c = 1) {\n    return c * t;\n  }\n  static quadraticIn(t, c = 1) {\n    return c * t * t;\n  }\n  static quadraticOut(t, c = 1) {\n    return -c * t * (t - 2);\n  }\n  static quadraticInOut(t, c = 1) {\n    let dt = t * 2;\n    return t < 0.5 ? c / 2 * t * t * 4 : -c / 2 * ((dt - 1) * (dt - 3) - 1);\n  }\n  static cubicIn(t, c = 1) {\n    return c * t * t * t;\n  }\n  static cubicOut(t, c = 1) {\n    let dt = t - 1;\n    return c * (dt * dt * dt + 1);\n  }\n  static cubicInOut(t, c = 1) {\n    let dt = t * 2;\n    return t < 0.5 ? c / 2 * dt * dt * dt : c / 2 * ((dt - 2) * (dt - 2) * (dt - 2) + 2);\n  }\n  static exponentialIn(t, c = 1, p = 0.25) {\n    return c * Math.pow(t, 1 / p);\n  }\n  static exponentialOut(t, c = 1, p = 0.25) {\n    return c * Math.pow(t, p);\n  }\n  static sineIn(t, c = 1) {\n    return -c * Math.cos(t * Const.half_pi) + c;\n  }\n  static sineOut(t, c = 1) {\n    return c * Math.sin(t * Const.half_pi);\n  }\n  static sineInOut(t, c = 1) {\n    return -c / 2 * (Math.cos(Math.PI * t) - 1);\n  }\n  static cosineApprox(t, c = 1) {\n    let t2 = t * t;\n    let t4 = t2 * t2;\n    let t6 = t4 * t2;\n    return c * (4 * t6 / 9 - 17 * t4 / 9 + 22 * t2 / 9);\n  }\n  static circularIn(t, c = 1) {\n    return -c * (Math.sqrt(1 - t * t) - 1);\n  }\n  static circularOut(t, c = 1) {\n    let dt = t - 1;\n    return c * Math.sqrt(1 - dt * dt);\n  }\n  static circularInOut(t, c = 1) {\n    let dt = t * 2;\n    return t < 0.5 ? -c / 2 * (Math.sqrt(1 - dt * dt) - 1) : c / 2 * (Math.sqrt(1 - (dt - 2) * (dt - 2)) + 1);\n  }\n  static elasticIn(t, c = 1, p = 0.7) {\n    let dt = t - 1;\n    let s = p / Const.two_pi * 1.5707963267948966;\n    return c * (-Math.pow(2, 10 * dt) * Math.sin((dt - s) * Const.two_pi / p));\n  }\n  static elasticOut(t, c = 1, p = 0.7) {\n    let s = p / Const.two_pi * 1.5707963267948966;\n    return c * (Math.pow(2, -10 * t) * Math.sin((t - s) * Const.two_pi / p)) + c;\n  }\n  static elasticInOut(t, c = 1, p = 0.6) {\n    let dt = t * 2;\n    let s = p / Const.two_pi * 1.5707963267948966;\n    if (t < 0.5) {\n      dt -= 1;\n      return c * (-0.5 * (Math.pow(2, 10 * dt) * Math.sin((dt - s) * Const.two_pi / p)));\n    } else {\n      dt -= 1;\n      return c * (0.5 * (Math.pow(2, -10 * dt) * Math.sin((dt - s) * Const.two_pi / p))) + c;\n    }\n  }\n  static bounceIn(t, c = 1) {\n    return c - Shaping.bounceOut(1 - t, c);\n  }\n  static bounceOut(t, c = 1) {\n    if (t < 1 / 2.75) {\n      return c * (7.5625 * t * t);\n    } else if (t < 2 / 2.75) {\n      t -= 1.5 / 2.75;\n      return c * (7.5625 * t * t + 0.75);\n    } else if (t < 2.5 / 2.75) {\n      t -= 2.25 / 2.75;\n      return c * (7.5625 * t * t + 0.9375);\n    } else {\n      t -= 2.625 / 2.75;\n      return c * (7.5625 * t * t + 0.984375);\n    }\n  }\n  static bounceInOut(t, c = 1) {\n    return t < 0.5 ? Shaping.bounceIn(t * 2, c) / 2 : Shaping.bounceOut(t * 2 - 1, c) / 2 + c / 2;\n  }\n  static sigmoid(t, c = 1, p = 10) {\n    let d = p * (t - 0.5);\n    return c / (1 + Math.exp(-d));\n  }\n  static logSigmoid(t, c = 1, p = 0.7) {\n    p = Math.max(Const.epsilon, Math.min(1 - Const.epsilon, p));\n    p = 1 / (1 - p);\n    let A = 1 / (1 + Math.exp((t - 0.5) * p * -2));\n    let B = 1 / (1 + Math.exp(p));\n    let C = 1 / (1 + Math.exp(-p));\n    return c * (A - B) / (C - B);\n  }\n  static seat(t, c = 1, p = 0.5) {\n    if (t < 0.5) {\n      return c * Math.pow(2 * t, 1 - p) / 2;\n    } else {\n      return c * (1 - Math.pow(2 * (1 - t), 1 - p) / 2);\n    }\n  }\n  static quadraticBezier(t, c = 1, p = [0.05, 0.95]) {\n    let a = typeof p != \"number\" ? p[0] : p;\n    let b = typeof p != \"number\" ? p[1] : 0.5;\n    let om2a = 1 - 2 * a;\n    if (om2a === 0) {\n      om2a = Const.epsilon;\n    }\n    let d = (Math.sqrt(a * a + om2a * t) - a) / om2a;\n    return c * ((1 - 2 * b) * (d * d) + 2 * b * d);\n  }\n  static cubicBezier(t, c = 1, p1 = [0.1, 0.7], p2 = [0.9, 0.2]) {\n    let curve = new Group(new Pt(0, 0), new Pt(p1), new Pt(p2), new Pt(1, 1));\n    return c * Curve.bezierStep(new Pt(t * t * t, t * t, t, 1), Curve.controlPoints(curve)).y;\n  }\n  static quadraticTarget(t, c = 1, p1 = [0.2, 0.35]) {\n    let a = Math.min(1 - Const.epsilon, Math.max(Const.epsilon, p1[0]));\n    let b = Math.min(1, Math.max(0, p1[1]));\n    let A = (1 - b) / (1 - a) - b / a;\n    let B = (A * (a * a) - b) / a;\n    let y = A * (t * t) - B * t;\n    return c * Math.min(1, Math.max(0, y));\n  }\n  static cliff(t, c = 1, p = 0.5) {\n    return t > p ? c : 0;\n  }\n  static step(fn, steps, t, c, ...args) {\n    let s = 1 / steps;\n    let tt = Math.floor(t / s) * s;\n    return fn(tt, c, ...args);\n  }\n};\nvar Range = class {\n  constructor(g) {\n    this._dims = 0;\n    this._source = Group.fromPtArray(g);\n    this.calc();\n  }\n  get max() {\n    return this._max.clone();\n  }\n  get min() {\n    return this._min.clone();\n  }\n  get magnitude() {\n    return this._mag.clone();\n  }\n  calc() {\n    if (!this._source)\n      return;\n    let dims = this._source[0].length;\n    this._dims = dims;\n    let max = new Pt(dims);\n    let min = new Pt(dims);\n    let mag = new Pt(dims);\n    for (let i = 0; i < dims; i++) {\n      max[i] = Const.min;\n      min[i] = Const.max;\n      mag[i] = 0;\n      let s = this._source.zipSlice(i);\n      for (let k = 0, len = s.length; k < len; k++) {\n        max[i] = Math.max(max[i], s[k]);\n        min[i] = Math.min(min[i], s[k]);\n        mag[i] = max[i] - min[i];\n      }\n    }\n    this._max = max;\n    this._min = min;\n    this._mag = mag;\n    return this;\n  }\n  mapTo(min, max, exclude) {\n    let target = new Group();\n    for (let i = 0, len = this._source.length; i < len; i++) {\n      let g = this._source[i];\n      let n = new Pt(this._dims);\n      for (let k = 0; k < this._dims; k++) {\n        n[k] = exclude && exclude[k] ? g[k] : Num.mapToRange(g[k], this._min[k], this._max[k], min, max);\n      }\n      target.push(n);\n    }\n    return target;\n  }\n  append(pts, update = true) {\n    let _pts = Util.iterToArray(pts);\n    if (_pts[0].length !== this._dims)\n      throw new Error(`Dimensions don't match. ${this._dims} dimensions in Range and ${_pts[0].length} provided in parameter. `);\n    this._source = this._source.concat(_pts);\n    if (update)\n      this.calc();\n    return this;\n  }\n  ticks(count) {\n    let g = new Group();\n    for (let i = 0; i <= count; i++) {\n      let p = new Pt(this._dims);\n      for (let k = 0, len = this._max.length; k < len; k++) {\n        p[k] = Num.lerp(this._min[k], this._max[k], i / count);\n      }\n      g.push(p);\n    }\n    return g;\n  }\n};\n\n// src/Util.ts\nvar Const = {\n  xy: \"xy\",\n  yz: \"yz\",\n  xz: \"xz\",\n  xyz: \"xyz\",\n  horizontal: 0,\n  vertical: 1,\n  identical: 0,\n  right: 4,\n  bottom_right: 5,\n  bottom: 6,\n  bottom_left: 7,\n  left: 8,\n  top_left: 1,\n  top: 2,\n  top_right: 3,\n  epsilon: 1e-4,\n  max: Number.MAX_VALUE,\n  min: Number.MIN_VALUE,\n  pi: Math.PI,\n  two_pi: 6.283185307179586,\n  half_pi: 1.5707963267948966,\n  quarter_pi: 0.7853981633974483,\n  one_degree: 0.017453292519943295,\n  rad_to_deg: 57.29577951308232,\n  deg_to_rad: 0.017453292519943295,\n  gravity: 9.81,\n  newton: 0.10197,\n  gaussian: 0.3989422804014327\n};\nvar _Util = class {\n  static warnLevel(lv) {\n    if (lv) {\n      _Util._warnLevel = lv;\n    }\n    return _Util._warnLevel;\n  }\n  static getArgs(args) {\n    if (args.length < 1)\n      return [];\n    let pos = [];\n    let isArray = Array.isArray(args[0]) || ArrayBuffer.isView(args[0]);\n    if (typeof args[0] === \"number\") {\n      pos = Array.prototype.slice.call(args);\n    } else if (typeof args[0] === \"object\" && !isArray) {\n      let a = [\"x\", \"y\", \"z\", \"w\"];\n      let p = args[0];\n      for (let i = 0; i < a.length; i++) {\n        if (p.length && i >= p.length || !(a[i] in p))\n          break;\n        pos.push(p[a[i]]);\n      }\n    } else if (isArray) {\n      pos = [].slice.call(args[0]);\n    }\n    return pos;\n  }\n  static warn(message = \"error\", defaultReturn = void 0) {\n    if (_Util.warnLevel() == \"error\") {\n      throw new Error(message);\n    } else if (_Util.warnLevel() == \"warn\") {\n      console.warn(message);\n    }\n    return defaultReturn;\n  }\n  static randomInt(range, start = 0) {\n    _Util.warn(\"Util.randomInt is deprecated. Please use `Num.randomRange`\");\n    return Math.floor(Num.random() * range) + start;\n  }\n  static split(pts, size, stride, loopBack = false, matchSize = true) {\n    let chunks = [];\n    let part = [];\n    let st = stride || size;\n    let index = 0;\n    if (pts.length <= 0 || st <= 0)\n      return [];\n    while (index < pts.length) {\n      part = [];\n      for (let k = 0; k < size; k++) {\n        if (loopBack) {\n          part.push(pts[(index + k) % pts.length]);\n        } else {\n          if (index + k >= pts.length)\n            break;\n          part.push(pts[index + k]);\n        }\n      }\n      index += st;\n      if (!matchSize || matchSize && part.length === size)\n        chunks.push(part);\n    }\n    return chunks;\n  }\n  static flatten(pts, flattenAsGroup = true) {\n    let arr = flattenAsGroup ? new Group() : new Array();\n    return arr.concat.apply(arr, pts);\n  }\n  static combine(a, b, op) {\n    let result = [];\n    for (let i = 0, len = a.length; i < len; i++) {\n      for (let k = 0, lenB = b.length; k < lenB; k++) {\n        result.push(op(a[i], b[k]));\n      }\n    }\n    return result;\n  }\n  static zip(arrays) {\n    let z = [];\n    for (let i = 0, len = arrays[0].length; i < len; i++) {\n      let p = [];\n      for (let k = 0; k < arrays.length; k++) {\n        p.push(arrays[k][i]);\n      }\n      z.push(p);\n    }\n    return z;\n  }\n  static stepper(max, min = 0, stride = 1, callback) {\n    let c = min;\n    return function() {\n      c += stride;\n      if (c >= max) {\n        c = min + (c - max);\n      }\n      if (callback)\n        callback(c);\n      return c;\n    };\n  }\n  static forRange(fn, range, start = 0, step = 1) {\n    let temp = [];\n    for (let i = start, len = range; i < len; i += step) {\n      temp[i] = fn(i);\n    }\n    return temp;\n  }\n  static load(url, callback) {\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.onload = function() {\n      if (request.status >= 200 && request.status < 400) {\n        callback(request.responseText, true);\n      } else {\n        callback(`Server error (${request.status}) when loading \"${url}\"`, false);\n      }\n    };\n    request.onerror = function() {\n      callback(`Unknown network error`, false);\n    };\n    request.send();\n  }\n  static download(space, filename = \"pts_canvas_image\", filetype = \"png\", quality = 1) {\n    const ftype = filetype === \"jpg\" ? \"jpeg\" : filetype;\n    space.element.toBlob(function(blob) {\n      const link = document.createElement(\"a\");\n      const url = URL.createObjectURL(blob);\n      link.href = url;\n      link.download = `${filename}.${filetype}`;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n    }, `image/${ftype}`, quality);\n  }\n  static performance(avgFrames = 10) {\n    let last = Date.now();\n    let avg = [];\n    return function() {\n      const now = Date.now();\n      avg.push(now - last);\n      if (avg.length >= avgFrames)\n        avg.shift();\n      last = now;\n      return Math.floor(avg.reduce((a, b) => a + b, 0) / avg.length);\n    };\n  }\n  static arrayCheck(pts, minRequired = 2) {\n    if (Array.isArray(pts) && pts.length < minRequired) {\n      _Util.warn(`Requires ${minRequired} or more Pts in this Group.`);\n      return false;\n    }\n    return true;\n  }\n  static iterToArray(it) {\n    return !Array.isArray(it) ? [...it] : it;\n  }\n  static isMobile() {\n    return /iPhone|iPad|Android/i.test(navigator.userAgent);\n  }\n};\nvar Util = _Util;\nUtil._warnLevel = \"mute\";\n\n// src/Pt.ts\nvar Pt = class extends Float32Array {\n  constructor(...args) {\n    var __super = (...args) => {\n      super(...args);\n    };\n    if (args.length === 1 && typeof args[0] == \"number\") {\n      __super(args[0]);\n    } else {\n      __super(args.length > 0 ? Util.getArgs(args) : [0, 0]);\n    }\n  }\n  static make(dimensions, defaultValue = 0, randomize = false) {\n    let p = new Float32Array(dimensions);\n    if (defaultValue)\n      p.fill(defaultValue);\n    if (randomize) {\n      for (let i = 0, len = p.length; i < len; i++) {\n        p[i] = p[i] * Num.random();\n      }\n    }\n    return new Pt(p);\n  }\n  get id() {\n    return this._id;\n  }\n  set id(s) {\n    this._id = s;\n  }\n  get x() {\n    return this[0];\n  }\n  set x(n) {\n    this[0] = n;\n  }\n  get y() {\n    return this[1];\n  }\n  set y(n) {\n    this[1] = n;\n  }\n  get z() {\n    return this[2];\n  }\n  set z(n) {\n    this[2] = n;\n  }\n  get w() {\n    return this[3];\n  }\n  set w(n) {\n    this[3] = n;\n  }\n  clone() {\n    return new Pt(this);\n  }\n  equals(p, threshold = 1e-6) {\n    for (let i = 0, len = this.length; i < len; i++) {\n      if (Math.abs(this[i] - p[i]) > threshold)\n        return false;\n    }\n    return true;\n  }\n  to(...args) {\n    let p = Util.getArgs(args);\n    for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n      this[i] = p[i];\n    }\n    return this;\n  }\n  $to(...args) {\n    return this.clone().to(...args);\n  }\n  toAngle(radian, magnitude, anchorFromPt = false) {\n    let m = magnitude != void 0 ? magnitude : this.magnitude();\n    let change = [Math.cos(radian) * m, Math.sin(radian) * m];\n    return anchorFromPt ? this.add(change) : this.to(change);\n  }\n  op(fn) {\n    let self = this;\n    return (...params) => {\n      return fn(self, ...params);\n    };\n  }\n  ops(fns) {\n    let _ops = [];\n    for (let i = 0, len = fns.length; i < len; i++) {\n      _ops.push(this.op(fns[i]));\n    }\n    return _ops;\n  }\n  $take(axis) {\n    let p = [];\n    for (let i = 0, len = axis.length; i < len; i++) {\n      p.push(this[axis[i]] || 0);\n    }\n    return new Pt(p);\n  }\n  $concat(...args) {\n    return new Pt(this.toArray().concat(Util.getArgs(args)));\n  }\n  add(...args) {\n    args.length === 1 && typeof args[0] == \"number\" ? Vec.add(this, args[0]) : Vec.add(this, Util.getArgs(args));\n    return this;\n  }\n  $add(...args) {\n    return this.clone().add(...args);\n  }\n  subtract(...args) {\n    args.length === 1 && typeof args[0] == \"number\" ? Vec.subtract(this, args[0]) : Vec.subtract(this, Util.getArgs(args));\n    return this;\n  }\n  $subtract(...args) {\n    return this.clone().subtract(...args);\n  }\n  multiply(...args) {\n    args.length === 1 && typeof args[0] == \"number\" ? Vec.multiply(this, args[0]) : Vec.multiply(this, Util.getArgs(args));\n    return this;\n  }\n  $multiply(...args) {\n    return this.clone().multiply(...args);\n  }\n  divide(...args) {\n    args.length === 1 && typeof args[0] == \"number\" ? Vec.divide(this, args[0]) : Vec.divide(this, Util.getArgs(args));\n    return this;\n  }\n  $divide(...args) {\n    return this.clone().divide(...args);\n  }\n  magnitudeSq() {\n    return Vec.dot(this, this);\n  }\n  magnitude() {\n    return Vec.magnitude(this);\n  }\n  unit(magnitude = void 0) {\n    Vec.unit(this, magnitude);\n    return this;\n  }\n  $unit(magnitude = void 0) {\n    return this.clone().unit(magnitude);\n  }\n  dot(...args) {\n    return Vec.dot(this, Util.getArgs(args));\n  }\n  $cross2D(...args) {\n    return Vec.cross2D(this, Util.getArgs(args));\n  }\n  $cross(...args) {\n    return Vec.cross(this, Util.getArgs(args));\n  }\n  $project(...args) {\n    return this.$multiply(this.dot(...args) / this.magnitudeSq());\n  }\n  projectScalar(...args) {\n    return this.dot(...args) / this.magnitude();\n  }\n  abs() {\n    Vec.abs(this);\n    return this;\n  }\n  $abs() {\n    return this.clone().abs();\n  }\n  floor() {\n    Vec.floor(this);\n    return this;\n  }\n  $floor() {\n    return this.clone().floor();\n  }\n  ceil() {\n    Vec.ceil(this);\n    return this;\n  }\n  $ceil() {\n    return this.clone().ceil();\n  }\n  round() {\n    Vec.round(this);\n    return this;\n  }\n  $round() {\n    return this.clone().round();\n  }\n  minValue() {\n    return Vec.min(this);\n  }\n  maxValue() {\n    return Vec.max(this);\n  }\n  $min(...args) {\n    let p = Util.getArgs(args);\n    let m = this.clone();\n    for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n      m[i] = Math.min(this[i], p[i]);\n    }\n    return m;\n  }\n  $max(...args) {\n    let p = Util.getArgs(args);\n    let m = this.clone();\n    for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n      m[i] = Math.max(this[i], p[i]);\n    }\n    return m;\n  }\n  angle(axis = Const.xy) {\n    return Math.atan2(this[axis[1]], this[axis[0]]);\n  }\n  angleBetween(p, axis = Const.xy) {\n    return Geom.boundRadian(this.angle(axis)) - Geom.boundRadian(p.angle(axis));\n  }\n  scale(scale, anchor) {\n    Geom.scale(this, scale, anchor || Pt.make(this.length, 0));\n    return this;\n  }\n  rotate2D(angle, anchor, axis) {\n    Geom.rotate2D(this, angle, anchor || Pt.make(this.length, 0), axis);\n    return this;\n  }\n  shear2D(scale, anchor, axis) {\n    Geom.shear2D(this, scale, anchor || Pt.make(this.length, 0), axis);\n    return this;\n  }\n  reflect2D(line, axis) {\n    Geom.reflect2D(this, line, axis);\n    return this;\n  }\n  toString() {\n    return `Pt(${this.join(\", \")})`;\n  }\n  toArray() {\n    return [].slice.call(this);\n  }\n  toGroup() {\n    return new Group(Pt.make(this.length), this.clone());\n  }\n  toBound() {\n    return new Bound(Pt.make(this.length), this.clone());\n  }\n};\nvar Group = class extends Array {\n  constructor(...args) {\n    super(...args);\n  }\n  get id() {\n    return this._id;\n  }\n  set id(s) {\n    this._id = s;\n  }\n  get p1() {\n    return this[0];\n  }\n  get p2() {\n    return this[1];\n  }\n  get p3() {\n    return this[2];\n  }\n  get p4() {\n    return this[3];\n  }\n  get q1() {\n    return this[this.length - 1];\n  }\n  get q2() {\n    return this[this.length - 2];\n  }\n  get q3() {\n    return this[this.length - 3];\n  }\n  get q4() {\n    return this[this.length - 4];\n  }\n  clone() {\n    let group = new Group();\n    for (let i = 0, len = this.length; i < len; i++) {\n      group.push(this[i].clone());\n    }\n    return group;\n  }\n  static fromArray(list) {\n    let g = new Group();\n    for (let li of list) {\n      let p = li instanceof Pt ? li : new Pt(li);\n      g.push(p);\n    }\n    return g;\n  }\n  static fromPtArray(list) {\n    return Group.from(list);\n  }\n  split(chunkSize, stride, loopBack = false) {\n    let sp = Util.split(this, chunkSize, stride, loopBack);\n    return sp;\n  }\n  insert(pts, index = 0) {\n    Group.prototype.splice.apply(this, [index, 0, ...pts]);\n    return this;\n  }\n  remove(index = 0, count = 1) {\n    let param = index < 0 ? [index * -1 - 1, count] : [index, count];\n    return Group.prototype.splice.apply(this, param);\n  }\n  segments(pts_per_segment = 2, stride = 1, loopBack = false) {\n    return this.split(pts_per_segment, stride, loopBack);\n  }\n  lines() {\n    return this.segments(2, 1);\n  }\n  centroid() {\n    return Geom.centroid(this);\n  }\n  boundingBox() {\n    return Geom.boundingBox(this);\n  }\n  anchorTo(ptOrIndex = 0) {\n    Geom.anchor(this, ptOrIndex, \"to\");\n  }\n  anchorFrom(ptOrIndex = 0) {\n    Geom.anchor(this, ptOrIndex, \"from\");\n  }\n  op(fn) {\n    let self = this;\n    return (...params) => {\n      return fn(self, ...params);\n    };\n  }\n  ops(fns) {\n    let _ops = [];\n    for (let i = 0, len = fns.length; i < len; i++) {\n      _ops.push(this.op(fns[i]));\n    }\n    return _ops;\n  }\n  interpolate(t) {\n    t = Num.clamp(t, 0, 1);\n    let chunk = this.length - 1;\n    let tc = 1 / (this.length - 1);\n    let idx = Math.floor(t / tc);\n    return Geom.interpolate(this[idx], this[Math.min(this.length - 1, idx + 1)], (t - idx * tc) * chunk);\n  }\n  moveBy(...args) {\n    return this.add(...args);\n  }\n  moveTo(...args) {\n    let d = new Pt(Util.getArgs(args)).subtract(this[0]);\n    this.moveBy(d);\n    return this;\n  }\n  scale(scale, anchor) {\n    for (let i = 0, len = this.length; i < len; i++) {\n      Geom.scale(this[i], scale, anchor || this[0]);\n    }\n    return this;\n  }\n  rotate2D(angle, anchor, axis) {\n    for (let i = 0, len = this.length; i < len; i++) {\n      Geom.rotate2D(this[i], angle, anchor || this[0], axis);\n    }\n    return this;\n  }\n  shear2D(scale, anchor, axis) {\n    for (let i = 0, len = this.length; i < len; i++) {\n      Geom.shear2D(this[i], scale, anchor || this[0], axis);\n    }\n    return this;\n  }\n  reflect2D(line, axis) {\n    for (let i = 0, len = this.length; i < len; i++) {\n      Geom.reflect2D(this[i], line, axis);\n    }\n    return this;\n  }\n  sortByDimension(dim, desc = false) {\n    return this.sort((a, b) => desc ? b[dim] - a[dim] : a[dim] - b[dim]);\n  }\n  forEachPt(ptFn, ...args) {\n    if (!this[0][ptFn]) {\n      Util.warn(`${ptFn} is not a function of Pt`);\n      return this;\n    }\n    for (let i = 0, len = this.length; i < len; i++) {\n      this[i] = this[i][ptFn](...args);\n    }\n    return this;\n  }\n  add(...args) {\n    return this.forEachPt(\"add\", ...args);\n  }\n  subtract(...args) {\n    return this.forEachPt(\"subtract\", ...args);\n  }\n  multiply(...args) {\n    return this.forEachPt(\"multiply\", ...args);\n  }\n  divide(...args) {\n    return this.forEachPt(\"divide\", ...args);\n  }\n  $matrixAdd(g) {\n    return Mat.add(this, g);\n  }\n  $matrixMultiply(g, transposed = false, elementwise = false) {\n    return Mat.multiply(this, g, transposed, elementwise);\n  }\n  zipSlice(index, defaultValue = false) {\n    return Mat.zipSlice(this, index, defaultValue);\n  }\n  $zip(defaultValue = void 0, useLongest = false) {\n    return Mat.zip(this, defaultValue, useLongest);\n  }\n  toBound() {\n    return Bound.fromGroup(this);\n  }\n  toString() {\n    return \"Group[ \" + this.reduce((p, c) => p + c.toString() + \" \", \"\") + \" ]\";\n  }\n};\nvar Bound = class extends Group {\n  constructor(...args) {\n    super(...args);\n    this._center = new Pt();\n    this._size = new Pt();\n    this._topLeft = new Pt();\n    this._bottomRight = new Pt();\n    this._inited = false;\n    this.init();\n  }\n  static fromBoundingRect(rect) {\n    let b = new Bound(new Pt(rect.left || 0, rect.top || 0), new Pt(rect.right || 0, rect.bottom || 0));\n    if (rect.width && rect.height)\n      b.size = new Pt(rect.width, rect.height);\n    return b;\n  }\n  static fromGroup(g) {\n    let _g = Util.iterToArray(g);\n    if (_g.length < 2)\n      throw new Error(\"Cannot create a Bound from a group that has less than 2 Pt\");\n    return new Bound(_g[0], _g[_g.length - 1]);\n  }\n  init() {\n    if (this.p1) {\n      this._size = this.p1.clone();\n      this._inited = true;\n    }\n    if (this.p1 && this.p2) {\n      let a = this.p1;\n      let b = this.p2;\n      this.topLeft = a.$min(b);\n      this._bottomRight = a.$max(b);\n      this._updateSize();\n      this._inited = true;\n    }\n  }\n  clone() {\n    return new Bound(this._topLeft.clone(), this._bottomRight.clone());\n  }\n  _updateSize() {\n    this._size = this._bottomRight.$subtract(this._topLeft).abs();\n    this._updateCenter();\n  }\n  _updateCenter() {\n    this._center = this._size.$multiply(0.5).add(this._topLeft);\n  }\n  _updatePosFromTop() {\n    this._bottomRight = this._topLeft.$add(this._size);\n    this._updateCenter();\n  }\n  _updatePosFromBottom() {\n    this._topLeft = this._bottomRight.$subtract(this._size);\n    this._updateCenter();\n  }\n  _updatePosFromCenter() {\n    let half = this._size.$multiply(0.5);\n    this._topLeft = this._center.$subtract(half);\n    this._bottomRight = this._center.$add(half);\n  }\n  get size() {\n    return new Pt(this._size);\n  }\n  set size(p) {\n    this._size = new Pt(p);\n    this._updatePosFromTop();\n  }\n  get center() {\n    return new Pt(this._center);\n  }\n  set center(p) {\n    this._center = new Pt(p);\n    this._updatePosFromCenter();\n  }\n  get topLeft() {\n    return new Pt(this._topLeft);\n  }\n  set topLeft(p) {\n    this._topLeft = new Pt(p);\n    this[0] = this._topLeft;\n    this._updateSize();\n  }\n  get bottomRight() {\n    return new Pt(this._bottomRight);\n  }\n  set bottomRight(p) {\n    this._bottomRight = new Pt(p);\n    this[1] = this._bottomRight;\n    this._updateSize();\n  }\n  get width() {\n    return this._size.length > 0 ? this._size.x : 0;\n  }\n  set width(w) {\n    this._size.x = w;\n    this._updatePosFromTop();\n  }\n  get height() {\n    return this._size.length > 1 ? this._size.y : 0;\n  }\n  set height(h) {\n    this._size.y = h;\n    this._updatePosFromTop();\n  }\n  get depth() {\n    return this._size.length > 2 ? this._size.z : 0;\n  }\n  set depth(d) {\n    this._size.z = d;\n    this._updatePosFromTop();\n  }\n  get x() {\n    return this.topLeft.x;\n  }\n  get y() {\n    return this.topLeft.y;\n  }\n  get z() {\n    return this.topLeft.z;\n  }\n  get inited() {\n    return this._inited;\n  }\n  update() {\n    this._topLeft = this[0];\n    this._bottomRight = this[1];\n    this._updateSize();\n    return this;\n  }\n};\n\n// src/UI.ts\nvar UIShape = {\n  rectangle: \"rectangle\",\n  circle: \"circle\",\n  polygon: \"polygon\",\n  polyline: \"polyline\",\n  line: \"line\"\n};\nvar UIPointerActions = {\n  up: \"up\",\n  down: \"down\",\n  move: \"move\",\n  drag: \"drag\",\n  uidrag: \"uidrag\",\n  drop: \"drop\",\n  uidrop: \"uidrop\",\n  over: \"over\",\n  out: \"out\",\n  enter: \"enter\",\n  leave: \"leave\",\n  click: \"click\",\n  keydown: \"keydown\",\n  keyup: \"keyup\",\n  contextmenu: \"contextmenu\",\n  all: \"all\"\n};\nvar _UI = class {\n  constructor(group, shape, states = {}, id) {\n    this._holds = /* @__PURE__ */ new Map();\n    this._group = Group.fromArray(group);\n    this._shape = shape;\n    this._id = id === void 0 ? `ui_${_UI._counter++}` : id;\n    this._states = states;\n    this._actions = {};\n  }\n  static fromRectangle(group, states, id) {\n    return new this(group, UIShape.rectangle, states, id);\n  }\n  static fromCircle(group, states, id) {\n    return new this(group, UIShape.circle, states, id);\n  }\n  static fromPolygon(group, states, id) {\n    return new this(group, UIShape.polygon, states, id);\n  }\n  static fromUI(ui, states, id) {\n    return new this(ui.group, ui.shape, states || ui._states, id);\n  }\n  get id() {\n    return this._id;\n  }\n  set id(d) {\n    this._id = d;\n  }\n  get group() {\n    return this._group;\n  }\n  set group(d) {\n    this._group = d;\n  }\n  get shape() {\n    return this._shape;\n  }\n  set shape(d) {\n    this._shape = d;\n  }\n  state(key, value) {\n    if (!key)\n      return null;\n    if (value !== void 0) {\n      this._states[key] = value;\n      return this;\n    }\n    return this._states[key];\n  }\n  on(type, fn) {\n    if (!this._actions[type])\n      this._actions[type] = [];\n    return _UI._addHandler(this._actions[type], fn);\n  }\n  off(type, which) {\n    if (!this._actions[type])\n      return false;\n    if (which === void 0) {\n      delete this._actions[type];\n      return true;\n    } else {\n      return _UI._removeHandler(this._actions[type], which);\n    }\n  }\n  listen(type, p, evt) {\n    if (this._actions[type] !== void 0) {\n      if (this._within(p) || Array.from(this._holds.values()).indexOf(type) >= 0) {\n        _UI._trigger(this._actions[type], this, p, type, evt);\n        return true;\n      } else if (this._actions[\"all\"]) {\n        _UI._trigger(this._actions[\"all\"], this, p, type, evt);\n        return true;\n      }\n    }\n    return false;\n  }\n  hold(type) {\n    let newKey = Math.max(0, ...Array.from(this._holds.keys())) + 1;\n    this._holds.set(newKey, type);\n    return newKey;\n  }\n  unhold(key) {\n    if (key !== void 0) {\n      this._holds.delete(key);\n    } else {\n      this._holds.clear();\n    }\n  }\n  static track(uis, type, p, evt) {\n    for (let i = 0, len = uis.length; i < len; i++) {\n      uis[i].listen(type, p, evt);\n    }\n  }\n  render(fn) {\n    fn(this._group, this._states);\n  }\n  toString() {\n    return `UI ${this.group.toString}`;\n  }\n  _within(p) {\n    let fn = null;\n    if (this._shape === UIShape.rectangle) {\n      fn = Rectangle.withinBound;\n    } else if (this._shape === UIShape.circle) {\n      fn = Circle.withinBound;\n    } else if (this._shape === UIShape.polygon) {\n      fn = Polygon.hasIntersectPoint;\n    } else {\n      return false;\n    }\n    return fn(this._group, p);\n  }\n  static _trigger(fns, target, pt, type, evt) {\n    if (fns) {\n      for (let i = 0, len = fns.length; i < len; i++) {\n        if (fns[i])\n          fns[i](target, pt, type, evt);\n      }\n    }\n  }\n  static _addHandler(fns, fn) {\n    if (fn) {\n      fns.push(fn);\n      return fns.length - 1;\n    } else {\n      return -1;\n    }\n  }\n  static _removeHandler(fns, index) {\n    if (index >= 0 && index < fns.length) {\n      let temp = fns.length;\n      fns.splice(index, 1);\n      return temp > fns.length;\n    } else {\n      return false;\n    }\n  }\n};\nvar UI = _UI;\nUI._counter = 0;\nvar UIButton = class extends UI {\n  constructor(group, shape, states = {}, id) {\n    super(group, shape, states, id);\n    this._hoverID = -1;\n    if (states.hover === void 0)\n      this._states[\"hover\"] = false;\n    if (states.clicks === void 0)\n      this._states[\"clicks\"] = 0;\n    const UA = UIPointerActions;\n    this.on(UA.up, (target, pt, type, evt) => {\n      this.state(\"clicks\", this._states.clicks + 1);\n    });\n    this.on(UA.move, (target, pt, type, evt) => {\n      let hover = this._within(pt);\n      if (hover && !this._states.hover) {\n        this.state(\"hover\", true);\n        UI._trigger(this._actions[UA.enter], this, pt, UA.enter, evt);\n        var _capID = this.hold(UA.move);\n        this._hoverID = this.on(UA.move, (t, p) => {\n          if (!this._within(p) && !this.state(\"dragging\")) {\n            this.state(\"hover\", false);\n            UI._trigger(this._actions[UA.leave], this, pt, UA.leave, evt);\n            this.off(UA.move, this._hoverID);\n            this.unhold(_capID);\n          }\n        });\n      }\n    });\n  }\n  onClick(fn) {\n    return this.on(UIPointerActions.up, fn);\n  }\n  offClick(id) {\n    return this.off(UIPointerActions.up, id);\n  }\n  onContextMenu(fn) {\n    return this.on(UIPointerActions.contextmenu, fn);\n  }\n  offContextMenu(id) {\n    return this.off(UIPointerActions.contextmenu, id);\n  }\n  onHover(enter, leave) {\n    var ids = [void 0, void 0];\n    if (enter)\n      ids[0] = this.on(UIPointerActions.enter, enter);\n    if (leave)\n      ids[1] = this.on(UIPointerActions.leave, leave);\n    return ids;\n  }\n  offHover(enterID, leaveID) {\n    var s = [false, false];\n    if (enterID === void 0 || enterID >= 0)\n      s[0] = this.off(UIPointerActions.enter, enterID);\n    if (leaveID === void 0 || leaveID >= 0)\n      s[1] = this.off(UIPointerActions.leave, leaveID);\n    return s;\n  }\n};\nvar UIDragger = class extends UIButton {\n  constructor(group, shape, states = {}, id) {\n    super(group, shape, states, id);\n    this._draggingID = -1;\n    this._moveHoldID = -1;\n    this._dropHoldID = -1;\n    this._upHoldID = -1;\n    if (states.dragging === void 0)\n      this._states[\"dragging\"] = false;\n    if (states.moved === void 0)\n      this._states[\"moved\"] = false;\n    if (states.offset === void 0)\n      this._states[\"offset\"] = new Pt();\n    const UA = UIPointerActions;\n    this.on(UA.down, (target, pt, type, evt) => {\n      if (this._moveHoldID === -1) {\n        this.state(\"dragging\", true);\n        this.state(\"offset\", new Pt(pt).subtract(target.group[0]));\n        this._moveHoldID = this.hold(UA.move);\n      }\n      if (this._dropHoldID === -1) {\n        this._dropHoldID = this.hold(UA.drop);\n      }\n      if (this._upHoldID === -1) {\n        this._upHoldID = this.hold(UA.up);\n      }\n      if (this._draggingID === -1) {\n        this._draggingID = this.on(UA.move, (t, p) => {\n          if (this.state(\"dragging\")) {\n            UI._trigger(this._actions[UA.uidrag], t, p, UA.uidrag, evt);\n            this.state(\"moved\", true);\n          }\n        });\n      }\n    });\n    const endDrag = (target, pt, type, evt) => {\n      this.state(\"dragging\", false);\n      this.off(UA.move, this._draggingID);\n      this._draggingID = -1;\n      this.unhold(this._moveHoldID);\n      this._moveHoldID = -1;\n      this.unhold(this._dropHoldID);\n      this._dropHoldID = -1;\n      this.unhold(this._upHoldID);\n      this._upHoldID = -1;\n      if (this.state(\"moved\")) {\n        UI._trigger(this._actions[UA.uidrop], target, pt, UA.uidrop, evt);\n        this.state(\"moved\", false);\n      }\n    };\n    this.on(UA.drop, endDrag);\n    this.on(UA.up, endDrag);\n    this.on(UA.out, endDrag);\n  }\n  onDrag(fn) {\n    return this.on(UIPointerActions.uidrag, fn);\n  }\n  offDrag(id) {\n    return this.off(UIPointerActions.uidrag, id);\n  }\n  onDrop(fn) {\n    return this.on(UIPointerActions.uidrop, fn);\n  }\n  offDrop(id) {\n    return this.off(UIPointerActions.uidrop, id);\n  }\n};\n\n// src/Space.ts\nvar Space = class {\n  constructor() {\n    this.id = \"space\";\n    this.bound = new Bound();\n    this._time = { prev: 0, diff: 0, end: -1, min: 0 };\n    this.players = {};\n    this.playerCount = 0;\n    this._animID = -1;\n    this._pause = false;\n    this._refresh = void 0;\n    this._pointer = new Pt();\n    this._isReady = false;\n    this._playing = false;\n  }\n  refresh(b) {\n    this._refresh = b;\n    return this;\n  }\n  minFrameTime(ms = 0) {\n    this._time.min = ms;\n  }\n  add(p) {\n    let player = typeof p == \"function\" ? { animate: p } : p;\n    let k = this.playerCount++;\n    let pid = this.id + k;\n    this.players[pid] = player;\n    player.animateID = pid;\n    if (player.resize && this.bound.inited)\n      player.resize(this.bound);\n    if (this._refresh === void 0)\n      this._refresh = true;\n    return this;\n  }\n  remove(player) {\n    delete this.players[player.animateID];\n    return this;\n  }\n  removeAll() {\n    this.players = {};\n    return this;\n  }\n  play(time = 0) {\n    if (time === 0 && this._animID !== -1) {\n      return;\n    }\n    this._animID = requestAnimationFrame(this.play.bind(this));\n    if (this._pause)\n      return this;\n    this._time.diff = time - this._time.prev;\n    if (this._time.diff < this._time.min)\n      return this;\n    this._time.prev = time;\n    try {\n      this.playItems(time);\n    } catch (err) {\n      cancelAnimationFrame(this._animID);\n      this._animID = -1;\n      this._playing = false;\n      throw err;\n    }\n    return this;\n  }\n  replay() {\n    this._time.end = -1;\n    this.play();\n  }\n  playItems(time) {\n    this._playing = true;\n    if (this._refresh)\n      this.clear();\n    if (this._isReady) {\n      for (let k in this.players) {\n        if (this.players[k].animate)\n          this.players[k].animate(time, this._time.diff, this);\n      }\n    }\n    if (this._time.end >= 0 && time > this._time.end) {\n      cancelAnimationFrame(this._animID);\n      this._animID = -1;\n      this._playing = false;\n    }\n  }\n  pause(toggle = false) {\n    this._pause = toggle ? !this._pause : true;\n    return this;\n  }\n  resume() {\n    this._pause = false;\n    return this;\n  }\n  stop(t = 0) {\n    this._time.end = t;\n    return this;\n  }\n  playOnce(duration = 0) {\n    this.play();\n    this.stop(duration);\n    return this;\n  }\n  render(context) {\n    if (this._renderFunc)\n      this._renderFunc(context, this);\n    return this;\n  }\n  set customRendering(f) {\n    this._renderFunc = f;\n  }\n  get customRendering() {\n    return this._renderFunc;\n  }\n  get isPlaying() {\n    return this._playing;\n  }\n  get outerBound() {\n    return this.bound.clone();\n  }\n  get innerBound() {\n    return new Bound(Pt.make(this.size.length, 0), this.size.clone());\n  }\n  get size() {\n    return this.bound.size.clone();\n  }\n  get center() {\n    return this.size.divide(2);\n  }\n  get width() {\n    return this.bound.width;\n  }\n  get height() {\n    return this.bound.height;\n  }\n};\nvar MultiTouchSpace = class extends Space {\n  constructor() {\n    super(...arguments);\n    this._pressed = false;\n    this._dragged = false;\n    this._hasMouse = false;\n    this._hasTouch = false;\n    this._hasKeyboard = false;\n  }\n  get pointer() {\n    let p = this._pointer.clone();\n    p.id = this._pointer.id;\n    return p;\n  }\n  bindCanvas(evt, callback, options = {}, customTarget) {\n    const target = customTarget ? customTarget : this._canvas;\n    target.addEventListener(evt, callback, options);\n  }\n  unbindCanvas(evt, callback, options = {}, customTarget) {\n    const target = customTarget ? customTarget : this._canvas;\n    target.removeEventListener(evt, callback, options);\n  }\n  bindDoc(evt, callback, options = {}) {\n    if (document) {\n      document.addEventListener(evt, callback, options);\n    }\n  }\n  unbindDoc(evt, callback, options = {}) {\n    if (document) {\n      document.removeEventListener(evt, callback, options);\n    }\n  }\n  bindMouse(bind = true, customTarget) {\n    if (bind) {\n      this._mouseDown = this._mouseDown.bind(this);\n      this._mouseUp = this._mouseUp.bind(this);\n      this._mouseOver = this._mouseOver.bind(this);\n      this._mouseOut = this._mouseOut.bind(this);\n      this._mouseMove = this._mouseMove.bind(this);\n      this._mouseClick = this._mouseClick.bind(this);\n      this._contextMenu = this._contextMenu.bind(this);\n      this.bindCanvas(\"mousedown\", this._mouseDown, {}, customTarget);\n      this.bindCanvas(\"mouseup\", this._mouseUp, {}, customTarget);\n      this.bindCanvas(\"mouseover\", this._mouseOver, {}, customTarget);\n      this.bindCanvas(\"mouseout\", this._mouseOut, {}, customTarget);\n      this.bindCanvas(\"mousemove\", this._mouseMove, {}, customTarget);\n      this.bindCanvas(\"click\", this._mouseClick, {}, customTarget);\n      this.bindCanvas(\"contextmenu\", this._contextMenu, {}, customTarget);\n      this._hasMouse = true;\n    } else {\n      this.unbindCanvas(\"mousedown\", this._mouseDown, {}, customTarget);\n      this.unbindCanvas(\"mouseup\", this._mouseUp, {}, customTarget);\n      this.unbindCanvas(\"mouseover\", this._mouseOver, {}, customTarget);\n      this.unbindCanvas(\"mouseout\", this._mouseOut, {}, customTarget);\n      this.unbindCanvas(\"mousemove\", this._mouseMove, {}, customTarget);\n      this.unbindCanvas(\"click\", this._mouseClick, {}, customTarget);\n      this.unbindCanvas(\"contextmenu\", this._contextMenu, {}, customTarget);\n      this._hasMouse = false;\n    }\n    return this;\n  }\n  bindTouch(bind = true, passive = false, customTarget) {\n    if (bind) {\n      this.bindCanvas(\"touchstart\", this._touchStart.bind(this), { passive }, customTarget);\n      this.bindCanvas(\"touchend\", this._mouseUp.bind(this), {}, customTarget);\n      this.bindCanvas(\"touchmove\", this._touchMove.bind(this), { passive }, customTarget);\n      this.bindCanvas(\"touchcancel\", this._mouseOut.bind(this), {}, customTarget);\n      this._hasTouch = true;\n    } else {\n      this.unbindCanvas(\"touchstart\", this._touchStart.bind(this), { passive }, customTarget);\n      this.unbindCanvas(\"touchend\", this._mouseUp.bind(this), {}, customTarget);\n      this.unbindCanvas(\"touchmove\", this._touchMove.bind(this), { passive }, customTarget);\n      this.unbindCanvas(\"touchcancel\", this._mouseOut.bind(this), {}, customTarget);\n      this._hasTouch = false;\n    }\n    return this;\n  }\n  bindKeyboard(bind = true) {\n    if (bind) {\n      this._keyDownBind = this._keyDown.bind(this);\n      this._keyUpBind = this._keyUp.bind(this);\n      this.bindDoc(\"keydown\", this._keyDownBind, {});\n      this.bindDoc(\"keyup\", this._keyUpBind, {});\n      this._hasKeyboard = true;\n    } else {\n      this.unbindDoc(\"keydown\", this._keyDownBind, {});\n      this.unbindDoc(\"keyup\", this._keyUpBind, {});\n      this._hasKeyboard = false;\n    }\n    return this;\n  }\n  touchesToPoints(evt, which = \"touches\") {\n    if (!evt || !evt[which])\n      return [];\n    let ts = [];\n    for (var i = 0; i < evt[which].length; i++) {\n      let t = evt[which].item(i);\n      ts.push(new Pt(t.pageX - this.bound.topLeft.x, t.pageY - this.bound.topLeft.y));\n    }\n    return ts;\n  }\n  _mouseAction(type, evt) {\n    if (!this.isPlaying)\n      return;\n    let px = 0, py = 0;\n    if (evt instanceof MouseEvent) {\n      for (let k in this.players) {\n        if (this.players.hasOwnProperty(k)) {\n          let v = this.players[k];\n          px = evt.pageX - this.outerBound.x;\n          py = evt.pageY - this.outerBound.y;\n          if (v.action)\n            v.action(type, px, py, evt);\n        }\n      }\n    } else {\n      for (let k in this.players) {\n        if (this.players.hasOwnProperty(k)) {\n          let v = this.players[k];\n          let c = evt.changedTouches && evt.changedTouches.length > 0;\n          let touch = evt.changedTouches.item(0);\n          px = c ? touch.pageX - this.outerBound.x : 0;\n          py = c ? touch.pageY - this.outerBound.y : 0;\n          if (v.action)\n            v.action(type, px, py, evt);\n        }\n      }\n    }\n    if (type) {\n      this._pointer.to(px, py);\n      this._pointer.id = type;\n    }\n  }\n  _mouseDown(evt) {\n    this._mouseAction(UIPointerActions.down, evt);\n    this._pressed = true;\n    return false;\n  }\n  _mouseUp(evt) {\n    if (this._dragged) {\n      this._mouseAction(UIPointerActions.drop, evt);\n    } else {\n      this._mouseAction(UIPointerActions.up, evt);\n    }\n    this._pressed = false;\n    this._dragged = false;\n    return false;\n  }\n  _mouseMove(evt) {\n    this._mouseAction(UIPointerActions.move, evt);\n    if (this._pressed) {\n      this._dragged = true;\n      this._mouseAction(UIPointerActions.drag, evt);\n    }\n    return false;\n  }\n  _mouseOver(evt) {\n    this._mouseAction(UIPointerActions.over, evt);\n    return false;\n  }\n  _mouseOut(evt) {\n    this._mouseAction(UIPointerActions.out, evt);\n    if (this._dragged)\n      this._mouseAction(UIPointerActions.drop, evt);\n    this._dragged = false;\n    return false;\n  }\n  _mouseClick(evt) {\n    this._mouseAction(UIPointerActions.click, evt);\n    this._pressed = false;\n    this._dragged = false;\n    return false;\n  }\n  _contextMenu(evt) {\n    this._mouseAction(UIPointerActions.contextmenu, evt);\n    return false;\n  }\n  _touchMove(evt) {\n    this._mouseMove(evt);\n    evt.preventDefault();\n    return false;\n  }\n  _touchStart(evt) {\n    this._mouseDown(evt);\n    evt.preventDefault();\n    return false;\n  }\n  _keyDown(evt) {\n    this._keyboardAction(UIPointerActions.keydown, evt);\n    return false;\n  }\n  _keyUp(evt) {\n    this._keyboardAction(UIPointerActions.keyup, evt);\n    return false;\n  }\n  _keyboardAction(type, evt) {\n    if (!this.isPlaying)\n      return;\n    for (let k in this.players) {\n      if (this.players.hasOwnProperty(k)) {\n        let v = this.players[k];\n        if (v.action)\n          v.action(type, evt.shiftKey ? 1 : 0, evt.altKey ? 1 : 0, evt);\n      }\n    }\n  }\n};\n\n// src/Form.ts\nvar Form = class {\n  constructor() {\n    this._ready = false;\n  }\n  get ready() {\n    return this._ready;\n  }\n};\nvar VisualForm = class extends Form {\n  constructor() {\n    super(...arguments);\n    this._filled = true;\n    this._stroked = true;\n    this._font = new Font(14, \"sans-serif\");\n  }\n  get filled() {\n    return this._filled;\n  }\n  set filled(b) {\n    this._filled = b;\n  }\n  get stroked() {\n    return this._stroked;\n  }\n  set stroked(b) {\n    this._stroked = b;\n  }\n  get currentFont() {\n    return this._font;\n  }\n  _multiple(groups, shape, ...rest) {\n    if (!groups)\n      return this;\n    for (let i = 0, len = groups.length; i < len; i++) {\n      this[shape](groups[i], ...rest);\n    }\n    return this;\n  }\n  alpha(a) {\n    return this;\n  }\n  fill(c) {\n    return this;\n  }\n  fillOnly(c) {\n    this.stroke(false);\n    return this.fill(c);\n  }\n  stroke(c, width, linejoin, linecap) {\n    return this;\n  }\n  strokeOnly(c, width, linejoin, linecap) {\n    this.fill(false);\n    return this.stroke(c, width, linejoin, linecap);\n  }\n  points(pts, radius, shape) {\n    if (!pts)\n      return;\n    for (let i = 0, len = pts.length; i < len; i++) {\n      this.point(pts[i], radius, shape);\n    }\n    return this;\n  }\n  circles(groups) {\n    return this._multiple(groups, \"circle\");\n  }\n  squares(groups) {\n    return this._multiple(groups, \"square\");\n  }\n  lines(groups) {\n    return this._multiple(groups, \"line\");\n  }\n  polygons(groups) {\n    return this._multiple(groups, \"polygon\");\n  }\n  rects(groups) {\n    return this._multiple(groups, \"rect\");\n  }\n};\nvar Font = class {\n  constructor(size = 12, face = \"sans-serif\", weight = \"\", style = \"\", lineHeight = 1.5) {\n    this.size = size;\n    this.face = face;\n    this.style = style;\n    this.weight = weight;\n    this.lineHeight = lineHeight;\n  }\n  get value() {\n    return `${this.style} ${this.weight} ${this.size}px/${this.lineHeight} ${this.face}`;\n  }\n  toString() {\n    return this.value;\n  }\n};\n\n// src/Typography.ts\nvar Typography = class {\n  static textWidthEstimator(fn, samples = [\"M\", \"n\", \".\"], distribution = [0.06, 0.8, 0.14]) {\n    let m = samples.map(fn);\n    let avg = new Pt(distribution).dot(m);\n    return (str) => str.length * avg;\n  }\n  static truncate(fn, str, width, tail = \"\") {\n    let trim = Math.floor(str.length * Math.min(1, width / fn(str)));\n    if (trim < str.length) {\n      trim = Math.max(0, trim - tail.length);\n      return [str.substr(0, trim) + tail, trim];\n    } else {\n      return [str, str.length];\n    }\n  }\n  static fontSizeToBox(box, ratio = 1, byHeight = true) {\n    let bound = Bound.fromGroup(box);\n    let h = byHeight ? bound.height : bound.width;\n    let f = ratio * h;\n    return function(box2) {\n      let bound2 = Bound.fromGroup(box2);\n      let nh = (byHeight ? bound2.height : bound2.width) / h;\n      return f * nh;\n    };\n  }\n  static fontSizeToThreshold(threshold, direction = 0) {\n    return function(defaultSize, val) {\n      let d = defaultSize * val / threshold;\n      if (direction < 0)\n        return Math.min(d, defaultSize);\n      if (direction > 0)\n        return Math.max(d, defaultSize);\n      return d;\n    };\n  }\n};\n\n// src/Image.ts\nvar Img = class {\n  constructor(editable = false, space, crossOrigin) {\n    this._scale = 1;\n    this._loaded = false;\n    this._editable = editable;\n    this._space = space;\n    this._scale = this._space ? this._space.pixelScale : 1;\n    this._img = new Image();\n    if (crossOrigin)\n      this._img.crossOrigin = \"Anonymous\";\n  }\n  static load(src, editable = false, space, ready) {\n    const img = new Img(editable, space);\n    img.load(src).then((res) => {\n      if (ready)\n        ready(res);\n    });\n    return img;\n  }\n  static async loadAsync(src, editable = false, space) {\n    const img = await new Img(editable, space).load(src);\n    return img;\n  }\n  static async loadPattern(src, space, repeat = \"repeat\", editable = false) {\n    const img = await Img.loadAsync(src, editable, space);\n    return img.pattern(repeat);\n  }\n  static blank(size, space, scale) {\n    let img = new Img(true, space);\n    const s = scale ? scale : space.pixelScale;\n    img.initCanvas(size[0], size[1], s);\n    return img;\n  }\n  load(src) {\n    return new Promise((resolve, reject) => {\n      if (this._editable && !document) {\n        reject(\"Cannot create html canvas element. document not found.\");\n      }\n      this._img.src = src;\n      this._img.onload = () => {\n        if (this._editable) {\n          if (!this._cv)\n            this._cv = document.createElement(\"canvas\");\n          this._drawToScale(this._scale, this._img);\n          this._data = this._ctx.getImageData(0, 0, this._cv.width, this._cv.height);\n        }\n        this._loaded = true;\n        resolve(this);\n      };\n      this._img.onerror = (evt) => {\n        reject(evt);\n      };\n    });\n  }\n  _drawToScale(canvasScale, img) {\n    const nw = img.width;\n    const nh = img.height;\n    this.initCanvas(nw, nh, canvasScale);\n    if (img)\n      this._ctx.drawImage(img, 0, 0, nw, nh, 0, 0, this._cv.width, this._cv.height);\n  }\n  initCanvas(width, height, canvasScale = 1) {\n    if (!this._editable) {\n      console.error(\"Cannot initiate canvas because this Img is not set to be editable\");\n      return;\n    }\n    if (!this._cv)\n      this._cv = document.createElement(\"canvas\");\n    const cms = typeof canvasScale === \"number\" ? [canvasScale, canvasScale] : canvasScale;\n    this._cv.width = width * cms[0];\n    this._cv.height = height * cms[1];\n    this._ctx = this._cv.getContext(\"2d\");\n    this._loaded = true;\n  }\n  bitmap(size) {\n    const w = size ? size[0] : this._cv.width;\n    const h = size ? size[1] : this._cv.height;\n    return createImageBitmap(this._cv, 0, 0, w, h);\n  }\n  pattern(reptition = \"repeat\", dynamic = false) {\n    if (!this._space)\n      throw \"Cannot find CanvasSpace ctx to create image pattern\";\n    return this._space.ctx.createPattern(dynamic ? this._cv : this._img, reptition);\n  }\n  sync() {\n    if (this._scale !== 1) {\n      this.bitmap().then((b) => {\n        this._drawToScale(1 / this._scale, b);\n        this.load(this.toBase64());\n      });\n    } else {\n      this._img.src = this.toBase64();\n    }\n  }\n  pixel(p, rescale = true) {\n    const s = typeof rescale == \"number\" ? rescale : rescale ? this._scale : 1;\n    return Img.getPixel(this._data, [p[0] * s, p[1] * s]);\n  }\n  static getPixel(imgData, p) {\n    const no = new Pt(0, 0, 0, 0);\n    if (p[0] >= imgData.width || p[1] >= imgData.height)\n      return no;\n    const i = Math.floor(p[1]) * (imgData.width * 4) + Math.floor(p[0]) * 4;\n    const d = imgData.data;\n    if (i >= d.length - 4)\n      return no;\n    return new Pt(d[i], d[i + 1], d[i + 2], d[i + 3]);\n  }\n  resize(sizeOrScale, asScale = false) {\n    let s = asScale ? sizeOrScale : [sizeOrScale[0] / this._img.naturalWidth, sizeOrScale[1] / this._img.naturalHeight];\n    this._drawToScale(s, this._img);\n    this._data = this._ctx.getImageData(0, 0, this._cv.width, this._cv.height);\n    return this;\n  }\n  crop(box) {\n    let p = box.topLeft.scale(this._scale);\n    let s = box.size.scale(this._scale);\n    return this._ctx.getImageData(p.x, p.y, s.x, s.y);\n  }\n  filter(css) {\n    this._ctx.filter = css;\n    this._ctx.drawImage(this._cv, 0, 0);\n    this._ctx.filter = \"none\";\n    return this;\n  }\n  cleanup() {\n    if (this._cv)\n      this._cv.remove();\n    if (this._img)\n      this._img.remove();\n    this._data = null;\n  }\n  static fromBlob(blob, editable = false, space) {\n    let url = URL.createObjectURL(blob);\n    return new Img(editable, space).load(url);\n  }\n  static imageDataToBlob(data) {\n    return new Promise(function(resolve, reject) {\n      if (!document) {\n        reject(\"Cannot create html canvas element. document not found.\");\n      }\n      let cv = document.createElement(\"canvas\");\n      cv.width = data.width;\n      cv.height = data.height;\n      cv.getContext(\"2d\").putImageData(data, 0, 0);\n      cv.toBlob((blob) => {\n        resolve(blob);\n        cv.remove();\n      });\n    });\n  }\n  toBase64() {\n    return this._cv.toDataURL();\n  }\n  toBlob() {\n    return new Promise((resolve) => {\n      this._cv.toBlob((blob) => resolve(blob));\n    });\n  }\n  getForm() {\n    if (!this._editable) {\n      console.error(\"Cannot get a CanvasForm because this Img is not editable\");\n    }\n    return this._ctx ? new CanvasForm(this._ctx) : void 0;\n  }\n  get current() {\n    return this._editable ? this._cv : this._img;\n  }\n  get image() {\n    return this._img;\n  }\n  get canvas() {\n    return this._cv;\n  }\n  get data() {\n    return this._data;\n  }\n  get ctx() {\n    return this._ctx;\n  }\n  get loaded() {\n    return this._loaded;\n  }\n  get pixelScale() {\n    return this._scale;\n  }\n  get imageSize() {\n    if (!this._img.width || !this._img.height) {\n      return this.canvasSize.$divide(this._scale);\n    } else {\n      return new Pt(this._img.width, this._img.height);\n    }\n  }\n  get canvasSize() {\n    return new Pt(this._cv.width, this._cv.height);\n  }\n  get scaledMatrix() {\n    const s = 1 / this._scale;\n    return new Mat().scale2D([s, s]);\n  }\n};\n\n// src/Canvas.ts\nvar CanvasSpace2 = class extends MultiTouchSpace {\n  constructor(elem, callback) {\n    super();\n    this._pixelScale = 1;\n    this._autoResize = true;\n    this._bgcolor = \"#e1e9f0\";\n    this._offscreen = false;\n    this._initialResize = false;\n    var _selector = null;\n    var _existed = false;\n    this.id = \"pt\";\n    if (elem instanceof Element) {\n      _selector = elem;\n      this.id = \"pts_existing_space\";\n    } else {\n      let id = elem;\n      id = elem[0] === \"#\" || elem[0] === \".\" ? elem : \"#\" + elem;\n      _selector = document.querySelector(id);\n      _existed = true;\n      this.id = id.substr(1);\n    }\n    if (!_selector) {\n      this._container = this._createElement(\"div\", this.id + \"_container\");\n      this._canvas = this._createElement(\"canvas\", this.id);\n      this._container.appendChild(this._canvas);\n      document.body.appendChild(this._container);\n      _existed = false;\n    } else if (_selector.nodeName.toLowerCase() != \"canvas\") {\n      this._container = _selector;\n      this._canvas = this._createElement(\"canvas\", this.id + \"_canvas\");\n      this._container.appendChild(this._canvas);\n      this._initialResize = true;\n    } else {\n      this._canvas = _selector;\n      this._container = _selector.parentElement;\n      this._autoResize = false;\n    }\n    setTimeout(this._ready.bind(this, callback), 100);\n    this._ctx = this._canvas.getContext(\"2d\");\n  }\n  _createElement(elem = \"div\", id) {\n    let d = document.createElement(elem);\n    d.setAttribute(\"id\", id);\n    return d;\n  }\n  _ready(callback) {\n    if (!this._container)\n      throw new Error(`Cannot initiate #${this.id} element`);\n    this._isReady = true;\n    this._resizeHandler(null);\n    this.clear(this._bgcolor);\n    this._canvas.dispatchEvent(new Event(\"ready\"));\n    for (let k in this.players) {\n      if (this.players.hasOwnProperty(k)) {\n        if (this.players[k].start)\n          this.players[k].start(this.bound.clone(), this);\n      }\n    }\n    this._pointer = this.center;\n    this._initialResize = false;\n    if (callback)\n      callback(this.bound, this._canvas);\n  }\n  setup(opt) {\n    this._bgcolor = opt.bgcolor ? opt.bgcolor : \"transparent\";\n    this.autoResize = opt.resize != void 0 ? opt.resize : false;\n    if (opt.retina !== false) {\n      let r1 = window ? window.devicePixelRatio || 1 : 1;\n      let r2 = this._ctx.webkitBackingStorePixelRatio || this._ctx.mozBackingStorePixelRatio || this._ctx.msBackingStorePixelRatio || this._ctx.oBackingStorePixelRatio || this._ctx.backingStorePixelRatio || 1;\n      this._pixelScale = Math.max(1, r1 / r2);\n    }\n    if (opt.offscreen) {\n      this._offscreen = true;\n      this._offCanvas = this._createElement(\"canvas\", this.id + \"_offscreen\");\n      this._offCtx = this._offCanvas.getContext(\"2d\");\n    } else {\n      this._offscreen = false;\n    }\n    if (opt.pixelDensity) {\n      this._pixelScale = opt.pixelDensity;\n    }\n    return this;\n  }\n  set autoResize(auto) {\n    if (!window)\n      return;\n    this._autoResize = auto;\n    if (auto) {\n      window.addEventListener(\"resize\", this._resizeHandler.bind(this));\n    } else {\n      window.removeEventListener(\"resize\", this._resizeHandler.bind(this));\n    }\n  }\n  get autoResize() {\n    return this._autoResize;\n  }\n  resize(b, evt) {\n    this.bound = b;\n    this._canvas.width = Math.ceil(this.bound.size.x) * this._pixelScale;\n    this._canvas.height = Math.ceil(this.bound.size.y) * this._pixelScale;\n    this._canvas.style.width = Math.ceil(this.bound.size.x) + \"px\";\n    this._canvas.style.height = Math.ceil(this.bound.size.y) + \"px\";\n    if (this._offscreen) {\n      this._offCanvas.width = Math.ceil(this.bound.size.x) * this._pixelScale;\n      this._offCanvas.height = Math.ceil(this.bound.size.y) * this._pixelScale;\n    }\n    if (this._pixelScale != 1) {\n      this._ctx.scale(this._pixelScale, this._pixelScale);\n      if (this._offscreen) {\n        this._offCtx.scale(this._pixelScale, this._pixelScale);\n      }\n    }\n    for (let k in this.players) {\n      if (this.players.hasOwnProperty(k)) {\n        let p = this.players[k];\n        if (p.resize)\n          p.resize(this.bound, evt);\n      }\n    }\n    this.render(this._ctx);\n    if (evt && !this.isPlaying)\n      this.playOnce(0);\n    return this;\n  }\n  _resizeHandler(evt) {\n    if (!window)\n      return;\n    let b = this._autoResize || this._initialResize ? this._container.getBoundingClientRect() : this._canvas.getBoundingClientRect();\n    if (b) {\n      let box = Bound.fromBoundingRect(b);\n      box.center = box.center.add(window.pageXOffset, window.pageYOffset);\n      this.resize(box, evt);\n    }\n  }\n  set background(bg) {\n    this._bgcolor = bg;\n  }\n  get background() {\n    return this._bgcolor;\n  }\n  get pixelScale() {\n    return this._pixelScale;\n  }\n  get hasOffscreen() {\n    return this._offscreen;\n  }\n  get offscreenCtx() {\n    return this._offCtx;\n  }\n  get offscreenCanvas() {\n    return this._offCanvas;\n  }\n  getForm() {\n    return new CanvasForm(this);\n  }\n  get element() {\n    return this._canvas;\n  }\n  get parent() {\n    return this._container;\n  }\n  get ready() {\n    return this._isReady;\n  }\n  get ctx() {\n    return this._ctx;\n  }\n  clear(bg) {\n    if (bg)\n      this._bgcolor = bg;\n    const lastColor = this._ctx.fillStyle;\n    const px = Math.ceil(this.pixelScale);\n    if (!this._bgcolor || this._bgcolor === \"transparent\") {\n      this._ctx.clearRect(-px, -px, this._canvas.width + px, this._canvas.height + px);\n    } else {\n      if (this._bgcolor.indexOf(\"rgba\") === 0 || this._bgcolor.length === 9 && this._bgcolor.indexOf(\"#\") === 0) {\n        this._ctx.clearRect(-px, -px, this._canvas.width + px, this._canvas.height + px);\n      }\n      this._ctx.fillStyle = this._bgcolor;\n      this._ctx.fillRect(-px, -px, this._canvas.width + px, this._canvas.height + px);\n    }\n    this._ctx.fillStyle = lastColor;\n    return this;\n  }\n  clearOffscreen(bg) {\n    if (this._offscreen) {\n      const px = Math.ceil(this.pixelScale);\n      if (bg) {\n        this._offCtx.fillStyle = bg;\n        this._offCtx.fillRect(-px, -px, this._canvas.width + px, this._canvas.height + px);\n      } else {\n        this._offCtx.clearRect(-px, -px, this._offCanvas.width + px, this._offCanvas.height + px);\n      }\n    }\n    return this;\n  }\n  playItems(time) {\n    if (this._isReady) {\n      this._ctx.save();\n      if (this._offscreen)\n        this._offCtx.save();\n      super.playItems(time);\n      this._ctx.restore();\n      if (this._offscreen)\n        this._offCtx.restore();\n      this.render(this._ctx);\n    }\n  }\n  dispose() {\n    if (!window)\n      return;\n    window.removeEventListener(\"resize\", this._resizeHandler.bind(this));\n    this.stop();\n    this.removeAll();\n    return this;\n  }\n  recorder(downloadOrCallback, filetype = \"webm\", bitrate = 15e6) {\n    let stream = this._canvas.captureStream();\n    const recorder = new MediaRecorder(stream, { mimeType: `video/${filetype}`, bitsPerSecond: bitrate });\n    recorder.ondataavailable = function(d) {\n      let url = URL.createObjectURL(new Blob([d.data], { type: `video/${filetype}` }));\n      if (typeof downloadOrCallback === \"function\") {\n        downloadOrCallback(url);\n      } else if (downloadOrCallback) {\n        let a = document.createElement(\"a\");\n        a.href = url;\n        a.download = `canvas_video.${filetype}`;\n        a.click();\n        a.remove();\n      }\n    };\n    return recorder;\n  }\n};\nvar CanvasForm = class extends VisualForm {\n  constructor(space) {\n    super();\n    this._style = {\n      fillStyle: \"#f03\",\n      strokeStyle: \"#fff\",\n      lineWidth: 1,\n      lineJoin: \"bevel\",\n      lineCap: \"butt\",\n      globalAlpha: 1\n    };\n    if (!space)\n      return this;\n    const _setup = (ctx) => {\n      this._ctx = ctx;\n      this._ctx.fillStyle = this._style.fillStyle;\n      this._ctx.strokeStyle = this._style.strokeStyle;\n      this._ctx.lineJoin = \"bevel\";\n      this._ctx.font = this._font.value;\n      this._ready = true;\n    };\n    if (space instanceof CanvasRenderingContext2D) {\n      _setup(space);\n    } else {\n      this._space = space;\n      this._space.add({ start: () => {\n        _setup(this._space.ctx);\n      } });\n    }\n  }\n  get space() {\n    return this._space;\n  }\n  get ctx() {\n    return this._ctx;\n  }\n  useOffscreen(off = true, clear = false) {\n    if (clear)\n      this._space.clearOffscreen(typeof clear == \"string\" ? clear : null);\n    this._ctx = this._space.hasOffscreen && off ? this._space.offscreenCtx : this._space.ctx;\n    return this;\n  }\n  renderOffscreen(offset = [0, 0]) {\n    if (this._space.hasOffscreen) {\n      this._space.ctx.drawImage(\n        this._space.offscreenCanvas,\n        offset[0],\n        offset[1],\n        this._space.width,\n        this._space.height\n      );\n    }\n  }\n  alpha(a) {\n    this._ctx.globalAlpha = a;\n    this._style.globalAlpha = a;\n    return this;\n  }\n  fill(c) {\n    if (typeof c == \"boolean\") {\n      this.filled = c;\n    } else {\n      this.filled = true;\n      this._style.fillStyle = c;\n      this._ctx.fillStyle = c;\n    }\n    return this;\n  }\n  stroke(c, width, linejoin, linecap) {\n    if (typeof c == \"boolean\") {\n      this.stroked = c;\n    } else {\n      this.stroked = true;\n      this._style.strokeStyle = c;\n      this._ctx.strokeStyle = c;\n      if (width) {\n        this._ctx.lineWidth = width;\n        this._style.lineWidth = width;\n      }\n      if (linejoin) {\n        this._ctx.lineJoin = linejoin;\n        this._style.lineJoin = linejoin;\n      }\n      if (linecap) {\n        this._ctx.lineCap = linecap;\n        this._style.lineCap = linecap;\n      }\n    }\n    return this;\n  }\n  applyFillStroke(filled = true, stroked = true, strokeWidth = 1) {\n    if (filled) {\n      if (typeof filled === \"string\")\n        this.fill(filled);\n      this._ctx.fill();\n    }\n    if (stroked) {\n      if (typeof stroked === \"string\")\n        this.stroke(stroked, strokeWidth);\n      this._ctx.stroke();\n    }\n    return this;\n  }\n  gradient(stops) {\n    let vals = [];\n    if (stops.length < 2)\n      stops.push([0.99, \"#000\"], [1, \"#000\"]);\n    for (let i = 0, len = stops.length; i < len; i++) {\n      let t = typeof stops[i] === \"string\" ? i * (1 / (stops.length - 1)) : stops[i][0];\n      let v = typeof stops[i] === \"string\" ? stops[i] : stops[i][1];\n      vals.push([t, v]);\n    }\n    return (area1, area2) => {\n      let grad = area2 ? this._ctx.createRadialGradient(area1[0][0], area1[0][1], Math.abs(area1[1][0]), area2[0][0], area2[0][1], Math.abs(area2[1][0])) : this._ctx.createLinearGradient(area1[0][0], area1[0][1], area1[1][0], area1[1][1]);\n      for (let i = 0, len = vals.length; i < len; i++) {\n        grad.addColorStop(vals[i][0], vals[i][1]);\n      }\n      return grad;\n    };\n  }\n  composite(mode = \"source-over\") {\n    this._ctx.globalCompositeOperation = mode;\n    return this;\n  }\n  clip() {\n    this._ctx.clip();\n    return this;\n  }\n  dash(segments = true, offset = 0) {\n    if (!segments) {\n      this._ctx.setLineDash([]);\n      this._ctx.lineDashOffset = 0;\n    } else {\n      if (segments === true) {\n        segments = [5, 5];\n      }\n      this._ctx.setLineDash([segments[0], segments[1]]);\n      this._ctx.lineDashOffset = offset;\n    }\n    return this;\n  }\n  font(sizeOrFont, weight, style, lineHeight, family) {\n    if (typeof sizeOrFont == \"number\") {\n      this._font.size = sizeOrFont;\n      if (family)\n        this._font.face = family;\n      if (weight)\n        this._font.weight = weight;\n      if (style)\n        this._font.style = style;\n      if (lineHeight)\n        this._font.lineHeight = lineHeight;\n    } else {\n      this._font = sizeOrFont;\n    }\n    this._ctx.font = this._font.value;\n    if (this._estimateTextWidth)\n      this.fontWidthEstimate(true);\n    return this;\n  }\n  fontWidthEstimate(estimate = true) {\n    this._estimateTextWidth = estimate ? Typography.textWidthEstimator((c) => this._ctx.measureText(c).width) : void 0;\n    return this;\n  }\n  getTextWidth(c) {\n    return !this._estimateTextWidth ? this._ctx.measureText(c + \" .\").width : this._estimateTextWidth(c);\n  }\n  _textTruncate(str, width, tail = \"\") {\n    return Typography.truncate(this.getTextWidth.bind(this), str, width, tail);\n  }\n  _textAlign(box, vertical, offset, center) {\n    let _box = Util.iterToArray(box);\n    if (!Util.arrayCheck(_box))\n      return;\n    if (!center)\n      center = Rectangle.center(_box);\n    var px = _box[0][0];\n    if (this._ctx.textAlign == \"end\" || this._ctx.textAlign == \"right\") {\n      px = _box[1][0];\n    } else if (this._ctx.textAlign == \"center\" || this._ctx.textAlign == \"middle\") {\n      px = center[0];\n    }\n    var py = center[1];\n    if (vertical == \"top\" || vertical == \"start\") {\n      py = _box[0][1];\n    } else if (vertical == \"end\" || vertical == \"bottom\") {\n      py = _box[1][1];\n    }\n    return offset ? new Pt(px + offset[0], py + offset[1]) : new Pt(px, py);\n  }\n  reset() {\n    for (let k in this._style) {\n      if (this._style.hasOwnProperty(k)) {\n        this._ctx[k] = this._style[k];\n      }\n    }\n    this._font = new Font();\n    this._ctx.font = this._font.value;\n    return this;\n  }\n  _paint() {\n    if (this._filled)\n      this._ctx.fill();\n    if (this._stroked)\n      this._ctx.stroke();\n  }\n  static point(ctx, p, radius = 5, shape = \"square\") {\n    if (!p)\n      return;\n    if (!CanvasForm[shape])\n      throw new Error(`${shape} is not a static function of CanvasForm`);\n    CanvasForm[shape](ctx, p, radius);\n  }\n  point(p, radius = 5, shape = \"square\") {\n    CanvasForm.point(this._ctx, p, radius, shape);\n    this._paint();\n    return this;\n  }\n  static circle(ctx, pt, radius = 10) {\n    if (!pt)\n      return;\n    ctx.beginPath();\n    ctx.arc(pt[0], pt[1], radius, 0, Const.two_pi, false);\n    ctx.closePath();\n  }\n  circle(pts) {\n    let p = Util.iterToArray(pts);\n    CanvasForm.circle(this._ctx, p[0], p[1][0]);\n    this._paint();\n    return this;\n  }\n  static ellipse(ctx, pt, radius, rotation = 0, startAngle = 0, endAngle = Const.two_pi, cc = false) {\n    if (!pt || !radius)\n      return;\n    ctx.beginPath();\n    ctx.ellipse(pt[0], pt[1], radius[0], radius[1], rotation, startAngle, endAngle, cc);\n  }\n  ellipse(pt, radius, rotation = 0, startAngle = 0, endAngle = Const.two_pi, cc = false) {\n    CanvasForm.ellipse(this._ctx, pt, radius, rotation, startAngle, endAngle, cc);\n    this._paint();\n    return this;\n  }\n  static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n    if (!pt)\n      return;\n    ctx.beginPath();\n    ctx.arc(pt[0], pt[1], radius, startAngle, endAngle, cc);\n  }\n  arc(pt, radius, startAngle, endAngle, cc) {\n    CanvasForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n    this._paint();\n    return this;\n  }\n  static square(ctx, pt, halfsize) {\n    if (!pt)\n      return;\n    let x1 = pt[0] - halfsize;\n    let y1 = pt[1] - halfsize;\n    let x2 = pt[0] + halfsize;\n    let y2 = pt[1] + halfsize;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x1, y2);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x2, y1);\n    ctx.closePath();\n  }\n  square(pt, halfsize) {\n    CanvasForm.square(this._ctx, pt, halfsize);\n    this._paint();\n    return this;\n  }\n  static line(ctx, pts) {\n    if (!Util.arrayCheck(pts))\n      return;\n    let i = 0;\n    ctx.beginPath();\n    for (let it of pts) {\n      if (it) {\n        if (i++ > 0) {\n          ctx.lineTo(it[0], it[1]);\n        } else {\n          ctx.moveTo(it[0], it[1]);\n        }\n      }\n    }\n  }\n  line(pts) {\n    CanvasForm.line(this._ctx, pts);\n    this._paint();\n    return this;\n  }\n  static polygon(ctx, pts) {\n    if (!Util.arrayCheck(pts))\n      return;\n    CanvasForm.line(ctx, pts);\n    ctx.closePath();\n  }\n  polygon(pts) {\n    CanvasForm.polygon(this._ctx, pts);\n    this._paint();\n    return this;\n  }\n  static rect(ctx, pts) {\n    let p = Util.iterToArray(pts);\n    if (!Util.arrayCheck(p))\n      return;\n    ctx.beginPath();\n    ctx.moveTo(p[0][0], p[0][1]);\n    ctx.lineTo(p[0][0], p[1][1]);\n    ctx.lineTo(p[1][0], p[1][1]);\n    ctx.lineTo(p[1][0], p[0][1]);\n    ctx.closePath();\n  }\n  rect(pts) {\n    CanvasForm.rect(this._ctx, pts);\n    this._paint();\n    return this;\n  }\n  static image(ctx, ptOrRect, img, orig) {\n    let t = Util.iterToArray(ptOrRect);\n    let pos;\n    if (typeof t[0] === \"number\") {\n      pos = t;\n    } else {\n      if (orig) {\n        let o = Util.iterToArray(orig);\n        pos = [\n          o[0][0],\n          o[0][1],\n          o[1][0] - o[0][0],\n          o[1][1] - o[0][1],\n          t[0][0],\n          t[0][1],\n          t[1][0] - t[0][0],\n          t[1][1] - t[0][1]\n        ];\n      } else {\n        pos = [t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]];\n      }\n    }\n    if (img instanceof Img) {\n      if (img.loaded) {\n        ctx.drawImage(img.image, ...pos);\n      }\n    } else {\n      ctx.drawImage(img, ...pos);\n    }\n  }\n  image(ptOrRect, img, orig) {\n    if (img instanceof Img) {\n      if (img.loaded) {\n        CanvasForm.image(this._ctx, ptOrRect, img.image, orig);\n      }\n    } else {\n      CanvasForm.image(this._ctx, ptOrRect, img, orig);\n    }\n    return this;\n  }\n  static imageData(ctx, ptOrRect, img) {\n    let t = Util.iterToArray(ptOrRect);\n    if (typeof t[0] === \"number\") {\n      ctx.putImageData(img, t[0], t[1]);\n    } else {\n      ctx.putImageData(img, t[0][0], t[0][1], t[0][0], t[0][1], t[1][0], t[1][1]);\n    }\n  }\n  imageData(ptOrRect, img) {\n    CanvasForm.imageData(this._ctx, ptOrRect, img);\n    return this;\n  }\n  static text(ctx, pt, txt, maxWidth) {\n    if (!pt)\n      return;\n    ctx.fillText(txt, pt[0], pt[1], maxWidth);\n  }\n  text(pt, txt, maxWidth) {\n    CanvasForm.text(this._ctx, pt, txt, maxWidth);\n    return this;\n  }\n  textBox(box, txt, verticalAlign = \"middle\", tail = \"\", overrideBaseline = true) {\n    if (overrideBaseline)\n      this._ctx.textBaseline = verticalAlign;\n    let size = Rectangle.size(box);\n    let t = this._textTruncate(txt, size[0], tail);\n    this.text(this._textAlign(box, verticalAlign), t[0]);\n    return this;\n  }\n  paragraphBox(box, txt, lineHeight = 1.2, verticalAlign = \"top\", crop = true) {\n    let b = Util.iterToArray(box);\n    let size = Rectangle.size(b);\n    this._ctx.textBaseline = \"top\";\n    let lstep = this._font.size * lineHeight;\n    let nextLine = (sub, buffer = [], cc = 0) => {\n      if (!sub)\n        return buffer;\n      if (crop && cc * lstep > size[1] - lstep * 2)\n        return buffer;\n      if (cc > 1e4)\n        throw new Error(\"max recursion reached (10000)\");\n      let t = this._textTruncate(sub, size[0], \"\");\n      let newln = t[0].indexOf(\"\\n\");\n      if (newln >= 0) {\n        buffer.push(t[0].substr(0, newln));\n        return nextLine(sub.substr(newln + 1), buffer, cc + 1);\n      }\n      let dt = t[0].lastIndexOf(\" \") + 1;\n      if (dt <= 0 || t[1] === sub.length)\n        dt = void 0;\n      let line = t[0].substr(0, dt);\n      buffer.push(line);\n      return t[1] <= 0 || t[1] === sub.length ? buffer : nextLine(sub.substr(dt || t[1]), buffer, cc + 1);\n    };\n    let lines = nextLine(txt);\n    let lsize = lines.length * lstep;\n    let lbox = b;\n    if (verticalAlign == \"middle\" || verticalAlign == \"center\") {\n      let lpad = (size[1] - lsize) / 2;\n      if (crop)\n        lpad = Math.max(0, lpad);\n      lbox = new Group(b[0].$add(0, lpad), b[1].$subtract(0, lpad));\n    } else if (verticalAlign == \"bottom\") {\n      lbox = new Group(b[0].$add(0, size[1] - lsize), b[1]);\n    } else {\n      lbox = new Group(b[0], b[0].$add(size[0], lsize));\n    }\n    let center = Rectangle.center(lbox);\n    for (let i = 0, len = lines.length; i < len; i++) {\n      this.text(this._textAlign(lbox, \"top\", [0, i * lstep], center), lines[i]);\n    }\n    return this;\n  }\n  alignText(alignment = \"left\", baseline = \"alphabetic\") {\n    if (baseline == \"center\")\n      baseline = \"middle\";\n    if (baseline == \"baseline\")\n      baseline = \"alphabetic\";\n    this._ctx.textAlign = alignment;\n    this._ctx.textBaseline = baseline;\n    return this;\n  }\n  log(txt) {\n    let w = this._ctx.measureText(txt).width + 20;\n    this.stroke(false).fill(\"rgba(0,0,0,.4)\").rect([[0, 0], [w, 20]]);\n    this.fill(\"#fff\").text([10, 14], txt);\n    return this;\n  }\n};\n\n// src/Create.ts\nvar Create = class {\n  static distributeRandom(bound, count, dimensions = 2) {\n    let pts = new Group();\n    for (let i = 0; i < count; i++) {\n      let p = [bound.x + Num.random() * bound.width];\n      if (dimensions > 1)\n        p.push(bound.y + Num.random() * bound.height);\n      if (dimensions > 2)\n        p.push(bound.z + Num.random() * bound.depth);\n      pts.push(new Pt(p));\n    }\n    return pts;\n  }\n  static distributeLinear(line, count) {\n    let _line = Util.iterToArray(line);\n    let ln = Line.subpoints(_line, count - 2);\n    ln.unshift(_line[0]);\n    ln.push(_line[_line.length - 1]);\n    return ln;\n  }\n  static gridPts(bound, columns, rows, orientation = [0.5, 0.5]) {\n    if (columns === 0 || rows === 0)\n      throw new Error(\"grid columns and rows cannot be 0\");\n    let unit = bound.size.$subtract(1).$divide(columns, rows);\n    let offset = unit.$multiply(orientation);\n    let g = new Group();\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < columns; c++) {\n        g.push(bound.topLeft.$add(unit.$multiply(c, r)).add(offset));\n      }\n    }\n    return g;\n  }\n  static gridCells(bound, columns, rows) {\n    if (columns === 0 || rows === 0)\n      throw new Error(\"grid columns and rows cannot be 0\");\n    let unit = bound.size.$subtract(1).divide(columns, rows);\n    let g = [];\n    for (let r = 0; r < rows; r++) {\n      for (let c = 0; c < columns; c++) {\n        g.push(new Group(\n          bound.topLeft.$add(unit.$multiply(c, r)),\n          bound.topLeft.$add(unit.$multiply(c, r).add(unit))\n        ));\n      }\n    }\n    return g;\n  }\n  static radialPts(center, radius, count, angleOffset = -Const.half_pi) {\n    let g = new Group();\n    let a = Const.two_pi / count;\n    for (let i = 0; i < count; i++) {\n      g.push(new Pt(center).toAngle(a * i + angleOffset, radius, true));\n    }\n    return g;\n  }\n  static noisePts(pts, dx = 0.01, dy = 0.01, rows = 0, columns = 0) {\n    let seed = Num.random();\n    let g = new Group();\n    let i = 0;\n    for (let p of pts) {\n      let np = new Noise(p);\n      let r = rows && rows > 0 ? Math.floor(i / rows) : i;\n      let c = columns && columns > 0 ? i % columns : i;\n      np.initNoise(dx * c, dy * r);\n      np.seed(seed);\n      g.push(np);\n      i++;\n    }\n    return g;\n  }\n  static delaunay(pts) {\n    return Delaunay.from(pts);\n  }\n};\nvar __noise_grad3 = [\n  [1, 1, 0],\n  [-1, 1, 0],\n  [1, -1, 0],\n  [-1, -1, 0],\n  [1, 0, 1],\n  [-1, 0, 1],\n  [1, 0, -1],\n  [-1, 0, -1],\n  [0, 1, 1],\n  [0, -1, 1],\n  [0, 1, -1],\n  [0, -1, -1]\n];\nvar __noise_permTable = [\n  151,\n  160,\n  137,\n  91,\n  90,\n  15,\n  131,\n  13,\n  201,\n  95,\n  96,\n  53,\n  194,\n  233,\n  7,\n  225,\n  140,\n  36,\n  103,\n  30,\n  69,\n  142,\n  8,\n  99,\n  37,\n  240,\n  21,\n  10,\n  23,\n  190,\n  6,\n  148,\n  247,\n  120,\n  234,\n  75,\n  0,\n  26,\n  197,\n  62,\n  94,\n  252,\n  219,\n  203,\n  117,\n  35,\n  11,\n  32,\n  57,\n  177,\n  33,\n  88,\n  237,\n  149,\n  56,\n  87,\n  174,\n  20,\n  125,\n  136,\n  171,\n  168,\n  68,\n  175,\n  74,\n  165,\n  71,\n  134,\n  139,\n  48,\n  27,\n  166,\n  77,\n  146,\n  158,\n  231,\n  83,\n  111,\n  229,\n  122,\n  60,\n  211,\n  133,\n  230,\n  220,\n  105,\n  92,\n  41,\n  55,\n  46,\n  245,\n  40,\n  244,\n  102,\n  143,\n  54,\n  65,\n  25,\n  63,\n  161,\n  1,\n  216,\n  80,\n  73,\n  209,\n  76,\n  132,\n  187,\n  208,\n  89,\n  18,\n  169,\n  200,\n  196,\n  135,\n  130,\n  116,\n  188,\n  159,\n  86,\n  164,\n  100,\n  109,\n  198,\n  173,\n  186,\n  3,\n  64,\n  52,\n  217,\n  226,\n  250,\n  124,\n  123,\n  5,\n  202,\n  38,\n  147,\n  118,\n  126,\n  255,\n  82,\n  85,\n  212,\n  207,\n  206,\n  59,\n  227,\n  47,\n  16,\n  58,\n  17,\n  182,\n  189,\n  28,\n  42,\n  223,\n  183,\n  170,\n  213,\n  119,\n  248,\n  152,\n  2,\n  44,\n  154,\n  163,\n  70,\n  221,\n  153,\n  101,\n  155,\n  167,\n  43,\n  172,\n  9,\n  129,\n  22,\n  39,\n  253,\n  9,\n  98,\n  108,\n  110,\n  79,\n  113,\n  224,\n  232,\n  178,\n  185,\n  112,\n  104,\n  218,\n  246,\n  97,\n  228,\n  251,\n  34,\n  242,\n  193,\n  238,\n  210,\n  144,\n  12,\n  191,\n  179,\n  162,\n  241,\n  81,\n  51,\n  145,\n  235,\n  249,\n  14,\n  239,\n  107,\n  49,\n  192,\n  214,\n  31,\n  181,\n  199,\n  106,\n  157,\n  184,\n  84,\n  204,\n  176,\n  115,\n  121,\n  50,\n  45,\n  127,\n  4,\n  150,\n  254,\n  138,\n  236,\n  205,\n  93,\n  222,\n  114,\n  67,\n  29,\n  24,\n  72,\n  243,\n  141,\n  128,\n  195,\n  78,\n  66,\n  215,\n  61,\n  156,\n  180\n];\nvar Noise = class extends Pt {\n  constructor(...args) {\n    super(...args);\n    this.perm = [];\n    this._n = new Pt(0.01, 0.01);\n    this.perm = __noise_permTable.concat(__noise_permTable);\n  }\n  initNoise(...args) {\n    this._n = new Pt(...args);\n    return this;\n  }\n  step(x = 0, y = 0) {\n    this._n.add(x, y);\n    return this;\n  }\n  seed(s) {\n    if (s > 0 && s < 1)\n      s *= 65536;\n    s = Math.floor(s);\n    if (s < 256)\n      s |= s << 8;\n    for (let i = 0; i < 255; i++) {\n      let v = i & 1 ? __noise_permTable[i] ^ s & 255 : __noise_permTable[i] ^ s >> 8 & 255;\n      this.perm[i] = this.perm[i + 256] = v;\n    }\n    return this;\n  }\n  noise2D() {\n    let i = Math.max(0, Math.floor(this._n[0])) % 255;\n    let j = Math.max(0, Math.floor(this._n[1])) % 255;\n    let x = this._n[0] % 255 - i;\n    let y = this._n[1] % 255 - j;\n    let n00 = Vec.dot(__noise_grad3[(i + this.perm[j]) % 12], [x, y, 0]);\n    let n01 = Vec.dot(__noise_grad3[(i + this.perm[j + 1]) % 12], [x, y - 1, 0]);\n    let n10 = Vec.dot(__noise_grad3[(i + 1 + this.perm[j]) % 12], [x - 1, y, 0]);\n    let n11 = Vec.dot(__noise_grad3[(i + 1 + this.perm[j + 1]) % 12], [x - 1, y - 1, 0]);\n    let _fade = (f) => f * f * f * (f * (f * 6 - 15) + 10);\n    let tx = _fade(x);\n    return Num.lerp(Num.lerp(n00, n10, tx), Num.lerp(n01, n11, tx), _fade(y));\n  }\n};\nvar Delaunay = class extends Group {\n  constructor() {\n    super(...arguments);\n    this._mesh = [];\n  }\n  delaunay(triangleOnly = true) {\n    if (this.length < 3)\n      return [];\n    this._mesh = [];\n    let n = this.length;\n    let indices = [];\n    for (let i = 0; i < n; i++)\n      indices[i] = i;\n    indices.sort((i, j) => this[j][0] - this[i][0]);\n    let pts = this.slice();\n    let st = this._superTriangle();\n    pts = pts.concat(st);\n    let opened = [this._circum(n, n + 1, n + 2, st)];\n    let closed = [];\n    let tris = [];\n    for (let i = 0, len = indices.length; i < len; i++) {\n      let c = indices[i];\n      let edges = [];\n      let j = opened.length;\n      if (!this._mesh[c])\n        this._mesh[c] = {};\n      while (j--) {\n        let circum = opened[j];\n        let radius = circum.circle[1][0];\n        let d = pts[c].$subtract(circum.circle[0]);\n        if (d[0] > 0 && d[0] * d[0] > radius * radius) {\n          closed.push(circum);\n          tris.push(circum.triangle);\n          opened.splice(j, 1);\n          continue;\n        }\n        if (d[0] * d[0] + d[1] * d[1] - radius * radius > Const.epsilon) {\n          continue;\n        }\n        edges.push(circum.i, circum.j, circum.j, circum.k, circum.k, circum.i);\n        opened.splice(j, 1);\n      }\n      Delaunay._dedupe(edges);\n      j = edges.length;\n      while (j > 1) {\n        opened.push(this._circum(edges[--j], edges[--j], c, false, pts));\n      }\n    }\n    for (let i = 0, len = opened.length; i < len; i++) {\n      let o = opened[i];\n      if (o.i < n && o.j < n && o.k < n) {\n        closed.push(o);\n        tris.push(o.triangle);\n        this._cache(o);\n      }\n    }\n    return triangleOnly ? tris : closed;\n  }\n  voronoi() {\n    let vs = [];\n    let n = this._mesh;\n    for (let i = 0, len = n.length; i < len; i++) {\n      vs.push(this.neighborPts(i, true));\n    }\n    return vs;\n  }\n  mesh() {\n    return this._mesh;\n  }\n  neighborPts(i, sort = false) {\n    let cs = new Group();\n    let n = this._mesh;\n    for (let k in n[i]) {\n      if (n[i].hasOwnProperty(k))\n        cs.push(n[i][k].circle[0]);\n    }\n    return sort ? Geom.sortEdges(cs) : cs;\n  }\n  neighbors(i) {\n    let cs = [];\n    let n = this._mesh;\n    for (let k in n[i]) {\n      if (n[i].hasOwnProperty(k))\n        cs.push(n[i][k]);\n    }\n    return cs;\n  }\n  _cache(o) {\n    this._mesh[o.i][`${Math.min(o.j, o.k)}-${Math.max(o.j, o.k)}`] = o;\n    this._mesh[o.j][`${Math.min(o.i, o.k)}-${Math.max(o.i, o.k)}`] = o;\n    this._mesh[o.k][`${Math.min(o.i, o.j)}-${Math.max(o.i, o.j)}`] = o;\n  }\n  _superTriangle() {\n    let minPt = this[0];\n    let maxPt = this[0];\n    for (let i = 1, len = this.length; i < len; i++) {\n      minPt = minPt.$min(this[i]);\n      maxPt = maxPt.$max(this[i]);\n    }\n    let d = maxPt.$subtract(minPt);\n    let mid = minPt.$add(maxPt).divide(2);\n    let dmax = Math.max(d[0], d[1]);\n    return new Group(mid.$subtract(20 * dmax, dmax), mid.$add(0, 20 * dmax), mid.$add(20 * dmax, -dmax));\n  }\n  _triangle(i, j, k, pts = this) {\n    return new Group(pts[i], pts[j], pts[k]);\n  }\n  _circum(i, j, k, tri, pts = this) {\n    let t = tri || this._triangle(i, j, k, pts);\n    return {\n      i,\n      j,\n      k,\n      triangle: t,\n      circle: Triangle.circumcircle(t)\n    };\n  }\n  static _dedupe(edges) {\n    let j = edges.length;\n    while (j > 1) {\n      let b = edges[--j];\n      let a = edges[--j];\n      let i = j;\n      while (i > 1) {\n        let n = edges[--i];\n        let m = edges[--i];\n        if (a == m && b == n || a == n && b == m) {\n          edges.splice(j, 2);\n          edges.splice(i, 2);\n          break;\n        }\n      }\n    }\n    return edges;\n  }\n};\n\n// src/Color.ts\nvar _Color = class extends Pt {\n  constructor(...args) {\n    super(...args);\n    this._mode = \"rgb\";\n    this._isNorm = false;\n  }\n  static from(...args) {\n    let p = [1, 1, 1, 1];\n    let c = Util.getArgs(args);\n    for (let i = 0, len = p.length; i < len; i++) {\n      if (i < c.length)\n        p[i] = c[i];\n    }\n    return new _Color(p);\n  }\n  static fromHex(hex) {\n    if (hex[0] == \"#\")\n      hex = hex.substr(1);\n    if (hex.length <= 3) {\n      let fn = (i) => hex[i] || \"F\";\n      hex = `${fn(0)}${fn(0)}${fn(1)}${fn(1)}${fn(2)}${fn(2)}`;\n    }\n    let alpha = 1;\n    if (hex.length === 8) {\n      alpha = hex.substr(6) && 255 / 255;\n      hex = hex.substring(0, 6);\n    }\n    let hexVal = parseInt(hex, 16);\n    return new _Color(hexVal >> 16, hexVal >> 8 & 255, hexVal & 255, alpha);\n  }\n  static rgb(...args) {\n    return _Color.from(...args).toMode(\"rgb\");\n  }\n  static hsl(...args) {\n    return _Color.from(...args).toMode(\"hsl\");\n  }\n  static hsb(...args) {\n    return _Color.from(...args).toMode(\"hsb\");\n  }\n  static lab(...args) {\n    return _Color.from(...args).toMode(\"lab\");\n  }\n  static lch(...args) {\n    return _Color.from(...args).toMode(\"lch\");\n  }\n  static luv(...args) {\n    return _Color.from(...args).toMode(\"luv\");\n  }\n  static xyz(...args) {\n    return _Color.from(...args).toMode(\"xyz\");\n  }\n  static maxValues(mode) {\n    return _Color.ranges[mode].zipSlice(1).$take([0, 1, 2]);\n  }\n  get hex() {\n    return this.toString(\"hex\");\n  }\n  get rgb() {\n    return this.toString(\"rgb\");\n  }\n  get rgba() {\n    return this.toString(\"rgba\");\n  }\n  clone() {\n    let c = new _Color(this);\n    c.toMode(this._mode);\n    return c;\n  }\n  toMode(mode, convert = false) {\n    if (convert) {\n      let fname = this._mode.toUpperCase() + \"to\" + mode.toUpperCase();\n      if (_Color[fname]) {\n        this.to(_Color[fname](this, this._isNorm, this._isNorm));\n      } else {\n        throw new Error(\"Cannot convert color with \" + fname);\n      }\n    }\n    this._mode = mode;\n    return this;\n  }\n  get mode() {\n    return this._mode;\n  }\n  get r() {\n    return this[0];\n  }\n  set r(n) {\n    this[0] = n;\n  }\n  get g() {\n    return this[1];\n  }\n  set g(n) {\n    this[1] = n;\n  }\n  get b() {\n    return this[2];\n  }\n  set b(n) {\n    this[2] = n;\n  }\n  get h() {\n    return this._mode == \"lch\" ? this[2] : this[0];\n  }\n  set h(n) {\n    let i = this._mode == \"lch\" ? 2 : 0;\n    this[i] = n;\n  }\n  get s() {\n    return this[1];\n  }\n  set s(n) {\n    this[1] = n;\n  }\n  get l() {\n    return this._mode == \"hsl\" ? this[2] : this[0];\n  }\n  set l(n) {\n    let i = this._mode == \"hsl\" ? 2 : 0;\n    this[i] = n;\n  }\n  get a() {\n    return this[1];\n  }\n  set a(n) {\n    this[1] = n;\n  }\n  get c() {\n    return this[1];\n  }\n  set c(n) {\n    this[1] = n;\n  }\n  get u() {\n    return this[1];\n  }\n  set u(n) {\n    this[1] = n;\n  }\n  get v() {\n    return this[2];\n  }\n  set v(n) {\n    this[2] = n;\n  }\n  set alpha(n) {\n    if (this.length > 3)\n      this[3] = n;\n  }\n  get alpha() {\n    return this.length > 3 ? this[3] : 1;\n  }\n  get normalized() {\n    return this._isNorm;\n  }\n  set normalized(b) {\n    this._isNorm = b;\n  }\n  normalize(toNorm = true) {\n    if (this._isNorm == toNorm)\n      return this;\n    let ranges = _Color.ranges[this._mode];\n    for (let i = 0; i < 3; i++) {\n      this[i] = !toNorm ? Num.mapToRange(this[i], 0, 1, ranges[i][0], ranges[i][1]) : Num.mapToRange(this[i], ranges[i][0], ranges[i][1], 0, 1);\n    }\n    this._isNorm = toNorm;\n    return this;\n  }\n  $normalize(toNorm = true) {\n    return this.clone().normalize(toNorm);\n  }\n  toString(format = \"mode\") {\n    if (format == \"hex\") {\n      let _hex = (n) => {\n        let s = Math.floor(n).toString(16);\n        return s.length < 2 ? \"0\" + s : s;\n      };\n      return `#${_hex(this[0])}${_hex(this[1])}${_hex(this[2])}`;\n    } else if (format == \"rgba\") {\n      return `rgba(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])},${this.alpha})`;\n    } else if (format == \"rgb\") {\n      return `rgb(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])})`;\n    } else {\n      return `${this._mode}(${this[0]},${this[1]},${this[2]},${this.alpha})`;\n    }\n  }\n  static RGBtoHSL(rgb, normalizedInput = false, normalizedOutput = false) {\n    let [r, g, b] = !normalizedInput ? rgb.$normalize() : rgb;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h = (max + min) / 2;\n    let s = h;\n    let l = h;\n    if (max == min) {\n      h = 0;\n      s = 0;\n    } else {\n      let d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      h = 0;\n      if (max === r) {\n        h = (g - b) / d + (g < b ? 6 : 0);\n      } else if (max === g) {\n        h = (b - r) / d + 2;\n      } else if (max === b) {\n        h = (r - g) / d + 4;\n      }\n    }\n    return _Color.hsl(normalizedOutput ? h / 60 : h * 60, s, l, rgb.alpha);\n  }\n  static HSLtoRGB(hsl, normalizedInput = false, normalizedOutput = false) {\n    let [h, s, l] = hsl;\n    if (!normalizedInput)\n      h = h / 360;\n    if (s == 0)\n      return _Color.rgb(l * 255, l * 255, l * 255, hsl.alpha);\n    let q = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n    let p = 2 * l - q;\n    let convert = (t) => {\n      t = t < 0 ? t + 1 : t > 1 ? t - 1 : t;\n      if (t * 6 < 1) {\n        return p + (q - p) * t * 6;\n      } else if (t * 2 < 1) {\n        return q;\n      } else if (t * 3 < 2) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n      } else {\n        return p;\n      }\n    };\n    let sc = normalizedOutput ? 1 : 255;\n    return _Color.rgb(\n      sc * convert(h + 1 / 3),\n      sc * convert(h),\n      sc * convert(h - 1 / 3),\n      hsl.alpha\n    );\n  }\n  static RGBtoHSB(rgb, normalizedInput = false, normalizedOutput = false) {\n    let [r, g, b] = !normalizedInput ? rgb.$normalize() : rgb;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let d = max - min;\n    let h = 0;\n    let s = max === 0 ? 0 : d / max;\n    let v = max;\n    if (max != min) {\n      if (max === r) {\n        h = (g - b) / d + (g < b ? 6 : 0);\n      } else if (max === g) {\n        h = (b - r) / d + 2;\n      } else if (max === b) {\n        h = (r - g) / d + 4;\n      }\n    }\n    return _Color.hsb(normalizedOutput ? h / 60 : h * 60, s, v, rgb.alpha);\n  }\n  static HSBtoRGB(hsb, normalizedInput = false, normalizedOutput = false) {\n    let [h, s, v] = hsb;\n    if (!normalizedInput)\n      h = h / 360;\n    let i = Math.floor(h * 6);\n    let f = h * 6 - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n    let pick = [\n      [v, t, p],\n      [q, v, p],\n      [p, v, t],\n      [p, q, v],\n      [t, p, v],\n      [v, p, q]\n    ];\n    let c = pick[i % 6];\n    let sc = normalizedOutput ? 1 : 255;\n    return _Color.rgb(\n      sc * c[0],\n      sc * c[1],\n      sc * c[2],\n      hsb.alpha\n    );\n  }\n  static RGBtoLAB(rgb, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? rgb.$normalize(false) : rgb;\n    return _Color.XYZtoLAB(_Color.RGBtoXYZ(c), false, normalizedOutput);\n  }\n  static LABtoRGB(lab, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? lab.$normalize(false) : lab;\n    return _Color.XYZtoRGB(_Color.LABtoXYZ(c), false, normalizedOutput);\n  }\n  static RGBtoLCH(rgb, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? rgb.$normalize(false) : rgb;\n    return _Color.LABtoLCH(_Color.RGBtoLAB(c), false, normalizedOutput);\n  }\n  static LCHtoRGB(lch, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? lch.$normalize(false) : lch;\n    return _Color.LABtoRGB(_Color.LCHtoLAB(c), false, normalizedOutput);\n  }\n  static RGBtoLUV(rgb, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? rgb.$normalize(false) : rgb;\n    return _Color.XYZtoLUV(_Color.RGBtoXYZ(c), false, normalizedOutput);\n  }\n  static LUVtoRGB(luv, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? luv.$normalize(false) : luv;\n    return _Color.XYZtoRGB(_Color.LUVtoXYZ(c), false, normalizedOutput);\n  }\n  static RGBtoXYZ(rgb, normalizedInput = false, normalizedOutput = false) {\n    let c = !normalizedInput ? rgb.$normalize() : rgb.clone();\n    for (let i = 0; i < 3; i++) {\n      c[i] = c[i] > 0.04045 ? Math.pow((c[i] + 0.055) / 1.055, 2.4) : c[i] / 12.92;\n      if (!normalizedOutput)\n        c[i] = c[i] * 100;\n    }\n    let cc = _Color.xyz(\n      c[0] * 0.4124564 + c[1] * 0.3575761 + c[2] * 0.1804375,\n      c[0] * 0.2126729 + c[1] * 0.7151522 + c[2] * 0.072175,\n      c[0] * 0.0193339 + c[1] * 0.119192 + c[2] * 0.9503041,\n      rgb.alpha\n    );\n    return normalizedOutput ? cc.normalize() : cc;\n  }\n  static XYZtoRGB(xyz, normalizedInput = false, normalizedOutput = false) {\n    let [x, y, z] = !normalizedInput ? xyz.$normalize() : xyz;\n    let rgb = [\n      x * 3.2406254773200533 + y * -1.5372079722103187 + z * -0.4986285986982479,\n      x * -0.9689307147293197 + y * 1.8757560608852415 + z * 0.041517523842953964,\n      x * 0.055710120445510616 + y * -0.2040210505984867 + z * 1.0569959422543882\n    ];\n    for (let i = 0; i < 3; i++) {\n      rgb[i] = rgb[i] > 31308e-7 ? 1.055 * Math.pow(rgb[i], 1 / 2.4) - 0.055 : 12.92 * rgb[i];\n      rgb[i] = Math.max(0, Math.min(1, rgb[i]));\n      if (!normalizedOutput)\n        rgb[i] = Math.round(rgb[i] * 255);\n    }\n    let cc = _Color.rgb(rgb[0], rgb[1], rgb[2], xyz.alpha);\n    return normalizedOutput ? cc.normalize() : cc;\n  }\n  static XYZtoLAB(xyz, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? xyz.$normalize(false) : xyz.clone();\n    const eps = 0.00885645167;\n    const kap = 903.296296296;\n    c.divide(_Color.D65);\n    let fn = (n) => n > eps ? Math.pow(n, 1 / 3) : (kap * n + 16) / 116;\n    let cy = fn(c[1]);\n    let cc = _Color.lab(\n      116 * cy - 16,\n      500 * (fn(c[0]) - cy),\n      200 * (cy - fn(c[2])),\n      xyz.alpha\n    );\n    return normalizedOutput ? cc.normalize() : cc;\n  }\n  static LABtoXYZ(lab, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? lab.$normalize(false) : lab;\n    let y = (c[0] + 16) / 116;\n    let x = c[1] / 500 + y;\n    let z = y - c[2] / 200;\n    const eps = 0.00885645167;\n    const kap = 903.296296296;\n    let d = _Color.D65;\n    const xxx = Math.pow(x, 3);\n    const zzz = Math.pow(z, 3);\n    let cc = _Color.xyz(\n      d[0] * (xxx > eps ? xxx : (116 * x - 16) / kap),\n      d[1] * (c[0] > kap * eps ? Math.pow((c[0] + 16) / 116, 3) : c[0] / kap),\n      d[2] * (zzz > eps ? zzz : (116 * z - 16) / kap),\n      lab.alpha\n    );\n    return normalizedOutput ? cc.normalize() : cc;\n  }\n  static XYZtoLUV(xyz, normalizedInput = false, normalizedOutput = false) {\n    let [x, y, z] = normalizedInput ? xyz.$normalize(false) : xyz;\n    let u = 4 * x / (x + 15 * y + 3 * z);\n    let v = 9 * y / (x + 15 * y + 3 * z);\n    y = y / 100;\n    y = y > 8856e-6 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    let refU = 4 * _Color.D65[0] / (_Color.D65[0] + 15 * _Color.D65[1] + 3 * _Color.D65[2]);\n    let refV = 9 * _Color.D65[1] / (_Color.D65[0] + 15 * _Color.D65[1] + 3 * _Color.D65[2]);\n    let L = 116 * y - 16;\n    return _Color.luv(\n      L,\n      13 * L * (u - refU),\n      13 * L * (v - refV),\n      xyz.alpha\n    );\n  }\n  static LUVtoXYZ(luv, normalizedInput = false, normalizedOutput = false) {\n    let [l, u, v] = normalizedInput ? luv.$normalize(false) : luv;\n    let y = (l + 16) / 116;\n    let cubeY = y * y * y;\n    y = cubeY > 8856e-6 ? cubeY : (y - 16 / 116) / 7.787;\n    let refU = 4 * _Color.D65[0] / (_Color.D65[0] + 15 * _Color.D65[1] + 3 * _Color.D65[2]);\n    let refV = 9 * _Color.D65[1] / (_Color.D65[0] + 15 * _Color.D65[1] + 3 * _Color.D65[2]);\n    u = u / (13 * l) + refU;\n    v = v / (13 * l) + refV;\n    y = y * 100;\n    let x = -1 * (9 * y * u) / ((u - 4) * v - u * v);\n    let z = (9 * y - 15 * v * y - v * x) / (3 * v);\n    return _Color.xyz(x, y, z, luv.alpha);\n  }\n  static LABtoLCH(lab, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? lab.$normalize(false) : lab;\n    let h = Geom.toDegree(Geom.boundRadian(Math.atan2(c[2], c[1])));\n    return _Color.lch(\n      c[0],\n      Math.sqrt(c[1] * c[1] + c[2] * c[2]),\n      h,\n      lab.alpha\n    );\n  }\n  static LCHtoLAB(lch, normalizedInput = false, normalizedOutput = false) {\n    let c = normalizedInput ? lch.$normalize(false) : lch;\n    let rad = Geom.toRadian(c[2]);\n    return _Color.lab(\n      c[0],\n      Math.cos(rad) * c[1],\n      Math.sin(rad) * c[1],\n      lch.alpha\n    );\n  }\n};\nvar Color = _Color;\nColor.D65 = new Pt(95.047, 100, 108.883, 1);\nColor.ranges = {\n  rgb: new Group(new Pt(0, 255), new Pt(0, 255), new Pt(0, 255)),\n  hsl: new Group(new Pt(0, 360), new Pt(0, 1), new Pt(0, 1)),\n  hsb: new Group(new Pt(0, 360), new Pt(0, 1), new Pt(0, 1)),\n  lab: new Group(new Pt(0, 100), new Pt(-128, 127), new Pt(-128, 127)),\n  lch: new Group(new Pt(0, 100), new Pt(0, 100), new Pt(0, 360)),\n  luv: new Group(new Pt(0, 100), new Pt(-134, 220), new Pt(-140, 122)),\n  xyz: new Group(new Pt(0, 100), new Pt(0, 100), new Pt(0, 100))\n};\n\n// src/Dom.ts\nvar DOMSpace = class extends MultiTouchSpace {\n  constructor(elem, callback) {\n    super();\n    this.id = \"domspace\";\n    this._autoResize = true;\n    this._bgcolor = \"#e1e9f0\";\n    this._css = {};\n    var _selector = null;\n    var _existed = false;\n    this.id = \"pts\";\n    if (elem instanceof Element) {\n      _selector = elem;\n      this.id = \"pts_existing_space\";\n    } else {\n      _selector = document.querySelector(elem);\n      _existed = true;\n      this.id = elem.substr(1);\n    }\n    if (!_selector) {\n      this._container = DOMSpace.createElement(\"div\", \"pts_container\");\n      this._canvas = DOMSpace.createElement(\"div\", \"pts_element\");\n      this._container.appendChild(this._canvas);\n      document.body.appendChild(this._container);\n      _existed = false;\n    } else {\n      this._canvas = _selector;\n      this._container = _selector.parentElement;\n    }\n    setTimeout(this._ready.bind(this, callback), 50);\n  }\n  static createElement(elem = \"div\", id, appendTo) {\n    let d = document.createElement(elem);\n    if (id)\n      d.setAttribute(\"id\", id);\n    if (appendTo && appendTo.appendChild)\n      appendTo.appendChild(d);\n    return d;\n  }\n  _ready(callback) {\n    if (!this._container)\n      throw new Error(`Cannot initiate #${this.id} element`);\n    this._isReady = true;\n    this._resizeHandler(null);\n    this.clear(this._bgcolor);\n    this._canvas.dispatchEvent(new Event(\"ready\"));\n    for (let k in this.players) {\n      if (this.players.hasOwnProperty(k)) {\n        if (this.players[k].start)\n          this.players[k].start(this.bound.clone(), this);\n      }\n    }\n    this._pointer = this.center;\n    this.refresh(false);\n    if (callback)\n      callback(this.bound, this._canvas);\n  }\n  setup(opt) {\n    if (opt.bgcolor) {\n      this._bgcolor = opt.bgcolor;\n    }\n    this.autoResize = opt.resize != void 0 ? opt.resize : false;\n    return this;\n  }\n  getForm() {\n    return null;\n  }\n  set autoResize(auto) {\n    this._autoResize = auto;\n    if (auto) {\n      window.addEventListener(\"resize\", this._resizeHandler.bind(this));\n    } else {\n      delete this._css[\"width\"];\n      delete this._css[\"height\"];\n      window.removeEventListener(\"resize\", this._resizeHandler.bind(this));\n    }\n  }\n  get autoResize() {\n    return this._autoResize;\n  }\n  resize(b, evt) {\n    this.bound = b;\n    this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n    for (let k in this.players) {\n      if (this.players.hasOwnProperty(k)) {\n        let p = this.players[k];\n        if (p.resize)\n          p.resize(this.bound, evt);\n      }\n    }\n    return this;\n  }\n  _resizeHandler(evt) {\n    let b = Bound.fromBoundingRect(this._container.getBoundingClientRect());\n    if (this._autoResize) {\n      this.styles({ width: \"100%\", height: \"100%\" }, true);\n    } else {\n      this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n    }\n    this.resize(b, evt);\n  }\n  get element() {\n    return this._canvas;\n  }\n  get parent() {\n    return this._container;\n  }\n  get ready() {\n    return this._isReady;\n  }\n  clear(bg) {\n    if (bg)\n      this.background = bg;\n    this._canvas.innerHTML = \"\";\n    return this;\n  }\n  set background(bg) {\n    this._bgcolor = bg;\n    this._container.style.backgroundColor = this._bgcolor;\n  }\n  get background() {\n    return this._bgcolor;\n  }\n  style(key, val, update = false) {\n    this._css[key] = val;\n    if (update)\n      this._canvas.style[key] = val;\n    return this;\n  }\n  styles(styles, update = false) {\n    for (let k in styles) {\n      if (styles.hasOwnProperty(k))\n        this.style(k, styles[k], update);\n    }\n    return this;\n  }\n  static setAttr(elem, data) {\n    for (let k in data) {\n      if (data.hasOwnProperty(k)) {\n        elem.setAttribute(k, data[k]);\n      }\n    }\n    return elem;\n  }\n  static getInlineStyles(data) {\n    let str = \"\";\n    for (let k in data) {\n      if (data.hasOwnProperty(k)) {\n        if (data[k])\n          str += `${k}: ${data[k]}; `;\n      }\n    }\n    return str;\n  }\n  dispose() {\n    window.removeEventListener(\"resize\", this._resizeHandler.bind(this));\n    this.stop();\n    this.removeAll();\n    return this;\n  }\n};\nvar HTMLSpace = class extends DOMSpace {\n  getForm() {\n    return new HTMLForm(this);\n  }\n  static htmlElement(parent, name, id, autoClass = true) {\n    if (!parent || !parent.appendChild)\n      throw new Error(\"parent is not a valid DOM element\");\n    let elem = document.querySelector(`#${id}`);\n    if (!elem) {\n      elem = document.createElement(name);\n      elem.setAttribute(\"id\", id);\n      if (autoClass)\n        elem.setAttribute(\"class\", id.substring(0, id.indexOf(\"-\")));\n      parent.appendChild(elem);\n    }\n    return elem;\n  }\n  remove(player) {\n    let temp = this._container.querySelectorAll(\".\" + HTMLForm.scopeID(player));\n    temp.forEach((el) => {\n      el.parentNode.removeChild(el);\n    });\n    return super.remove(player);\n  }\n  removeAll() {\n    this._container.innerHTML = \"\";\n    return super.removeAll();\n  }\n};\nvar _HTMLForm = class extends VisualForm {\n  constructor(space) {\n    super();\n    this._style = {\n      \"filled\": true,\n      \"stroked\": true,\n      \"background\": \"#f03\",\n      \"border-color\": \"#fff\",\n      \"color\": \"#000\",\n      \"border-width\": \"1px\",\n      \"border-radius\": \"0\",\n      \"border-style\": \"solid\",\n      \"opacity\": 1,\n      \"position\": \"absolute\",\n      \"top\": 0,\n      \"left\": 0,\n      \"width\": 0,\n      \"height\": 0\n    };\n    this._ctx = {\n      group: null,\n      groupID: \"pts\",\n      groupCount: 0,\n      currentID: \"pts0\",\n      currentClass: \"\",\n      style: {}\n    };\n    this._ready = false;\n    this._space = space;\n    this._space.add({ start: () => {\n      this._ctx.group = this._space.element;\n      this._ctx.groupID = \"pts_dom_\" + _HTMLForm.groupID++;\n      this._ctx.style = Object.assign({}, this._style);\n      this._ready = true;\n    } });\n  }\n  get space() {\n    return this._space;\n  }\n  styleTo(k, v, unit = \"\") {\n    if (this._ctx.style[k] === void 0)\n      throw new Error(`${k} style property doesn't exist`);\n    this._ctx.style[k] = `${v}${unit}`;\n  }\n  alpha(a) {\n    this.styleTo(\"opacity\", a);\n    return this;\n  }\n  fill(c) {\n    if (typeof c == \"boolean\") {\n      this.styleTo(\"filled\", c);\n      if (!c)\n        this.styleTo(\"background\", \"transparent\");\n    } else {\n      this.styleTo(\"filled\", true);\n      this.styleTo(\"background\", c);\n    }\n    return this;\n  }\n  stroke(c, width, linejoin, linecap) {\n    if (typeof c == \"boolean\") {\n      this.styleTo(\"stroked\", c);\n      if (!c)\n        this.styleTo(\"border-width\", 0);\n    } else {\n      this.styleTo(\"stroked\", true);\n      this.styleTo(\"border-color\", c);\n      this.styleTo(\"border-width\", (width || 1) + \"px\");\n    }\n    return this;\n  }\n  fillText(c) {\n    this.styleTo(\"color\", c);\n    return this;\n  }\n  cls(c) {\n    if (typeof c == \"boolean\") {\n      this._ctx.currentClass = \"\";\n    } else {\n      this._ctx.currentClass = c;\n    }\n    return this;\n  }\n  font(sizeOrFont, weight, style, lineHeight, family) {\n    if (typeof sizeOrFont == \"number\") {\n      this._font.size = sizeOrFont;\n      if (family)\n        this._font.face = family;\n      if (weight)\n        this._font.weight = weight;\n      if (style)\n        this._font.style = style;\n      if (lineHeight)\n        this._font.lineHeight = lineHeight;\n    } else {\n      this._font = sizeOrFont;\n    }\n    this._ctx.style[\"font\"] = this._font.value;\n    return this;\n  }\n  reset() {\n    this._ctx.style = Object.assign({}, this._style);\n    this._font = new Font(10, \"sans-serif\");\n    this._ctx.style[\"font\"] = this._font.value;\n    return this;\n  }\n  updateScope(group_id, group) {\n    this._ctx.group = group;\n    this._ctx.groupID = group_id;\n    this._ctx.groupCount = 0;\n    this.nextID();\n    return this._ctx;\n  }\n  scope(item) {\n    if (!item || item.animateID == null)\n      throw new Error(\"item not defined or not yet added to Space\");\n    return this.updateScope(_HTMLForm.scopeID(item), this.space.element);\n  }\n  nextID() {\n    this._ctx.groupCount++;\n    this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n    return this._ctx.currentID;\n  }\n  static getID(ctx) {\n    return ctx.currentID || `p-${_HTMLForm.domID++}`;\n  }\n  static scopeID(item) {\n    return `item-${item.animateID}`;\n  }\n  static style(elem, styles) {\n    let st = [];\n    if (!styles[\"filled\"])\n      st.push(\"background: none\");\n    if (!styles[\"stroked\"])\n      st.push(\"border: none\");\n    for (let k in styles) {\n      if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n        let v = styles[k];\n        if (v) {\n          if (!styles[\"filled\"] && k.indexOf(\"background\") === 0) {\n            continue;\n          } else if (!styles[\"stroked\"] && k.indexOf(\"border-width\") === 0) {\n            continue;\n          } else {\n            st.push(`${k}: ${v}`);\n          }\n        }\n      }\n    }\n    return HTMLSpace.setAttr(elem, { style: st.join(\";\") });\n  }\n  static rectStyle(ctx, pt, size) {\n    ctx.style[\"left\"] = pt[0] + \"px\";\n    ctx.style[\"top\"] = pt[1] + \"px\";\n    ctx.style[\"width\"] = size[0] + \"px\";\n    ctx.style[\"height\"] = size[1] + \"px\";\n    return ctx;\n  }\n  static textStyle(ctx, pt) {\n    ctx.style[\"left\"] = pt[0] + \"px\";\n    ctx.style[\"top\"] = pt[1] + \"px\";\n    return ctx;\n  }\n  static point(ctx, pt, radius = 5, shape = \"square\") {\n    if (shape === \"circle\") {\n      return _HTMLForm.circle(ctx, pt, radius);\n    } else {\n      return _HTMLForm.square(ctx, pt, radius);\n    }\n  }\n  point(pt, radius = 5, shape = \"square\") {\n    this.nextID();\n    if (shape == \"circle\")\n      this.styleTo(\"border-radius\", \"100%\");\n    _HTMLForm.point(this._ctx, pt, radius, shape);\n    return this;\n  }\n  static circle(ctx, pt, radius = 10) {\n    let elem = HTMLSpace.htmlElement(ctx.group, \"div\", _HTMLForm.getID(ctx));\n    HTMLSpace.setAttr(elem, { class: `pts-form pts-circle ${ctx.currentClass}` });\n    _HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(radius), new Pt(radius * 2, radius * 2));\n    _HTMLForm.style(elem, ctx.style);\n    return elem;\n  }\n  circle(pts) {\n    this.nextID();\n    this.styleTo(\"border-radius\", \"100%\");\n    _HTMLForm.circle(this._ctx, pts[0], pts[1][0]);\n    return this;\n  }\n  static square(ctx, pt, halfsize) {\n    let elem = HTMLSpace.htmlElement(ctx.group, \"div\", _HTMLForm.getID(ctx));\n    HTMLSpace.setAttr(elem, { class: `pts-form pts-square ${ctx.currentClass}` });\n    _HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(halfsize), new Pt(halfsize * 2, halfsize * 2));\n    _HTMLForm.style(elem, ctx.style);\n    return elem;\n  }\n  square(pt, halfsize) {\n    this.nextID();\n    _HTMLForm.square(this._ctx, pt, halfsize);\n    return this;\n  }\n  static rect(ctx, pts) {\n    let p = Util.iterToArray(pts);\n    if (!Util.arrayCheck(p))\n      return;\n    let elem = HTMLSpace.htmlElement(ctx.group, \"div\", _HTMLForm.getID(ctx));\n    HTMLSpace.setAttr(elem, { class: `pts-form pts-rect ${ctx.currentClass}` });\n    _HTMLForm.rectStyle(ctx, p[0], p[1]);\n    _HTMLForm.style(elem, ctx.style);\n    return elem;\n  }\n  rect(pts) {\n    this.nextID();\n    this.styleTo(\"border-radius\", \"0\");\n    _HTMLForm.rect(this._ctx, pts);\n    return this;\n  }\n  static text(ctx, pt, txt) {\n    let elem = HTMLSpace.htmlElement(ctx.group, \"div\", _HTMLForm.getID(ctx));\n    HTMLSpace.setAttr(elem, { class: `pts-form pts-text ${ctx.currentClass}` });\n    elem.textContent = txt;\n    _HTMLForm.textStyle(ctx, pt);\n    _HTMLForm.style(elem, ctx.style);\n    return elem;\n  }\n  text(pt, txt) {\n    this.nextID();\n    _HTMLForm.text(this._ctx, pt, txt);\n    return this;\n  }\n  log(txt) {\n    this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n    return this;\n  }\n  arc(pt, radius, startAngle, endAngle, cc) {\n    Util.warn(\"arc is not implemented in HTMLForm\");\n    return this;\n  }\n  line(pts) {\n    Util.warn(\"line is not implemented in HTMLForm\");\n    return this;\n  }\n  polygon(pts) {\n    Util.warn(\"polygon is not implemented in HTMLForm\");\n    return this;\n  }\n};\nvar HTMLForm = _HTMLForm;\nHTMLForm.groupID = 0;\nHTMLForm.domID = 0;\n\n// src/Svg.ts\nvar SVGSpace = class extends DOMSpace {\n  constructor(elem, callback) {\n    super(elem, callback);\n    this._bgcolor = \"#999\";\n    if (this._canvas.nodeName.toLowerCase() != \"svg\") {\n      let s = SVGSpace.svgElement(this._canvas, \"svg\", `${this.id}_svg`);\n      this._container = this._canvas;\n      this._canvas = s;\n    }\n  }\n  getForm() {\n    return new SVGForm(this);\n  }\n  get element() {\n    return this._canvas;\n  }\n  resize(b, evt) {\n    super.resize(b, evt);\n    SVGSpace.setAttr(this.element, {\n      \"viewBox\": `0 0 ${this.bound.width} ${this.bound.height}`,\n      \"width\": `${this.bound.width}`,\n      \"height\": `${this.bound.height}`,\n      \"xmlns\": \"http://www.w3.org/2000/svg\",\n      \"version\": \"1.1\"\n    });\n    return this;\n  }\n  static svgElement(parent, name, id) {\n    if (!parent || !parent.appendChild)\n      throw new Error(\"parent is not a valid DOM element\");\n    let elem = document.querySelector(`#${id}`);\n    if (!elem) {\n      elem = document.createElementNS(\"http://www.w3.org/2000/svg\", name);\n      elem.setAttribute(\"id\", id);\n      parent.appendChild(elem);\n    }\n    return elem;\n  }\n  remove(player) {\n    let temp = this._container.querySelectorAll(\".\" + SVGForm.scopeID(player));\n    temp.forEach((el) => {\n      el.parentNode.removeChild(el);\n    });\n    return super.remove(player);\n  }\n  removeAll() {\n    this._container.innerHTML = \"\";\n    return super.removeAll();\n  }\n};\nvar _SVGForm = class extends VisualForm {\n  constructor(space) {\n    super();\n    this._style = {\n      \"filled\": true,\n      \"stroked\": true,\n      \"fill\": \"#f03\",\n      \"stroke\": \"#fff\",\n      \"stroke-width\": 1,\n      \"stroke-linejoin\": \"bevel\",\n      \"stroke-linecap\": \"sqaure\",\n      \"opacity\": 1\n    };\n    this._ctx = {\n      group: null,\n      groupID: \"pts\",\n      groupCount: 0,\n      currentID: \"pts0\",\n      currentClass: \"\",\n      style: {}\n    };\n    this._ready = false;\n    this._space = space;\n    this._space.add({ start: () => {\n      this._ctx.group = this._space.element;\n      this._ctx.groupID = \"pts_svg_\" + _SVGForm.groupID++;\n      this._ctx.style = Object.assign({}, this._style);\n      this._ready = true;\n    } });\n  }\n  get space() {\n    return this._space;\n  }\n  styleTo(k, v) {\n    if (this._ctx.style[k] === void 0)\n      throw new Error(`${k} style property doesn't exist`);\n    this._ctx.style[k] = v;\n  }\n  alpha(a) {\n    this.styleTo(\"opacity\", a);\n    return this;\n  }\n  fill(c) {\n    if (typeof c == \"boolean\") {\n      this.styleTo(\"filled\", c);\n    } else {\n      this.styleTo(\"filled\", true);\n      this.styleTo(\"fill\", c);\n    }\n    return this;\n  }\n  stroke(c, width, linejoin, linecap) {\n    if (typeof c == \"boolean\") {\n      this.styleTo(\"stroked\", c);\n    } else {\n      this.styleTo(\"stroked\", true);\n      this.styleTo(\"stroke\", c);\n      if (width)\n        this.styleTo(\"stroke-width\", width);\n      if (linejoin)\n        this.styleTo(\"stroke-linejoin\", linejoin);\n      if (linecap)\n        this.styleTo(\"stroke-linecap\", linecap);\n    }\n    return this;\n  }\n  cls(c) {\n    if (typeof c == \"boolean\") {\n      this._ctx.currentClass = \"\";\n    } else {\n      this._ctx.currentClass = c;\n    }\n    return this;\n  }\n  font(sizeOrFont, weight, style, lineHeight, family) {\n    if (typeof sizeOrFont == \"number\") {\n      this._font.size = sizeOrFont;\n      if (family)\n        this._font.face = family;\n      if (weight)\n        this._font.weight = weight;\n      if (style)\n        this._font.style = style;\n      if (lineHeight)\n        this._font.lineHeight = lineHeight;\n    } else {\n      this._font = sizeOrFont;\n    }\n    this._ctx.style[\"font\"] = this._font.value;\n    return this;\n  }\n  reset() {\n    this._ctx.style = Object.assign({}, this._style);\n    this._font = new Font(10, \"sans-serif\");\n    this._ctx.style[\"font\"] = this._font.value;\n    return this;\n  }\n  updateScope(group_id, group) {\n    this._ctx.group = group;\n    this._ctx.groupID = group_id;\n    this._ctx.groupCount = 0;\n    this.nextID();\n    return this._ctx;\n  }\n  scope(item) {\n    if (!item || item.animateID == null)\n      throw new Error(\"item not defined or not yet added to Space\");\n    return this.updateScope(_SVGForm.scopeID(item), this.space.element);\n  }\n  nextID() {\n    this._ctx.groupCount++;\n    this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n    return this._ctx.currentID;\n  }\n  static getID(ctx) {\n    return ctx.currentID || `p-${_SVGForm.domID++}`;\n  }\n  static scopeID(item) {\n    return `item-${item.animateID}`;\n  }\n  static style(elem, styles) {\n    let st = [];\n    if (!styles[\"filled\"])\n      st.push(\"fill: none\");\n    if (!styles[\"stroked\"])\n      st.push(\"stroke: none\");\n    for (let k in styles) {\n      if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n        let v = styles[k];\n        if (v) {\n          if (!styles[\"filled\"] && k.indexOf(\"fill\") === 0) {\n            continue;\n          } else if (!styles[\"stroked\"] && k.indexOf(\"stroke\") === 0) {\n            continue;\n          } else {\n            st.push(`${k}: ${v}`);\n          }\n        }\n      }\n    }\n    return DOMSpace.setAttr(elem, { style: st.join(\";\") });\n  }\n  static point(ctx, pt, radius = 5, shape = \"square\") {\n    if (shape === \"circle\") {\n      return _SVGForm.circle(ctx, pt, radius);\n    } else {\n      return _SVGForm.square(ctx, pt, radius);\n    }\n  }\n  point(pt, radius = 5, shape = \"square\") {\n    this.nextID();\n    _SVGForm.point(this._ctx, pt, radius, shape);\n    return this;\n  }\n  static circle(ctx, pt, radius = 10) {\n    let elem = SVGSpace.svgElement(ctx.group, \"circle\", _SVGForm.getID(ctx));\n    DOMSpace.setAttr(elem, {\n      cx: pt[0],\n      cy: pt[1],\n      r: radius,\n      \"class\": `pts-svgform pts-circle ${ctx.currentClass}`\n    });\n    _SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n  circle(pts) {\n    this.nextID();\n    let p = Util.iterToArray(pts);\n    _SVGForm.circle(this._ctx, p[0], p[1][0]);\n    return this;\n  }\n  static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n    let elem = SVGSpace.svgElement(ctx.group, \"path\", _SVGForm.getID(ctx));\n    const start = new Pt(pt).toAngle(startAngle, radius, true);\n    const end = new Pt(pt).toAngle(endAngle, radius, true);\n    const diff = Geom.boundAngle(endAngle) - Geom.boundAngle(startAngle);\n    let largeArc = diff > Const.pi ? true : false;\n    if (cc)\n      largeArc = !largeArc;\n    const sweep = cc ? \"0\" : \"1\";\n    const d = `M ${start[0]} ${start[1]} A ${radius} ${radius} 0 ${largeArc ? \"1\" : \"0\"} ${sweep} ${end[0]} ${end[1]}`;\n    DOMSpace.setAttr(elem, {\n      d,\n      \"class\": `pts-svgform pts-arc ${ctx.currentClass}`\n    });\n    _SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n  arc(pt, radius, startAngle, endAngle, cc) {\n    this.nextID();\n    _SVGForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n    return this;\n  }\n  static square(ctx, pt, halfsize) {\n    let elem = SVGSpace.svgElement(ctx.group, \"rect\", _SVGForm.getID(ctx));\n    DOMSpace.setAttr(elem, {\n      x: pt[0] - halfsize,\n      y: pt[1] - halfsize,\n      width: halfsize * 2,\n      height: halfsize * 2,\n      \"class\": `pts-svgform pts-square ${ctx.currentClass}`\n    });\n    _SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n  square(pt, halfsize) {\n    this.nextID();\n    _SVGForm.square(this._ctx, pt, halfsize);\n    return this;\n  }\n  static line(ctx, pts) {\n    let points = _SVGForm.pointsString(pts);\n    if (points.count < 2)\n      return;\n    if (points.count > 2)\n      return _SVGForm._poly(ctx, points.string, false);\n    let elem = SVGSpace.svgElement(ctx.group, \"line\", _SVGForm.getID(ctx));\n    let p = Util.iterToArray(pts);\n    DOMSpace.setAttr(elem, {\n      x1: p[0][0],\n      y1: p[0][1],\n      x2: p[1][0],\n      y2: p[1][1],\n      \"class\": `pts-svgform pts-line ${ctx.currentClass}`\n    });\n    _SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n  line(pts) {\n    this.nextID();\n    _SVGForm.line(this._ctx, pts);\n    return this;\n  }\n  static _poly(ctx, points, closePath = true) {\n    let elem = SVGSpace.svgElement(ctx.group, closePath ? \"polygon\" : \"polyline\", _SVGForm.getID(ctx));\n    DOMSpace.setAttr(elem, {\n      points,\n      \"class\": `pts-svgform pts-polygon ${ctx.currentClass}`\n    });\n    _SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n  static pointsString(pts) {\n    let points = \"\";\n    let count = 0;\n    for (let p of pts) {\n      points += `${p[0]},${p[1]} `;\n      count++;\n    }\n    return { string: points, count };\n  }\n  static polygon(ctx, pts) {\n    let points = _SVGForm.pointsString(pts);\n    return _SVGForm._poly(ctx, points.string, true);\n  }\n  polygon(pts) {\n    this.nextID();\n    _SVGForm.polygon(this._ctx, pts);\n    return this;\n  }\n  static rect(ctx, pts) {\n    if (!Util.arrayCheck(pts))\n      return;\n    let elem = SVGSpace.svgElement(ctx.group, \"rect\", _SVGForm.getID(ctx));\n    let bound = Group.fromArray(pts).boundingBox();\n    let size = Rectangle.size(bound);\n    DOMSpace.setAttr(elem, {\n      x: bound[0][0],\n      y: bound[0][1],\n      width: size[0],\n      height: size[1],\n      \"class\": `pts-svgform pts-rect ${ctx.currentClass}`\n    });\n    _SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n  rect(pts) {\n    this.nextID();\n    _SVGForm.rect(this._ctx, pts);\n    return this;\n  }\n  static text(ctx, pt, txt) {\n    let elem = SVGSpace.svgElement(ctx.group, \"text\", _SVGForm.getID(ctx));\n    DOMSpace.setAttr(elem, {\n      \"pointer-events\": \"none\",\n      x: pt[0],\n      y: pt[1],\n      dx: 0,\n      dy: 0,\n      \"class\": `pts-svgform pts-text ${ctx.currentClass}`\n    });\n    elem.textContent = txt;\n    _SVGForm.style(elem, ctx.style);\n    return elem;\n  }\n  text(pt, txt) {\n    this.nextID();\n    _SVGForm.text(this._ctx, pt, txt);\n    return this;\n  }\n  log(txt) {\n    this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n    return this;\n  }\n};\nvar SVGForm = _SVGForm;\nSVGForm.groupID = 0;\nSVGForm.domID = 0;\n\n// src/Physics.ts\nvar World = class {\n  constructor(bound, friction = 1, gravity = 0) {\n    this._lastTime = null;\n    this._gravity = new Pt();\n    this._friction = 1;\n    this._damping = 0.75;\n    this._particles = [];\n    this._bodies = [];\n    this._pnames = [];\n    this._bnames = [];\n    this._bound = Bound.fromGroup(bound);\n    this._friction = friction;\n    this._gravity = typeof gravity === \"number\" ? new Pt(0, gravity) : new Pt(gravity);\n    return this;\n  }\n  get bound() {\n    return this._bound;\n  }\n  set bound(bound) {\n    this._bound = bound;\n  }\n  get gravity() {\n    return this._gravity;\n  }\n  set gravity(g) {\n    this._gravity = g;\n  }\n  get friction() {\n    return this._friction;\n  }\n  set friction(f) {\n    this._friction = f;\n  }\n  get damping() {\n    return this._damping;\n  }\n  set damping(f) {\n    this._damping = f;\n  }\n  get bodyCount() {\n    return this._bodies.length;\n  }\n  get particleCount() {\n    return this._particles.length;\n  }\n  body(id) {\n    let idx = id;\n    if (typeof id === \"string\" && id.length > 0) {\n      idx = this._bnames.indexOf(id);\n    }\n    if (!(idx >= 0))\n      return void 0;\n    return this._bodies[idx];\n  }\n  particle(id) {\n    let idx = id;\n    if (typeof id === \"string\" && id.length > 0) {\n      idx = this._pnames.indexOf(id);\n    }\n    if (!(idx >= 0))\n      return void 0;\n    return this._particles[idx];\n  }\n  bodyIndex(name) {\n    return this._bnames.indexOf(name);\n  }\n  particleIndex(name) {\n    return this._pnames.indexOf(name);\n  }\n  update(ms) {\n    let dt = ms / 1e3;\n    this._updateParticles(dt);\n    this._updateBodies(dt);\n  }\n  drawParticles(fn) {\n    this._drawParticles = fn;\n  }\n  drawBodies(fn) {\n    this._drawBodies = fn;\n  }\n  add(p, name = \"\") {\n    if (p instanceof Body) {\n      this._bodies.push(p);\n      this._bnames.push(name);\n    } else {\n      this._particles.push(p);\n      this._pnames.push(name);\n    }\n    return this;\n  }\n  _index(fn, id) {\n    let index = 0;\n    if (typeof id === \"string\") {\n      index = fn(id);\n      if (index < 0)\n        throw new Error(`Cannot find index of ${id}. You can use particleIndex() or bodyIndex() function to check existence by name.`);\n    } else {\n      index = id;\n    }\n    return index;\n  }\n  removeBody(from, count = 1) {\n    const index = this._index(this.bodyIndex.bind(this), from);\n    const param = index < 0 ? [index * -1 - 1, count] : [index, count];\n    this._bodies.splice(param[0], param[1]);\n    this._bnames.splice(param[0], param[1]);\n    return this;\n  }\n  removeParticle(from, count = 1) {\n    const index = this._index(this.particleIndex.bind(this), from);\n    const param = index < 0 ? [index * -1 - 1, count] : [index, count];\n    this._particles.splice(param[0], param[1]);\n    this._pnames.splice(param[0], param[1]);\n    return this;\n  }\n  static edgeConstraint(p1, p2, dist, stiff = 1, precise = false) {\n    const m1 = 1 / (p1.mass || 1);\n    const m2 = 1 / (p2.mass || 1);\n    const mm = m1 + m2;\n    let delta = p2.$subtract(p1);\n    let distSq = dist * dist;\n    let d = precise ? dist / delta.magnitude() - 1 : distSq / (delta.dot(delta) + distSq) - 0.5;\n    let f = delta.$multiply(d * stiff);\n    p1.subtract(f.$multiply(m1 / mm));\n    p2.add(f.$multiply(m2 / mm));\n    return p1;\n  }\n  static boundConstraint(p, rect, damping = 0.75) {\n    let bound = Geom.boundingBox(rect);\n    let np = p.$min(bound[1].subtract(p.radius)).$max(bound[0].add(p.radius));\n    if (np[0] === bound[0][0] || np[0] === bound[1][0]) {\n      let c = p.changed.$multiply(damping);\n      p.previous = np.$subtract(new Pt(-c[0], c[1]));\n    } else if (np[1] === bound[0][1] || np[1] === bound[1][1]) {\n      let c = p.changed.$multiply(damping);\n      p.previous = np.$subtract(new Pt(c[0], -c[1]));\n    }\n    p.to(np);\n  }\n  integrate(p, dt, prevDt) {\n    p.addForce(this._gravity);\n    p.verlet(dt, this._friction, prevDt);\n    return p;\n  }\n  _updateParticles(dt) {\n    for (let i = 0, len = this._particles.length; i < len; i++) {\n      let p = this._particles[i];\n      this.integrate(p, dt, this._lastTime);\n      World.boundConstraint(p, this._bound, this._damping);\n      for (let k = i + 1; k < len; k++) {\n        if (i !== k) {\n          let p2 = this._particles[k];\n          p.collide(p2, this._damping);\n        }\n      }\n      if (this._drawParticles)\n        this._drawParticles(p, i);\n    }\n    this._lastTime = dt;\n  }\n  _updateBodies(dt) {\n    for (let i = 0, len = this._bodies.length; i < len; i++) {\n      let bds = this._bodies[i];\n      if (bds) {\n        for (let k = 0, klen = bds.length; k < klen; k++) {\n          let bk = bds[k];\n          World.boundConstraint(bk, this._bound, this._damping);\n          this.integrate(bk, dt, this._lastTime);\n        }\n        for (let k = i + 1; k < len; k++) {\n          bds.processBody(this._bodies[k]);\n        }\n        for (let m = 0, mlen = this._particles.length; m < mlen; m++) {\n          bds.processParticle(this._particles[m]);\n        }\n        bds.processEdges();\n        if (this._drawBodies)\n          this._drawBodies(bds, i);\n      }\n    }\n  }\n};\nvar Particle = class extends Pt {\n  constructor(...args) {\n    super(...args);\n    this._mass = 1;\n    this._radius = 0;\n    this._force = new Pt();\n    this._prev = new Pt();\n    this._lock = false;\n    this._prev = this.clone();\n  }\n  get mass() {\n    return this._mass;\n  }\n  set mass(m) {\n    this._mass = m;\n  }\n  get radius() {\n    return this._radius;\n  }\n  set radius(f) {\n    this._radius = f;\n  }\n  get previous() {\n    return this._prev;\n  }\n  set previous(p) {\n    this._prev = p;\n  }\n  get force() {\n    return this._force;\n  }\n  set force(g) {\n    this._force = g;\n  }\n  get body() {\n    return this._body;\n  }\n  set body(b) {\n    this._body = b;\n  }\n  get lock() {\n    return this._lock;\n  }\n  set lock(b) {\n    this._lock = b;\n    this._lockPt = new Pt(this);\n  }\n  get changed() {\n    return this.$subtract(this._prev);\n  }\n  set position(p) {\n    this.previous.to(this);\n    if (this._lock)\n      this._lockPt = p;\n    this.to(p);\n  }\n  size(r) {\n    this._mass = r;\n    this._radius = r;\n    return this;\n  }\n  addForce(...args) {\n    this._force.add(...args);\n    return this._force;\n  }\n  verlet(dt, friction, lastDt) {\n    if (this._lock) {\n      this.to(this._lockPt);\n    } else {\n      let lt = lastDt ? lastDt : dt;\n      let a = this._force.multiply(dt * (dt + lt) / 2);\n      let v = this.changed.multiply(friction * dt / lt).add(a);\n      this._prev = this.clone();\n      this.add(v);\n      this._force = new Pt();\n    }\n    return this;\n  }\n  hit(...args) {\n    this._prev.subtract(new Pt(...args).$divide(Math.sqrt(this._mass)));\n    return this;\n  }\n  collide(p2, damp = 1) {\n    let p1 = this;\n    let dp = p1.$subtract(p2);\n    let distSq = dp.magnitudeSq();\n    let dr = p1.radius + p2.radius;\n    if (distSq < dr * dr) {\n      let c1 = p1.changed;\n      let c2 = p2.changed;\n      let dist = Math.sqrt(distSq);\n      let d = dp.$multiply((dist - dr) / dist / 2);\n      let np1 = p1.$subtract(d);\n      let np2 = p2.$add(d);\n      p1.to(np1);\n      p2.to(np2);\n      let f1 = damp * dp.dot(c1) / distSq;\n      let f2 = damp * dp.dot(c2) / distSq;\n      let dm1 = p1.mass / (p1.mass + p2.mass);\n      let dm2 = p2.mass / (p1.mass + p2.mass);\n      c1.add(new Pt(f2 * dp[0] - f1 * dp[0], f2 * dp[1] - f1 * dp[1]).$multiply(dm2));\n      c2.add(new Pt(f1 * dp[0] - f2 * dp[0], f1 * dp[1] - f2 * dp[1]).$multiply(dm1));\n      p1.previous = p1.$subtract(c1);\n      p2.previous = p2.$subtract(c2);\n    }\n  }\n  toString() {\n    return `Particle: ${this[0]} ${this[1]} | previous ${this._prev[0]} ${this._prev[1]} | mass ${this._mass}`;\n  }\n};\nvar Body = class extends Group {\n  constructor() {\n    super();\n    this._cs = [];\n    this._stiff = 1;\n    this._locks = {};\n    this._mass = 1;\n  }\n  static fromGroup(body, stiff = 1, autoLink = true, autoMass = true) {\n    let b = new Body().init(body);\n    if (autoLink)\n      b.linkAll(stiff);\n    if (autoMass)\n      b.autoMass();\n    return b;\n  }\n  init(body, stiff = 1) {\n    let c = new Pt();\n    for (let li of body) {\n      let p = new Particle(li);\n      p.body = this;\n      c.add(li);\n      this.push(p);\n    }\n    this._stiff = stiff;\n    return this;\n  }\n  get mass() {\n    return this._mass;\n  }\n  set mass(m) {\n    this._mass = m;\n    for (let i = 0, len = this.length; i < len; i++) {\n      this[i].mass = this._mass;\n    }\n  }\n  autoMass() {\n    this.mass = Math.sqrt(Polygon.area(this)) / 10;\n    return this;\n  }\n  link(index1, index2, stiff) {\n    if (index1 < 0 || index1 >= this.length)\n      throw new Error(\"index1 is not in the Group's indices\");\n    if (index2 < 0 || index2 >= this.length)\n      throw new Error(\"index1 is not in the Group's indices\");\n    let d = this[index1].$subtract(this[index2]).magnitude();\n    this._cs.push([index1, index2, d, stiff || this._stiff]);\n    return this;\n  }\n  linkAll(stiff) {\n    let half = this.length / 2;\n    for (let i = 0, len = this.length; i < len; i++) {\n      let n = i >= len - 1 ? 0 : i + 1;\n      this.link(i, n, stiff);\n      if (len > 4) {\n        let nd = Math.floor(half / 2) + 1;\n        let n2 = i >= len - nd ? i % len : i + nd;\n        this.link(i, n2, stiff);\n      }\n      if (i <= half - 1) {\n        this.link(i, Math.min(this.length - 1, i + Math.floor(half)));\n      }\n    }\n  }\n  linksToLines() {\n    let gs = [];\n    for (let i = 0, len = this._cs.length; i < len; i++) {\n      let ln = this._cs[i];\n      gs.push(new Group(this[ln[0]], this[ln[1]]));\n    }\n    return gs;\n  }\n  processEdges() {\n    for (let i = 0, len = this._cs.length; i < len; i++) {\n      let [m, n, d, s] = this._cs[i];\n      World.edgeConstraint(this[m], this[n], d, s);\n    }\n  }\n  processBody(b) {\n    let b1 = this;\n    let b2 = b;\n    let hit = Polygon.hasIntersectPolygon(b1, b2);\n    if (hit) {\n      let cv = hit.normal.$multiply(hit.dist);\n      let t;\n      let eg = hit.edge;\n      if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n        t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n      } else {\n        t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n      }\n      let lambda = 1 / (t * t + (1 - t) * (1 - t));\n      let m0 = hit.vertex.body.mass || 1;\n      let m1 = hit.edge[0].body.mass || 1;\n      let mr0 = m0 / (m0 + m1);\n      let mr1 = m1 / (m0 + m1);\n      eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n      eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n      hit.vertex.add(cv.$multiply(mr1));\n    }\n  }\n  processParticle(b) {\n    let b1 = this;\n    let b2 = b;\n    let hit = Polygon.hasIntersectCircle(b1, Circle.fromCenter(b, b.radius));\n    if (hit) {\n      let cv = hit.normal.$multiply(hit.dist);\n      let t;\n      let eg = hit.edge;\n      if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n        t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n      } else {\n        t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n      }\n      let lambda = 1 / (t * t + (1 - t) * (1 - t));\n      let m0 = hit.vertex.mass || b2.mass || 1;\n      let m1 = hit.edge[0].body.mass || 1;\n      let mr0 = m0 / (m0 + m1);\n      let mr1 = m1 / (m0 + m1);\n      eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n      eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n      let c1 = b.changed.add(cv.$multiply(mr1));\n      b.previous = b.$subtract(c1);\n    }\n  }\n};\n\n// src/Play.ts\nvar Tempo = class {\n  constructor(bpm) {\n    this._listeners = {};\n    this._listenerInc = 0;\n    this.bpm = bpm;\n  }\n  static fromBeat(ms) {\n    return new Tempo(6e4 / ms);\n  }\n  get bpm() {\n    return this._bpm;\n  }\n  set bpm(n) {\n    this._bpm = n;\n    this._ms = 6e4 / this._bpm;\n  }\n  get ms() {\n    return this._ms;\n  }\n  set ms(n) {\n    this._bpm = Math.floor(6e4 / n);\n    this._ms = 6e4 / this._bpm;\n  }\n  _createID(listener) {\n    let id = \"\";\n    if (typeof listener === \"function\") {\n      id = \"_b\" + this._listenerInc++;\n    } else {\n      id = listener.name || \"_b\" + this._listenerInc++;\n    }\n    return id;\n  }\n  every(beats) {\n    let self = this;\n    let p = Array.isArray(beats) ? beats[0] : beats;\n    return {\n      start: function(fn, offset = 0, name) {\n        let id = name || self._createID(fn);\n        self._listeners[id] = { name: id, beats, period: p, index: 0, offset, duration: -1, continuous: false, fn };\n        return this;\n      },\n      progress: function(fn, offset = 0, name) {\n        let id = name || self._createID(fn);\n        self._listeners[id] = { name: id, beats, period: p, index: 0, offset, duration: -1, continuous: true, fn };\n        return this;\n      }\n    };\n  }\n  track(time) {\n    for (let k in this._listeners) {\n      if (this._listeners.hasOwnProperty(k)) {\n        let li = this._listeners[k];\n        let _t = li.offset ? time + li.offset : time;\n        let ms = li.period * this._ms;\n        let isStart = false;\n        if (_t > li.duration + ms) {\n          li.duration = _t - _t % this._ms;\n          if (Array.isArray(li.beats)) {\n            li.index = (li.index + 1) % li.beats.length;\n            li.period = li.beats[li.index];\n          }\n          isStart = true;\n        }\n        let count = Math.max(0, Math.ceil(Math.floor(li.duration / this._ms) / li.period));\n        let params = li.continuous ? [count, Num.clamp((_t - li.duration) / ms, 0, 1), _t, isStart] : [count];\n        if (li.continuous || isStart) {\n          let done = li.fn.apply(li, params);\n          if (done)\n            delete this._listeners[li.name];\n        }\n      }\n    }\n  }\n  stop(name) {\n    if (this._listeners[name])\n      delete this._listeners[name];\n  }\n  animate(time, ftime) {\n    this.track(time);\n  }\n  resize(bound, evt) {\n    return;\n  }\n  action(type, px, py, evt) {\n    return;\n  }\n};\nvar Sound = class {\n  constructor(type) {\n    this._playing = false;\n    this._type = type;\n    let _ctx = window.AudioContext || window.webkitAudioContext || false;\n    if (!_ctx)\n      throw new Error(\"Your browser doesn't support Web Audio. (No AudioContext)\");\n    this._ctx = _ctx ? new _ctx() : void 0;\n  }\n  static from(node, ctx, type = \"gen\", stream) {\n    let s = new Sound(type);\n    s._node = node;\n    s._ctx = ctx;\n    if (stream)\n      s._stream = stream;\n    return s;\n  }\n  static load(source, crossOrigin = \"anonymous\") {\n    return new Promise((resolve, reject) => {\n      let s = new Sound(\"file\");\n      s._source = typeof source === \"string\" ? new Audio(source) : source;\n      s._source.autoplay = false;\n      s._source.crossOrigin = crossOrigin;\n      s._source.addEventListener(\"ended\", function() {\n        s._playing = false;\n      });\n      s._source.addEventListener(\"error\", function() {\n        reject(\"Error loading sound\");\n      });\n      s._source.addEventListener(\"canplaythrough\", function() {\n        s._node = s._ctx.createMediaElementSource(s._source);\n        resolve(s);\n      });\n    });\n  }\n  static loadAsBuffer(url) {\n    return new Promise((resolve, reject) => {\n      let request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n      request.responseType = \"arraybuffer\";\n      let s = new Sound(\"file\");\n      request.onload = function() {\n        s._ctx.decodeAudioData(request.response, function(buffer) {\n          s.createBuffer(buffer);\n          resolve(s);\n        }, (err) => reject(\"Error decoding audio\"));\n      };\n      request.send();\n    });\n  }\n  createBuffer(buf) {\n    this._node = this._ctx.createBufferSource();\n    if (buf !== void 0)\n      this._buffer = buf;\n    this._node.buffer = this._buffer;\n    this._node.onended = () => {\n      this._playing = false;\n    };\n    return this;\n  }\n  static generate(type, val) {\n    let s = new Sound(\"gen\");\n    return s._gen(type, val);\n  }\n  _gen(type, val) {\n    this._node = this._ctx.createOscillator();\n    let osc = this._node;\n    osc.type = type;\n    if (type === \"custom\") {\n      osc.setPeriodicWave(val);\n    } else {\n      osc.frequency.value = val;\n    }\n    return this;\n  }\n  static async input(constraint) {\n    try {\n      let s = new Sound(\"input\");\n      if (!s)\n        return void 0;\n      const c = constraint ? constraint : { audio: true, video: false };\n      s._stream = await navigator.mediaDevices.getUserMedia(c);\n      s._node = s._ctx.createMediaStreamSource(s._stream);\n      return s;\n    } catch (e) {\n      console.error(\"Cannot get audio from input device.\");\n      return Promise.resolve(null);\n    }\n  }\n  get ctx() {\n    return this._ctx;\n  }\n  get node() {\n    return this._node;\n  }\n  get outputNode() {\n    return this._outputNode;\n  }\n  get stream() {\n    return this._stream;\n  }\n  get source() {\n    return this._source;\n  }\n  get buffer() {\n    return this._buffer;\n  }\n  set buffer(b) {\n    this._buffer = b;\n  }\n  get type() {\n    return this._type;\n  }\n  get playing() {\n    return this._playing;\n  }\n  get progress() {\n    let dur = 0;\n    let curr = 0;\n    if (!!this._buffer) {\n      dur = this._buffer.duration;\n      curr = this._timestamp ? this._ctx.currentTime - this._timestamp : 0;\n    } else {\n      dur = this._source.duration;\n      curr = this._source.currentTime;\n    }\n    return curr / dur;\n  }\n  get playable() {\n    return this._type === \"input\" ? this._node !== void 0 : !!this._buffer || this._source.readyState === 4;\n  }\n  get binSize() {\n    return this.analyzer.size;\n  }\n  get sampleRate() {\n    return this._ctx.sampleRate;\n  }\n  get frequency() {\n    return this._type === \"gen\" ? this._node.frequency.value : 0;\n  }\n  set frequency(f) {\n    if (this._type === \"gen\")\n      this._node.frequency.value = f;\n  }\n  connect(node) {\n    this._node.connect(node);\n    return this;\n  }\n  setOutputNode(outputNode) {\n    this._outputNode = outputNode;\n    return this;\n  }\n  removeOutputNode() {\n    this._outputNode = null;\n    return this;\n  }\n  analyze(size = 256, minDb = -100, maxDb = -30, smooth = 0.8) {\n    let a = this._ctx.createAnalyser();\n    a.fftSize = size * 2;\n    a.minDecibels = minDb;\n    a.maxDecibels = maxDb;\n    a.smoothingTimeConstant = smooth;\n    this.analyzer = {\n      node: a,\n      size: a.frequencyBinCount,\n      data: new Uint8Array(a.frequencyBinCount)\n    };\n    this._node.connect(this.analyzer.node);\n    return this;\n  }\n  _domain(time) {\n    if (this.analyzer) {\n      if (time) {\n        this.analyzer.node.getByteTimeDomainData(this.analyzer.data);\n      } else {\n        this.analyzer.node.getByteFrequencyData(this.analyzer.data);\n      }\n      return this.analyzer.data;\n    }\n    return new Uint8Array(0);\n  }\n  _domainTo(time, size, position = [0, 0], trim = [0, 0]) {\n    let data = time ? this.timeDomain() : this.freqDomain();\n    let g = new Group();\n    for (let i = trim[0], len = data.length - trim[1]; i < len; i++) {\n      g.push(new Pt(position[0] + size[0] * i / len, position[1] + size[1] * data[i] / 255));\n    }\n    return g;\n  }\n  timeDomain() {\n    return this._domain(true);\n  }\n  timeDomainTo(size, position = [0, 0], trim = [0, 0]) {\n    return this._domainTo(true, size, position, trim);\n  }\n  freqDomain() {\n    return this._domain(false);\n  }\n  freqDomainTo(size, position = [0, 0], trim = [0, 0]) {\n    return this._domainTo(false, size, position, trim);\n  }\n  reset() {\n    this.stop();\n    this._node.disconnect();\n    return this;\n  }\n  start(timeAt = 0) {\n    if (this._ctx.state === \"suspended\")\n      this._ctx.resume();\n    if (this._type === \"file\") {\n      if (!!this._buffer) {\n        this._node.start(timeAt);\n        this._timestamp = this._ctx.currentTime + timeAt;\n      } else {\n        this._source.play();\n        if (timeAt > 0)\n          this._source.currentTime = timeAt;\n      }\n    } else if (this._type === \"gen\") {\n      this._gen(this._node.type, this._node.frequency.value);\n      this._node.start();\n      if (this.analyzer)\n        this._node.connect(this.analyzer.node);\n    }\n    (this._outputNode || this._node).connect(this._ctx.destination);\n    this._playing = true;\n    return this;\n  }\n  stop() {\n    if (this._playing)\n      (this._outputNode || this._node).disconnect(this._ctx.destination);\n    if (this._type === \"file\") {\n      if (!!this._buffer) {\n        if (this.progress < 1)\n          this._node.stop();\n      } else {\n        this._source.pause();\n      }\n    } else if (this._type === \"gen\") {\n      this._node.stop();\n    } else if (this._type === \"input\") {\n      this._stream.getAudioTracks().forEach((track) => track.stop());\n    }\n    this._playing = false;\n    return this;\n  }\n  toggle() {\n    if (this._playing) {\n      this.stop();\n    } else {\n      this.start();\n    }\n    return this;\n  }\n};\nexport {\n  Body,\n  Bound,\n  CanvasForm,\n  CanvasSpace2 as CanvasSpace,\n  Circle,\n  Color,\n  Const,\n  Create,\n  Curve,\n  DOMSpace,\n  Delaunay,\n  Font,\n  Form,\n  Geom,\n  Group,\n  HTMLForm,\n  HTMLSpace,\n  Img,\n  Line,\n  Mat,\n  MultiTouchSpace,\n  Noise,\n  Num,\n  Particle,\n  Polygon,\n  Pt,\n  Range,\n  Rectangle,\n  SVGForm,\n  SVGSpace,\n  Shaping,\n  Sound,\n  Space,\n  Tempo,\n  Triangle,\n  Typography,\n  UI,\n  UIButton,\n  UIDragger,\n  UIPointerActions,\n  UIShape,\n  Util,\n  Vec,\n  VisualForm,\n  World\n};\n/*! Pts.js is licensed under Apache License 2.0. Copyright © 2017-current William Ngan and contributors. (https://github.com/williamngan/pts) */\n","import { CanvasSpace, Rectangle, Bound, Create, Group, Polygon, Num, Pt, Line } from 'pts'\n\nvar space = new CanvasSpace('#pt').setup({ bgcolor: '#99eeff', retina: true, resize: true })\nvar form = space.getForm()\n\nlet pts = new Group()\n\n// https://ptsjs.org/demo/?name=canvasspace.action\nspace.add({\n\tanimate: (time, ftime) => {\n\t\t// pts.push(new Pt(Math.random() * space.size.x, Math.random() * space.size.y))\n\n\t\tif (pts.length > 10) pts.shift()\n\t\tform.strokeOnly('#d0a', 3).line(pts)\n\t\tform.fillOnly('#123').point(space.pointer, 10, 'circle')\n\t},\n\n\taction: (type, px, py) => {\n\t\tif (type === 'move') pts.push(new Pt(px, py))\n\t},\n})\n\nspace.bindMouse().bindTouch().play()\n"],"names":["$a2ac04762e2a6a1f$export$e947a0f742cf021e","static","a","b","i","len","length","Error","toString","d","$a2ac04762e2a6a1f$export$87c2e215ad25c73d","Math","sqrt","dot","magnitude","m","make","divide","map","abs","floor","ceil","round","Number","MIN_VALUE","index","max","value","MAX_VALUE","min","s","fn","$a2ac04762e2a6a1f$export$ea3ee4566031452e","constructor","this","reset","_33","domMatrix","DOMMatrix","toDOMMatrix","scale2DMatrix","scale2D","val","at","scaleAt2DMatrix","multiply","rotate2D","ang","rotateAt2DMatrix","cos","sin","translate2D","translate2DMatrix","shear2D","shearAt2DMatrix","tan","g","$a2ac04762e2a6a1f$export$eb2fcfdbd7ba97d4","isNum","push","$add","transposed","elementwise","ai","alen","$multiply","transpose","p","bi","blen","defaultValue","z","useLongest","ps","reduce","zipSlice","zip","pt","x","y","cosA","sinA","tanX","tanY","sx","sy","rotate2DMatrix","shear2DMatrix","p1","p2","intercept","$a2ac04762e2a6a1f$export$17d680238e50603e","yi","ang2","atan","slope","$a2ac04762e2a6a1f$var$_errorLength","obj","param","$a2ac04762e2a6a1f$export$f8f26dd395d7e1bd","warn","anchor","angle","toAngle","c","xi","line","_line","iterToArray","p3","threshold","to","$subtract","$cross","equals","magnitudeSq","asProjection","proj","$project","projectionVector","perpendicularFromPt","la","lb","_la","_lb","pa","pb","y1","px","py","intersectRay2D","$a2ac04762e2a6a1f$export$5fee5224a8e5ae6c","withinBound","ray","_ray","lineOrRay","poly","sourceIsRay","_lineOrRay","_poly","intersectLineWithRay2D","intersectLine2D","pts","next","lines1","lines2","isRay","group","l1","l2","_ip","gridPt","t","subtract","intersectGridWithRay2D","gg","rect","_rect","box","boundingBox","fromPtArray","$a2ac04762e2a6a1f$export$4617fb02663045ef","hasIntersectRect2D","intersectLines2D","sides","num","interpolate","size","cropAsCircle","ls","unit","fromCenter","sideIdx","graphic","atTail","perpendicular","add","$min","$max","topLeft","widthOrSize","height","fromTopLeft","center","half","within","$a2ac04762e2a6a1f$export$c89a927ffc67e6fa","fromRect","enclose","_pts","maxValue","minValue","p0","corners","rects","_rects","merged","flatten","k","_center","ratio","asRows","mid","$a2ac04762e2a6a1f$export$abd05ea5e3f1332","lerp","rect1","rect2","resetBoundingBox","_rect1","_rect2","r","$a2ac04762e2a6a1f$export$5a465592bfe74b48","circumcircle","incircle","radius","circle","f","disc","discSqrt","t1","t2","circle1","circle2","_circle","dv","dr2","dr","ar","br","ar2","br2","clone","h","PI","inc","top","left","toTriangle","fromCircle","tri","$a2ac04762e2a6a1f$export$7d31b617c820d435","midpoints","opp","oppositeSide","altitude","bisector","incenter","area","perimeter","total","md","medial","circumcenter","centroid","closePath","sp","split","lines","$a2ac04762e2a6a1f$var$_errorOutofBound","gs","right","adjacentSides","mag","segments","det","sorted","slice","sort","dq","bot","hull","originIndex","_near","_item","unitAxis","n","poly1","poly2","projectAxis","ln","lineAt","info","which","dist","normal","edge","vertex","minDist","MAX_SAFE_INTEGER","axis","_axisOverlap","_poly1","_poly2","plen","b1","b2","c1","c2","smallest","lp","ins","intersectPolygon2D","polys","boxes","unshift","$a2ac04762e2a6a1f$export$b0e83c3ef8d2db1","steps","ts","copyStart","_index","ctrls","params","getSteps","controlPoints","catmullRomStep","cp","step","_calcPt","tension","cardinalStep","h2","h3","bezierStep","bsplineTensionStep","bsplineStep","random","range","start","fill","sum","method","$a2ac04762e2a6a1f$export$e0e0ff05bff0f59e","sineInOut","currA","currB","targetA","targetB","normalizeValue","seed","generator","j","o","Array","mash","data","charCodeAt","initState","inStr","replace","cleanString","hashString","$a2ac04762e2a6a1f$var$uheprng_default","boundValue","radian","$a2ac04762e2a6a1f$export$8ad5d15375e29446","two_pi","deg_to_rad","rad_to_deg","minPt","maxPt","average","ptOrIndex","direction","xy","boundPt1","boundPt2","bounds","da","db","$cross2D","scale","scs","lenP","$take","transform2D","tanx","tany","mat","reflectAt2DMatrix","Float64Array","table","rad","boundAngle","toDegree","dt","pow","half_pi","t4","bounceOut","bounceIn","exp","epsilon","A","B","om2a","curve","args","yz","xz","xyz","horizontal","vertical","identical","bottom_right","bottom","bottom_left","top_left","top_right","pi","quarter_pi","one_degree","gravity","newton","gaussian","$a2ac04762e2a6a1f$var$_Util","lv","_warnLevel","pos","isArray","ArrayBuffer","isView","prototype","call","message","defaultReturn","warnLevel","console","stride","loopBack","matchSize","chunks","part","st","flattenAsGroup","arr","concat","apply","op","result","lenB","arrays","callback","temp","url","request","XMLHttpRequest","open","onload","status","responseText","onerror","send","space","filename","filetype","quality","ftype","element","toBlob","blob","link","document","createElement","URL","createObjectURL","href","download","body","appendChild","click","removeChild","revokeObjectURL","avgFrames","last","Date","now","avg","shift","minRequired","it","test","navigator","userAgent","Float32Array","__super","super","getArgs","dimensions","randomize","id","_id","w","$to","anchorFromPt","change","self","ops","fns","_ops","$concat","toArray","$divide","$unit","cross2D","cross","projectScalar","$abs","$floor","$ceil","$round","atan2","angleBetween","boundRadian","reflect2D","join","toGroup","toBound","$a2ac04762e2a6a1f$export$8d620acac236ffa9","p4","q1","q2","q3","q4","list","li","from","chunkSize","insert","splice","remove","count","pts_per_segment","anchorTo","anchorFrom","clamp","chunk","tc","idx","moveBy","moveTo","sortByDimension","dim","desc","forEachPt","ptFn","$matrixAdd","$matrixMultiply","$zip","fromGroup","_size","_topLeft","_bottomRight","_inited","init","width","_g","_updateSize","_updateCenter","_updatePosFromTop","_updatePosFromBottom","_updatePosFromCenter","bottomRight","depth","inited","update","$a2ac04762e2a6a1f$export$d30982023723c3b4","$a2ac04762e2a6a1f$export$f6e0ff9e4b92eee3","up","down","move","drag","uidrag","drop","uidrop","over","out","enter","leave","keydown","keyup","contextmenu","all","$a2ac04762e2a6a1f$var$_UI","shape","states","_holds","Map","_group","fromArray","_shape","_counter","_states","_actions","ui","state","key","on","type","_addHandler","off","_removeHandler","listen","evt","_within","values","indexOf","_trigger","hold","newKey","keys","set","unhold","delete","clear","uis","render","hasIntersectPoint","target","$a2ac04762e2a6a1f$export$4b08aed5f1ec6952","$a2ac04762e2a6a1f$export$eef1e68107c58ef2","bound","_time","prev","diff","end","players","playerCount","_animID","_pause","_refresh","_pointer","_isReady","_playing","refresh","minFrameTime","ms","player","animate","pid","animateID","resize","removeAll","play","time","requestAnimationFrame","bind","playItems","err","cancelAnimationFrame","replay","pause","toggle","resume","stop","playOnce","duration","context","_renderFunc","customRendering","isPlaying","outerBound","innerBound","$a2ac04762e2a6a1f$export$d246957a0a7cf810","arguments","_pressed","_dragged","_hasMouse","_hasTouch","_hasKeyboard","pointer","bindCanvas","options","customTarget","_canvas","addEventListener","unbindCanvas","removeEventListener","bindDoc","unbindDoc","bindMouse","_mouseDown","_mouseUp","_mouseOver","_mouseOut","_mouseMove","_mouseClick","_contextMenu","bindTouch","passive","_touchStart","_touchMove","bindKeyboard","_keyDownBind","_keyDown","_keyUpBind","_keyUp","touchesToPoints","item","pageX","pageY","_mouseAction","MouseEvent","hasOwnProperty","v","action","changedTouches","touch","preventDefault","_keyboardAction","shiftKey","altKey","$a2ac04762e2a6a1f$export$a7fed597f4b8afd8","_ready","ready","$a2ac04762e2a6a1f$export$b00bfd2e034c5633","_filled","_stroked","_font","$a2ac04762e2a6a1f$export$89abf52a030e56ee","filled","stroked","currentFont","_multiple","groups","rest","alpha","fillOnly","stroke","linejoin","linecap","strokeOnly","points","point","circles","squares","polygons","face","weight","style","lineHeight","$a2ac04762e2a6a1f$export$1c6175f3aa4394b7","samples","distribution","str","tail","trim","substr","byHeight","box2","bound2","nh","defaultSize","$a2ac04762e2a6a1f$export$cc7b5f925acc71d3","editable","crossOrigin","_scale","_loaded","_editable","_space","pixelScale","_img","Image","src","img","load","then","res","repeat","loadAsync","pattern","initCanvas","Promise","resolve","reject","_cv","_drawToScale","_data","_ctx","getImageData","canvasScale","nw","drawImage","error","cms","getContext","bitmap","createImageBitmap","reptition","dynamic","ctx","createPattern","sync","toBase64","pixel","rescale","getPixel","imgData","no","sizeOrScale","asScale","naturalWidth","naturalHeight","crop","filter","css","cleanup","cv","putImageData","toDataURL","getForm","$a2ac04762e2a6a1f$export$f3413f5849e886b7","current","image","canvas","loaded","imageSize","canvasSize","scaledMatrix","_style","fillStyle","strokeStyle","lineWidth","lineJoin","lineCap","globalAlpha","_setup","font","CanvasRenderingContext2D","useOffscreen","clearOffscreen","hasOffscreen","offscreenCtx","renderOffscreen","offset","offscreenCanvas","applyFillStroke","strokeWidth","gradient","stops","vals","area1","area2","grad","createRadialGradient","createLinearGradient","addColorStop","composite","mode","globalCompositeOperation","clip","dash","setLineDash","lineDashOffset","sizeOrFont","family","_estimateTextWidth","fontWidthEstimate","estimate","textWidthEstimator","measureText","getTextWidth","_textTruncate","truncate","_textAlign","_box","arrayCheck","textAlign","_paint","beginPath","arc","rotation","startAngle","endAngle","cc","ellipse","halfsize","x1","x2","y2","lineTo","square","polygon","ptOrRect","orig","imageData","txt","maxWidth","fillText","text","textBox","verticalAlign","overrideBaseline","textBaseline","paragraphBox","lstep","nextLine","sub","buffer","newln","lastIndexOf","lsize","lbox","lpad","alignText","alignment","baseline","log","$a2ac04762e2a6a1f$var$_Color","_mode","_isNorm","hex","substring","hexVal","parseInt","toMode","ranges","rgb","rgba","convert","fname","toUpperCase","l","u","normalized","normalize","toNorm","mapToRange","$normalize","format","_hex","normalizedInput","normalizedOutput","hsl","q","sc","hsb","XYZtoLAB","RGBtoXYZ","lab","XYZtoRGB","LABtoXYZ","LABtoLCH","RGBtoLAB","lch","LABtoRGB","LCHtoLAB","XYZtoLUV","luv","LUVtoXYZ","D65","cy","eps","kap","xxx","zzz","refU","refV","L","cubeY","toRadian","$a2ac04762e2a6a1f$export$892596cec99bc70e","$a2ac04762e2a6a1f$export$ac9b7cebffc1b4b7","elem","_autoResize","_bgcolor","_css","_selector","Element","querySelector","_container","parentElement","setTimeout","appendTo","setAttribute","_resizeHandler","dispatchEvent","Event","setup","opt","bgcolor","autoResize","auto","window","styles","fromBoundingRect","getBoundingClientRect","parent","bg","background","innerHTML","backgroundColor","dispose","$a2ac04762e2a6a1f$export$2a5547199b8194f0","$a2ac04762e2a6a1f$export$b8c44462414bfc41","name","autoClass","querySelectorAll","scopeID","forEach","el","parentNode","$a2ac04762e2a6a1f$var$_HTMLForm","color","opacity","position","groupID","groupCount","currentID","currentClass","Object","assign","styleTo","cls","updateScope","group_id","nextID","scope","domID","setAttr","htmlElement","getID","class","rectStyle","textContent","textStyle","$a2ac04762e2a6a1f$export$8d3af878826383c6","nodeName","toLowerCase","svgElement","$a2ac04762e2a6a1f$export$970c0cf64cfb2cf6","viewBox","xmlns","version","createElementNS","$a2ac04762e2a6a1f$var$_SVGForm","cx","largeArc","sweep","pointsString","string","dx","dy","$8c7a91ba4226920c$var$space","_pixelScale","_offscreen","_initialResize","_createElement","retina","r1","devicePixelRatio","r2","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","offscreen","_offCanvas","_offCtx","pixelDensity","pageXOffset","pageYOffset","lastColor","clearRect","fillRect","save","restore","recorder","downloadOrCallback","bitrate","stream","captureStream","MediaRecorder","mimeType","bitsPerSecond","ondataavailable","Blob","$8c7a91ba4226920c$var$form","$8c7a91ba4226920c$var$pts","ftime"],"version":3,"file":"19-pts.js.map"}