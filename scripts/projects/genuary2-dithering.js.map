{"mappings":"MACA,IAiBIA,EAjBS,CACZ,CAAG,GAAI,IAAM,GAAI,KACjB,CAAE,IAAM,GAAI,IAAK,KACjB,CAAG,GAAI,IAAM,GAAI,KACjB,CAAE,IAAK,IAAK,IAAM,KAefC,EAAM,IACNC,EAAS,GAETC,EAAQ,KACRC,EAAc,IAIdC,EAAY,CACf,CAAE,CAAE,IAAK,IAAK,KAAO,CAAE,GAAI,GAAI,KAC/B,CAAE,CAAE,GAAI,GAAI,IAAM,CAAE,IAAK,IAAK,MAC9B,CAAE,CAAE,GAAI,GAAI,IAAM,CAAE,IAAK,IAAK,MAC9B,CAAE,CAAE,GAAI,EAAG,IAAM,CAAE,IAAK,IAAK,MAC7B,CAAE,CAAE,GAAI,GAAI,IAAM,CAAE,GAAI,IAAK,MAC7B,CAAE,CAAC,IAAK,IAAK,KAAM,CAAE,EAAG,GAAI,OAIzBC,EAAS,CAACD,EAAU,GAAG,GAAIA,EAAU,GAAG,IAwB5C,MAAME,EACLC,aAAYC,EAAEA,EAACC,EAAEA,EAACC,MAAEA,EAAKC,EAAEA,EAACC,OAAEA,GAAS,IACtCC,KAAKC,OAAiB,GAARC,MACdF,KAAKG,KAAe,GAARD,MAEZF,KAAKD,OAASA,EACdC,KAAKL,EAAIA,EAAIK,KAAKC,OAAS,EAC3BD,KAAKJ,EAAIA,EAAII,KAAKC,OAAS,EAC3BD,KAAKH,MAAQA,GAASO,OAAO,KAC7BJ,KAAKF,EAAIA,CACV,CAEAO,QACC,IAAIC,EAAe,KAAXC,SAEJC,EAAQC,IAAIH,EAAI,GAAK,EAAIG,IAAIH,GAC7BI,EAAQC,IAAIL,EAAI,GAAK,EAAIK,IAAIL,GAE7BN,KAAKD,QACRC,KAAKG,KAAOS,IAAIJ,GAAO,EAAI,EAAW,IAARN,MAAqB,GAARA,OAC3CF,KAAKC,OAASW,IAAIF,GAAO,EAAI,EAAW,GAARR,MAAqB,GAARA,SAE7CF,KAAKG,KAAOS,IAAIJ,GAAO,EAAI,EAAW,GAARN,MAAqB,IAARA,OAC3CF,KAAKC,OAASW,IAAIF,GAAO,EAAI,EAAW,GAARR,MAAqB,GAARA,OAE/C,CAEAW,aACCC,OAAO,EAAGd,KAAKH,OACfkB,aAAaf,KAAKC,QAClBe,SACAC,KAAKjB,KAAKL,EAAGK,KAAKJ,EAAGI,KAAKG,KAAMH,KAAKG,KACtC,EAGD,MAAMe,EACLxB,cACCM,KAAKmB,OAAS,GAEd,IAAIC,EAAI,EACR,KAAOA,EAAI,GACVpB,KAAKmB,OAAOE,KACX,IAAI5B,EAAM,CACTE,EAAG,EACHC,EAAG,EACHC,MAAO,GAAKuB,EAAI,GAChBrB,OAAQqB,EAAI,GAAK,EACjBtB,EAAgB,KAGlBsB,GAEF,CAEAE,SACCtB,KAAKmB,OAAOI,SAAQ,CAACC,EAAOJ,KAC3BI,EAAMnB,QACG,GAALe,GACHC,OACAhB,OAAM,EAAI,GACVoB,WAAWvB,MAAO,GAClBsB,EAAMX,aACNa,OACe,GAALN,GACVC,OACAhB,OAAM,GAAI,GACVoB,WAAWvB,OAAQyB,QACnBH,EAAMX,aACNa,OACe,GAALN,GACVC,OACAhB,MAAM,GAAG,GACToB,UAAU,GAAIE,QACdH,EAAMX,aACNa,OAEAF,EAAMX,YAAU,GAGnB,EAyDDe,OAAOC,MA9JP,WACCC,aAAa3C,EAAKA,GAClB4C,aAAa,GACbC,WAEA5C,EAAS,IAAI8B,CAId,EAsJAU,OAAOK,KAvDP,WACCC,QACAC,aAAahD,EAAKA,GAClBiD,WAAW,KAEXhD,EAAOkC,SAmBR,SAAmBe,EAAY,IAAKC,GACnCC,aACA,IAAIC,EAAUT,eACdO,EAAeA,GAAgB,CAC9B,CAAC,GAAI,KACL,CAAC,IAAK,KAGP,IAAK,IAAI1C,EAAI,EAAGA,EAAI+B,OAASa,EAAS5C,IACrC,IAAK,IAAID,EAAI,EAAGA,EAAIO,MAAQsC,EAAS7C,IAAK,CACzC,IAAIW,EAAIgC,EAAa1C,EAAI0C,EAAaG,QAAQ9C,EAAI2C,EAAaG,QAE3DrB,EAAgC,GAA3BxB,EAAIM,MAAQsC,EAAU7C,IACZ+C,OAAOtB,GACGd,GAAK,EACrB+B,GACZK,OAAOtB,GAAK5B,EAAO,GAAG,GACtBkD,OAAOtB,EAAI,GAAK5B,EAAO,GAAG,GAC1BkD,OAAOtB,EAAI,GAAK5B,EAAO,GAAG,KAE1BkD,OAAOtB,GAAK5B,EAAO,GAAG,GACtBkD,OAAOtB,EAAI,GAAK5B,EAAO,GAAG,GAC1BkD,OAAOtB,EAAI,GAAK5B,EAAO,GAAG,GAE5B,CAGDmD,cACD,CA7CCC,CAAU,IAAK1D,GACf,IAAI2D,EAAIC,MACRZ,QASCC,aAAa7C,EAAaA,GAC1B8C,WAAW,KACXW,MAAMF,EAAG,EAAG,EAAGvD,EAAaA,EAE9B,EAmCAsC,OAAOoB,WAAa,KACR,aAAPC,IACH5D,GAAS,KACQ,cAAP4D,MACV5D,GAAS,M","sources":["src/scripts/projects/genuary2-dithering.js"],"sourcesContent":["// prettier-ignore\nlet map4_1 = [\n\t[  15, 135,  45, 165 ],\n\t[ 195,  75, 225, 105 ],\n\t[  60, 180,  30, 150 ],\n\t[ 240, 120, 210,  90 ],\n]\n// via: https://github.com/antiboredom/p5.riso/blob/master/lib/p5.riso.js\n\n// prettier-ignore\nlet map4_2 = [\n\t[   8, 120,  40, 168 ],\n\t[ 200,  72, 232, 104 ],\n\t[  56, 184,  24, 152 ],\n\t[ 248, 120, 216,  88 ],\n]\n// via: https://observablehq.com/@jobleonard/ordered-error-diffusion-dithering\n\nlet currentMap = map4_1\nlet threshold = 128\nlet res = 128\nlet shapes = []\nlet shape\nlet speed = 0.0005\nlet graphicSize = 512\nlet p\n\n//prettier-ignore\nlet colorVals = [\n\t[ [ 255, 255, 250 ], [ 13, 92, 99] ],\n\t[ [ 20, 20, 20 ], [ 132, 220, 207] ],\n\t[ [ 20, 33, 61 ], [ 192, 188, 181] ],\n\t[ [ 20, 7, 15 ], [ 144, 153, 192 ] ],\n\t[ [ 30, 32, 25 ], [ 88, 123, 127 ] ],\n\t[ [231, 238, 235], [ 8, 99, 117 ] ]\n]\n\n// let colors = colorVals[5]\nlet colors = [colorVals[5][1], colorVals[5][0]]\n\nfunction setup() {\n\tcreateCanvas(res, res)\n\tpixelDensity(1)\n\tnoSmooth()\n\n\tshapes = new Shapes()\n\n\t// createLoop({ duration: 12.566, framesPerSecond: 30, gif: true })\n\t// p = createP('').position(600, 30)\n}\n\nfunction gradient() {\n\tlet steps = 100\n\tlet stepSize = height / steps\n\n\tfor (let i = 0; i < steps; i++) {\n\t\tfill((i / 100) * 255)\n\t\tnoStroke()\n\t\trect(0, stepSize * i, width, stepSize * i + stepSize)\n\t}\n}\n\nclass Shape {\n\tconstructor({ x, y, alpha, n, invert = false }) {\n\t\tthis.weight = width * 0.5\n\t\tthis.size = width * 0.5\n\n\t\tthis.invert = invert\n\t\tthis.x = x - this.weight / 2\n\t\tthis.y = y - this.weight / 2\n\t\tthis.alpha = alpha ?? random(200)\n\t\tthis.n = n\n\t}\n\n\tscale() {\n\t\tlet t = millis() * 0.001\n\t\t// let t = animLoop.theta * 2\n\t\tlet sizeT = sin(t / 2) + 2 * sin(t)\n\t\tlet sizeW = cos(t / 2) + 2 * cos(t)\n\n\t\tif (this.invert) {\n\t\t\tthis.size = map(sizeT, -3, 3, width * 1.5, width * 0.5)\n\t\t\tthis.weight = map(sizeW, -2, 2, width * 0.5, width * 0.1)\n\t\t} else {\n\t\t\tthis.size = map(sizeT, -3, 3, width * 0.5, width * 1.5)\n\t\t\tthis.weight = map(sizeW, -2, 2, width * 0.1, width * 0.5)\n\t\t}\n\t}\n\n\tshowStroke() {\n\t\tstroke(0, this.alpha)\n\t\tstrokeWeight(this.weight)\n\t\tnoFill()\n\t\trect(this.x, this.y, this.size, this.size)\n\t}\n}\n\nclass Shapes {\n\tconstructor() {\n\t\tthis.shapes = []\n\n\t\tlet i = 0\n\t\twhile (i < 4) {\n\t\t\tthis.shapes.push(\n\t\t\t\tnew Shape({\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\talpha: 50 * i + 50,\n\t\t\t\t\tinvert: i % 2 == 0 ? true : false,\n\t\t\t\t\tn: i % 2 == 0 ? 0 : 0,\n\t\t\t\t})\n\t\t\t)\n\t\t\ti++\n\t\t}\n\t}\n\n\tdoLoop() {\n\t\tthis.shapes.forEach((shape, i) => {\n\t\t\tshape.scale()\n\t\t\tif (i == 1) {\n\t\t\t\tpush()\n\t\t\t\tscale(-1, 1)\n\t\t\t\ttranslate(-width, 0)\n\t\t\t\tshape.showStroke()\n\t\t\t\tpop()\n\t\t\t} else if (i == 2) {\n\t\t\t\tpush()\n\t\t\t\tscale(-1, -1)\n\t\t\t\ttranslate(-width, -height)\n\t\t\t\tshape.showStroke()\n\t\t\t\tpop()\n\t\t\t} else if (i == 3) {\n\t\t\t\tpush()\n\t\t\t\tscale(1, -1)\n\t\t\t\ttranslate(0, -height)\n\t\t\t\tshape.showStroke()\n\t\t\t\tpop()\n\t\t\t} else {\n\t\t\t\tshape.showStroke()\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction draw() {\n\tclear()\n\tresizeCanvas(res, res)\n\tbackground(255)\n\n\tshapes.doLoop()\n\n\tditherOne(128, currentMap)\n\tlet c = get()\n\tclear()\n\tif (!graphicSize) {\n\t\tresizeCanvas(window.innerWidth, window.innerHeight)\n\t\tlet m = floor(min(width, height) * 0.9)\n\t\tm -= m % 4\n\t\ttranslate((width - m) / 2, (height - m) / 2)\n\t\tbackground(255)\n\t\timage(c, 0, 0, m, m)\n\t} else {\n\t\tresizeCanvas(graphicSize, graphicSize)\n\t\tbackground(255)\n\t\timage(c, 0, 0, graphicSize, graphicSize)\n\t}\n}\n\nfunction ditherOne(threshold = 128, thresholdMap) {\n\tloadPixels()\n\tlet density = pixelDensity()\n\tthresholdMap = thresholdMap ?? [\n\t\t[32, 224],\n\t\t[160, 96],\n\t]\n\n\tfor (let y = 0; y < height * density; y++) {\n\t\tfor (let x = 0; x < width * density; x++) {\n\t\t\tlet t = thresholdMap[y % thresholdMap.length][x % thresholdMap.length]\n\n\t\t\tlet i = (y * width * density + x) * 4\n\t\t\tlet currentPixel = pixels[i]\n\t\t\tlet mapped = (currentPixel + t) / 2\n\t\t\tif (mapped < threshold) {\n\t\t\t\tpixels[i] = colors[0][0]\n\t\t\t\tpixels[i + 1] = colors[0][1]\n\t\t\t\tpixels[i + 2] = colors[0][2]\n\t\t\t} else {\n\t\t\t\tpixels[i] = colors[1][0]\n\t\t\t\tpixels[i + 1] = colors[1][1]\n\t\t\t\tpixels[i + 2] = colors[1][2]\n\t\t\t}\n\t\t}\n\t}\n\n\tupdatePixels()\n}\n\nwindow.setup = setup\nwindow.draw = draw\n\nwindow.keyPressed = () => {\n\tif (key == 'ArrowLeft') {\n\t\tspeed -= 0.0001\n\t} else if (key == 'ArrowRight') {\n\t\tspeed += 0.0001\n\t}\n}\n"],"names":["$d3df4e6f3828036c$var$currentMap","$d3df4e6f3828036c$var$res","$d3df4e6f3828036c$var$shapes","$d3df4e6f3828036c$var$speed","$d3df4e6f3828036c$var$graphicSize","$d3df4e6f3828036c$var$colorVals","$d3df4e6f3828036c$var$colors","$d3df4e6f3828036c$var$Shape","constructor","x","y","alpha","n","invert","this","weight","width","size","random","scale","t","millis","sizeT","sin","sizeW","cos","map","showStroke","stroke","strokeWeight","noFill","rect","$d3df4e6f3828036c$var$Shapes","shapes","i","push","doLoop","forEach","shape","translate","pop","height","window","setup","createCanvas","pixelDensity","noSmooth","draw","clear","resizeCanvas","background","threshold","thresholdMap","loadPixels","density","length","pixels","updatePixels","$d3df4e6f3828036c$var$ditherOne","c","get","image","keyPressed","key"],"version":3,"file":"genuary2-dithering.js.map"}