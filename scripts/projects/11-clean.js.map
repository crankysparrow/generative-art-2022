{"mappings":"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","sources":["src/scripts/projects/11/getcolors.ts","src/scripts/projects/11/Curve.ts","src/scripts/utils/Controls.js","node_modules/@parcel/runtime-js/lib/bundles/runtime-4d17470ce3b9f544.js","src/scripts/utils/utils.js","src/scripts/projects/11/curve-controls.ts","src/scripts/projects/11-clean.ts"],"sourcesContent":["export function getColor(forceX: number, forceY: number, colorDirection: number) {\n\tif (colorDirection == 1) {\n\t\t// toward top2: y down, either x\n\t\tif (forceX < 0 && forceY > 0) {\n\t\t\treturn 1\n\t\t} else if (forceX > 0 && forceY > 0) {\n\t\t\treturn 2\n\t\t} else {\n\t\t\treturn 3\n\t\t}\n\t} else if (colorDirection == 2) {\n\t\t// toward bottom2: y up, either x\n\t\tif (forceX < 0 && forceY < 0) {\n\t\t\treturn 1\n\t\t} else if (forceX > 0 && forceY < 0) {\n\t\t\treturn 2\n\t\t} else {\n\t\t\treturn 3\n\t\t}\n\t} else if (colorDirection == 3) {\n\t\t// topright corner, botleft corner: y down & x up // yup & x down\n\t\tif (forceX < 0 && forceY > 0) {\n\t\t\treturn 1\n\t\t} else if (forceX > 0 && forceY < 0) {\n\t\t\treturn 2\n\t\t} else {\n\t\t\treturn 3\n\t\t}\n\t} else if (colorDirection == 4) {\n\t\t// topleft, botright: y down & x down, y up & x up\n\t\tif (forceX > 0 && forceY > 0) {\n\t\t\treturn 1\n\t\t} else if (forceX < 0 && forceY < 0) {\n\t\t\treturn 2\n\t\t} else {\n\t\t\treturn 3\n\t\t}\n\t} else if (colorDirection == 5) {\n\t\t// toward right2: x up, y either\n\t\tif (forceX < 0 && forceY > 0) {\n\t\t\treturn 1\n\t\t} else if (forceX < 0 && forceY < 0) {\n\t\t\treturn 2\n\t\t} else {\n\t\t\treturn 3\n\t\t}\n\t} else if (colorDirection == 6) {\n\t\tif (forceX > 0 && forceY > 0) {\n\t\t\treturn 1\n\t\t} else if (forceX > 0 && forceY < 0) {\n\t\t\treturn 2\n\t\t} else {\n\t\t\treturn 3\n\t\t}\n\t} else {\n\t\tif (forceX > 0 && forceY > 0) {\n\t\t\treturn 1\n\t\t} else if (forceX > 0 && forceY < 0) {\n\t\t\treturn 2\n\t\t} else if (forceX < 0 && forceY > 0) {\n\t\t\treturn 3\n\t\t} else {\n\t\t\treturn 4\n\t\t}\n\t}\n}\n","import * as p5 from 'p5'\nimport { getColor } from './getcolors'\n\nfunction findForceX(x, y, { vx1, vx2 }) {\n\t// return (sin(x * vx1) + sin(y * vx2)) * -5\n\t// return sin(x * vx1) - cos(y * vx2)\n\t// return sin(x * (1 / (width * vx1))) - cos(y * vx2)\n\treturn sin(x * (1 / (width * vx1))) + cos(y * vx2)\n}\n\nfunction findForceY(x, y, { vy1, vy2 }) {\n\t// return sin((x + y) * vy1) * -5\n\treturn cos(y * (1 / (height * vy2))) + sin(x * vy1)\n}\n\nexport type ForceVals = { vx1: number; vx2: number; vy1: number; vy2: number }\n\nexport class Curve {\n\tx: number\n\ty: number\n\tdone: boolean = false\n\tnPoints: number = 0\n\tpoints: p5.Vector[]\n\tcolor: p5.Color = color(0, 100)\n\tweight: number = 10\n\tforceVals: ForceVals\n\tprecision: number\n\n\tconstructor(x, y, forceVals: ForceVals, weight?, precision = 4) {\n\t\tthis.x = x\n\t\tthis.y = y\n\t\tthis.done = false\n\t\tthis.nPoints = 0\n\t\tthis.points = [createVector(this.x, this.y)]\n\t\tthis.weight = weight\n\t\tthis.forceVals = forceVals\n\t\tthis.precision = +precision\n\t}\n\n\tgetColor(colorDirection: number, palette: string[], alphaVal: number) {\n\t\tlet prev = this.points[this.points.length - 1]\n\n\t\tlet forceX = findForceX(prev.x, prev.y, this.forceVals)\n\t\tlet forceY = findForceY(prev.x, prev.y, this.forceVals)\n\n\t\tlet colIndex = getColor(forceX, forceY, colorDirection)\n\t\tlet c = color(palette[colIndex])\n\t\tc.setAlpha(alphaVal)\n\t\tthis.color = c\n\t}\n\n\tsetAlpha(newAlpha: number) {\n\t\tthis.color.setAlpha(newAlpha)\n\t}\n\n\taddPoint() {\n\t\tlet prev = this.points[this.points.length - 1]\n\t\tlet forceX = findForceX(prev.x, prev.y, this.forceVals)\n\t\tlet forceY = findForceY(prev.x, prev.y, this.forceVals)\n\n\t\tif (forceX < 1 && forceY < 1) {\n\t\t\treturn createVector(prev.x + forceX * 2, prev.y + forceY * 2)\n\t\t} else if (forceX < 0.8 && forceY < 0.8) {\n\t\t\treturn createVector(prev.x + forceX * 1.2, prev.y + forceY * 1.2)\n\t\t} else {\n\t\t\treturn createVector(prev.x + forceX, prev.y + forceY)\n\t\t}\n\t}\n\n\tcheckIntersects(point: p5.Vector, curves: Curve[], threshold: number) {\n\t\tlet intersects = false\n\n\t\tconst pointsMeet = (p1: p5.Vector, p2: p5.Vector) => {\n\t\t\treturn abs(p1.x - p2.x) < threshold && abs(p1.y - p2.y) < threshold\n\t\t}\n\n\t\tfor (let i = 0; i < curves.length; i++) {\n\t\t\tif (curves[i] == this) continue\n\n\t\t\tfor (let j = 0; j < curves[i].points.length; j += 100 - this.precision) {\n\t\t\t\tif (\n\t\t\t\t\tpointsMeet(point, curves[i].points[j]) ||\n\t\t\t\t\tpoint.x < 0 + this.weight / 2 ||\n\t\t\t\t\tpoint.x > width - this.weight / 2 ||\n\t\t\t\t\tpoint.y < 0 + this.weight / 2 ||\n\t\t\t\t\tpoint.y > height - this.weight / 2\n\t\t\t\t) {\n\t\t\t\t\tintersects = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn intersects\n\t}\n\n\tdraw() {\n\t\tstroke(this.color)\n\t\tstrokeWeight(this.weight)\n\t\tbeginShape()\n\n\t\tcurveVertex(this.points[0].x, this.points[0].y)\n\t\tthis.points.forEach((p) => curveVertex(p.x, p.y))\n\t\tcurveVertex(this.points[this.points.length - 1].x, this.points[this.points.length - 1].y)\n\n\t\tendShape()\n\t}\n}\n","import { paletteFromUrl } from './utils.js'\n// import * as classes from '../../styles/components/controls.module.scss'\nimport cssText from 'bundle-text:../../styles/components/controls.scss'\nlet style = document.createElement('style')\nstyle.textContent = cssText\ndocument.body.appendChild(style)\n\nexport class Controls {\n\tconstructor(rightSide) {\n\t\tthis.shown = this.shownFromStorage() ?? true\n\t\tthis.rightSide = rightSide\n\t\tthis.container = this.buildContainer()\n\t\tthis.count = 0\n\t\tthis.activePanel = false\n\t\tthis.panels = {}\n\t\tthis.panelIds = []\n\t\tthis.tabBtns = []\n\t}\n\n\tshownFromStorage() {\n\t\tlet show = localStorage.getItem('showcontrols')\n\n\t\tif (show) {\n\t\t\treturn boolean(show)\n\t\t}\n\t}\n\n\tbuildContainer() {\n\t\tlet outer = createDiv().class('custom-controls')\n\t\t// .style(this.rightSide ? window.innerWidth - 270 : 0, 0)\n\t\touter.style(this.rightSide ? 'right' : 'left', 0)\n\t\touter.style('top', 0)\n\t\tlet btn = createButton('toggle controls')\n\t\t\t.class('toggle-btn')\n\t\t\t.parent(outer)\n\t\t\t.attribute('aria-expanded', this.shown ? 'true' : 'false')\n\t\tlet c = createDiv()\n\t\t\t.class('controls-inner')\n\t\t\t.parent(outer)\n\t\t\t.attribute('aria-hidden', this.shown ? 'false' : 'true')\n\t\tif (!this.shown) c.addClass('hidden')\n\n\t\tbtn.elt.addEventListener('click', () => {\n\t\t\tif (this.shown) {\n\t\t\t\tc.addClass('hidden')\n\t\t\t\tc.attribute('aria-hidden', 'true')\n\t\t\t\tbtn.attribute('aria-expanded', 'false')\n\t\t\t\tlocalStorage.setItem('showcontrols', 'false')\n\t\t\t\tthis.shown = false\n\t\t\t} else {\n\t\t\t\tc.removeClass('hidden')\n\t\t\t\tc.attribute('aria-hidden', 'false')\n\t\t\t\tbtn.attribute('aria-expanded', 'true')\n\t\t\t\tlocalStorage.setItem('showcontrols', 'true')\n\t\t\t\tthis.shown = true\n\t\t\t}\n\t\t})\n\n\t\treturn c\n\t}\n\n\taddPanelTabs() {\n\t\tthis.tabsContainer = createDiv().class('tabs-container').parent(this.container)\n\t}\n\n\taddPanel({ titleString, id = `controls-panel-${this.count}` }) {\n\t\tthis.count++\n\t\tif (!this.tabsContainer) {\n\t\t\tthis.addPanelTabs()\n\t\t}\n\t\tlet tabBtn = createButton(titleString).parent(this.tabsContainer).attribute('data-for', id)\n\t\tthis.tabBtns.push(tabBtn)\n\t\ttabBtn.elt.addEventListener('click', () => {\n\t\t\tthis.activatePanel(id, tabBtn)\n\t\t})\n\t\tlet panel = createDiv().addClass('panel').attribute('id', id).parent(this.container)\n\t\tthis.panels[id] = panel\n\t\tthis.panelIds.push(id)\n\t\tif (this.panelIds.length == 1) {\n\t\t\tpanel.addClass('active')\n\t\t\ttabBtn.addClass('active')\n\t\t}\n\n\t\treturn panel\n\t}\n\n\tactivatePanel(id, btn) {\n\t\tthis.tabBtns.forEach((b) => b.removeClass('active'))\n\t\tbtn.addClass('active')\n\t\tthis.panelIds.forEach((id) => this.panels[id].removeClass('active'))\n\t\tthis.panels[id].addClass('active')\n\t}\n\n\taddSection({ id = '', labelString, style }) {\n\t\tthis.count++\n\t\tid = id ?? `controls-section-${this.count}`\n\t\tlet secDiv = createDiv().parent(this.container).class('section').attribute('id', id)\n\t\tif (labelString) {\n\t\t\tlet title = createElement('h4', labelString).class('section-title').parent(secDiv)\n\t\t}\n\n\t\tif (style) {\n\t\t\tlet props = Object.keys(style)\n\t\t\tprops.forEach((p) => {\n\t\t\t\tsecDiv.style(p, style[p])\n\t\t\t})\n\t\t}\n\t\tlet d = secDiv\n\t\treturn d\n\t}\n\n\tcreateInput({ id, labelString, onChange, parent = this.container }) {\n\t\tthis.count++\n\n\t\tlet inpDiv = createDiv().parent(parent).class('input-container')\n\n\t\tlet lab = createElement('label', labelString)\n\t\t\t.style('display', 'block')\n\t\t\t.parent(inpDiv)\n\t\t\t.attribute('for', id)\n\t\tlet inp = createInput('').parent(inpDiv).attribute('id', id)\n\t\tlet errorEl = createSpan('').class('error-label').parent(inpDiv)\n\n\t\tlet inputItems = {\n\t\t\tinput: inp,\n\t\t\tcontainer: inpDiv,\n\t\t}\n\n\t\tlet timer\n\t\tinp.input((e) => {\n\t\t\tif (timer) {\n\t\t\t\tclearTimeout(timer)\n\t\t\t}\n\t\t\ttimer = setTimeout(function () {\n\t\t\t\tlet res = onChange(e)\n\t\t\t\tif (res && res.error) {\n\t\t\t\t\tconsole.log(errorEl)\n\t\t\t\t\terrorEl.html(res.error)\n\t\t\t\t} else {\n\t\t\t\t\terrorEl.html('')\n\t\t\t\t}\n\t\t\t}, 300)\n\t\t})\n\n\t\treturn inputItems\n\t}\n\n\tbtn({ onClick, labelString, parent }) {\n\t\tthis.count++\n\t\tlet btn = createButton(labelString).class('controls-btn').parent(parent)\n\t\tbtn.elt.addEventListener('click', onClick)\n\t\treturn btn\n\t}\n\n\tcreateBtn({ onClick, labelString, parent = this.container }) {\n\t\tlet d = createDiv().parent(parent).class('btn-container')\n\t\tlet btn = this.btn({ onClick, labelString, parent: d })\n\t\treturn btn\n\t}\n\n\tcreateBtnSet({ btns, parent = this.container, style = false, className = false }) {\n\t\tlet d = createDiv().parent(parent).class('btn-container')\n\t\tif (className) d.addClass(className)\n\t\tlet btnsOutput = []\n\t\tbtns.forEach((btn) => {\n\t\t\tbtn.parent = d\n\t\t\tbtnsOutput.push(this.btn(btn))\n\t\t})\n\n\t\tif (style) {\n\t\t\tlet props = Object.keys(style)\n\t\t\tprops.forEach((p) => {\n\t\t\t\td.style(p, style[p])\n\t\t\t})\n\t\t}\n\n\t\treturn btnsOutput\n\t}\n\n\tcreateText({ text, parent = this.container }) {\n\t\tlet d = createDiv(text).parent(parent).class('text')\n\t\treturn d\n\t}\n\n\tcreateSlider({\n\t\tid = `controls-${this.count}`,\n\t\tlabelString,\n\t\tonChange = undefined,\n\t\tmin,\n\t\tmax,\n\t\tstep = 1,\n\t\tval,\n\t\tparent = this.container,\n\t}) {\n\t\tthis.count++\n\t\tval = val ?? floor((max - min) / 2 + min)\n\t\tlet d = createDiv().parent(parent).class('slider-container')\n\t\tlet l = createElement('label').parent(d).attribute('for', id)\n\t\tlet sp1 = createSpan(labelString).class('label-text').parent(l)\n\t\tlet s = createSlider(min, max, val, step).parent(l).attribute('id', id)\n\t\tlet sp2 = createSpan(val).class('slider-val').parent(l)\n\n\t\ts.update = function (v) {\n\t\t\ts.value(v)\n\t\t\tsp2.html(v)\n\t\t}\n\n\t\ts.input((e) => {\n\t\t\tsp2.html(s.value())\n\t\t\tif (onChange) {\n\t\t\t\tonChange(e)\n\t\t\t}\n\t\t})\n\n\t\treturn s\n\t}\n\n\tcreatePaletteInput({ id = 'urlinput', labelString = 'custom palette: ', onPaletteUpdate }) {\n\t\tfunction urlInputHandler(e) {\n\t\t\tlet v = e.target.value\n\t\t\tif (v == '') {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tlet regex = /coolors.co\\/(?:[a-fA-Z0-9]{6}-){1,}(?:[a-fA-Z0-9]{6})$/\n\t\t\tif (regex.test(v)) {\n\t\t\t\tlet p = paletteFromUrl(v)\n\t\t\t\treturn onPaletteUpdate(p)\n\t\t\t} else {\n\t\t\t\treturn { error: 'invalid url' }\n\t\t\t}\n\t\t}\n\n\t\tlet paletteInput = this.createInput({ id, labelString, onChange: urlInputHandler })\n\n\t\treturn paletteInput\n\t}\n\n\tcreateSelect({\n\t\tid,\n\t\tlabelString,\n\t\toptions,\n\t\tuseOptionsIndex = false,\n\t\tnamesAndVals = false,\n\t\tselected,\n\t\tonChange,\n\t\tparent = this.container,\n\t\tstyle,\n\t}) {\n\t\tthis.count++\n\t\tid = id ?? `controls-sel-${this.count}`\n\t\tlet sDiv = createDiv().parent(parent).class('select-container')\n\n\t\tif (style) {\n\t\t\tlet props = Object.keys(style)\n\t\t\tprops.forEach((p) => {\n\t\t\t\tsDiv.style(p, style[p])\n\t\t\t})\n\t\t}\n\n\t\tlet lab = createElement('label', labelString).parent(sDiv).attribute('for', id)\n\t\tlet sel = createSelect().parent(sDiv).attribute('id', id)\n\n\t\tfor (let i = 0; i < options.length; i++) {\n\t\t\tif (namesAndVals) {\n\t\t\t\tsel.option(options[i].name, options[i].val)\n\t\t\t} else {\n\t\t\t\tsel.option(useOptionsIndex ? i : options[i])\n\t\t\t}\n\t\t}\n\n\t\tif (selected) sel.selected(selected)\n\t\tsel.changed(onChange)\n\n\t\treturn { el: sel, container: sDiv, label: lab }\n\t}\n\n\tcreateRadio({ id, labelString, options, selected, onChange, parent = this.container }) {\n\t\tthis.count++\n\t\tid = id ?? `controls-radio-${this.count}`\n\n\t\tlet rDiv = createDiv().style('display', 'flex').parent(parent).class('radio-container')\n\t\tlet radio = createRadio().attribute('id', id).attribute('class', 'radio-opts').parent(rDiv)\n\t\toptions.forEach((opt, i) => {\n\t\t\tradio.option(opt)\n\t\t})\n\t\tif (selected) {\n\t\t\tradio.selected(selected)\n\t\t}\n\n\t\tradio.changed(onChange)\n\t\treturn radio\n\t}\n}\n","module.exports = \"270c2fea9726e43e\";","export const paletteFromUrl = (url) =>\n\turl\n\t\t.split('coolors.co/')\n\t\t.slice(1)[0]\n\t\t.split('-')\n\t\t.map((c) => '#' + c)\n\nexport const addScript = (src) => {\n\tlet s = document.createElement('script')\n\ts.setAttribute('src', src)\n\tdocument.body.appendChild(s)\n}\n","import { Controls } from '../../utils/Controls'\nimport { type ForceVals } from './Curve'\nimport * as p5 from 'p5'\n\nclass Forces {\n\tinitialVals: ForceVals\n\tcontrols: Controls\n\tpanel: ReturnType<typeof Controls.prototype.addPanel>\n\tsliders: { vx1: any; vx2: any; vy1: any; vy2: any }\n\n\tconstructor(controls, initialVals) {\n\t\tthis.controls = controls\n\t\tthis.initialVals = initialVals\n\t\tthis.panel = this.controls.addPanel({ titleString: 'forceVals' })\n\t\tthis.sliders = {\n\t\t\tvx1: this.createSlider('vx1'),\n\t\t\tvx2: this.createSlider('vx2', true),\n\t\t\tvy1: this.createSlider('vy1', true),\n\t\t\tvy2: this.createSlider('vy2'),\n\t\t}\n\t}\n\n\tcreateSlider(key, low = false) {\n\t\treturn this.controls.createSlider({\n\t\t\tlabelString: key,\n\t\t\tmin: low ? 0.001 : 0.01,\n\t\t\tmax: low ? 0.09 : 2,\n\t\t\tstep: low ? 0.0001 : 0.01,\n\t\t\tval: round(this.initialVals[key], 3),\n\t\t\tparent: this.panel,\n\t\t})\n\t}\n\n\tget vx1() {\n\t\treturn this.sliders.vx1.elt.value\n\t}\n\n\tget vx2() {\n\t\treturn this.sliders.vx2.elt.value\n\t}\n\n\tget vy1() {\n\t\treturn this.sliders.vy1.elt.value\n\t}\n\n\tget vy2() {\n\t\treturn this.sliders.vy2.elt.value\n\t}\n\n\tset vx1(v) {\n\t\tthis.sliders.vx1.update(round(v, 2))\n\t}\n\n\tset vx2(v) {\n\t\tthis.sliders.vx2.update(round(v, 2))\n\t}\n\n\tset vy1(v) {\n\t\tthis.sliders.vy1.update(round(v, 2))\n\t}\n\n\tset vy2(v) {\n\t\tthis.sliders.vy2.update(round(v, 2))\n\t}\n}\n\nclass CurveVals {\n\tinitVals: { [key: string]: number }\n\tcontrols: Controls\n\tpanel: ReturnType<typeof Controls.prototype.addPanel>\n\tsliders: { [key: string]: any }\n\tredrawCurves: () => void\n\tresize: () => void\n\n\tconstructor(controls, initVals, redrawCurves, resize) {\n\t\tthis.initVals = initVals\n\t\tthis.controls = controls\n\t\tthis.panel = this.controls.addPanel({ titleString: 'general' })\n\t\tthis.redrawCurves = redrawCurves\n\t\tthis.resize = resize\n\t\tthis.sliders = {\n\t\t\tminLength: this.createSlider('minLength'),\n\t\t\tidealLength: this.createSlider('idealLength'),\n\t\t\tmeetThreshold: this.createSlider('meetThreshold', 1, 30, 0.5),\n\t\t\tthickness: this.createSlider('thickness', 0.5, 30, 0.5, this.redrawCurves),\n\t\t\talphaVal: this.createSlider('alphaVal', 10, 255, 1, this.redrawCurves),\n\t\t\tprecision: this.createSlider('precision', 1, 100, 1),\n\t\t\twidth: this.createSlider('width', 10, 2000, 10, this.resize),\n\t\t\theight: this.createSlider('height', 10, 2000, 10, this.resize),\n\t\t}\n\t}\n\n\tcreateSlider(key, min = 10, max = 1200, step = 1, changeFn: (() => void) | boolean = false) {\n\t\treturn this.controls.createSlider({\n\t\t\tlabelString: key,\n\t\t\tmin,\n\t\t\tmax,\n\t\t\tstep,\n\t\t\tval: this.initVals[key],\n\t\t\tparent: this.panel,\n\t\t\tonChange: changeFn,\n\t\t})\n\t}\n\n\tget precision() {\n\t\treturn this.sliders.precision.elt.value\n\t}\n\n\tget minLength() {\n\t\treturn this.sliders.minLength.elt.value\n\t}\n\n\tget idealLength() {\n\t\treturn this.sliders.idealLength.elt.value\n\t}\n\n\tget meetThreshold() {\n\t\treturn this.sliders.meetThreshold.elt.value\n\t}\n\n\tget thickness() {\n\t\treturn this.sliders.thickness.elt.value\n\t}\n\n\tget alphaVal() {\n\t\treturn this.sliders.alphaVal.elt.value\n\t}\n\n\tget width() {\n\t\treturn this.sliders.width.elt.value\n\t}\n\n\tget height() {\n\t\treturn this.sliders.height.elt.value\n\t}\n\n\tset minLength(v) {\n\t\tthis.sliders.minLength.update(v)\n\t}\n\n\tset idealLength(v) {\n\t\tthis.sliders.idealLength.update(v)\n\t}\n\n\tset meetThreshold(v) {\n\t\tthis.sliders.meetThreshold.update(v)\n\t}\n\n\tset thickness(v) {\n\t\tthis.sliders.thickness.update(v)\n\t}\n\n\tset alphaVal(v) {\n\t\tthis.sliders.alphaVal.update(v)\n\t}\n\n\tset width(v) {\n\t\tthis.sliders.width.update(v)\n\t}\n\n\tset height(v) {\n\t\tthis.sliders.height.update(v)\n\t}\n\n\tset precision(v) {\n\t\tthis.sliders.precision.update(v)\n\t}\n}\n\ntype ControlsOpts = {\n\tparams: { [key: string]: number }\n\tdoReset: (randomizeForces?: boolean, randomizeCurveVals?: boolean) => void\n\tredrawCurves: () => void\n\taddCurves: () => void\n\tinitForceVals: ForceVals\n\tsave: () => void\n\tresize: () => void\n}\n\nexport function makeControls({\n\tparams,\n\tdoReset,\n\tredrawCurves,\n\taddCurves,\n\tinitForceVals,\n\tsave,\n\tresize,\n}: ControlsOpts) {\n\tlet controls = new Controls(true)\n\n\tlet curveVals = new CurveVals(controls, params, redrawCurves, resize)\n\tlet forces = new Forces(controls, initForceVals)\n\tcontrols.createBtnSet({\n\t\tbtns: [\n\t\t\t{\n\t\t\t\tlabelString: 'new drawing with current vals',\n\t\t\t\tonClick: () => doReset(false),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabelString: 'new drawing + randomize forceVals',\n\t\t\t\tonClick: () => doReset(true, false),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabelString: 'new drawing + randomize all',\n\t\t\t\tonClick: () => doReset(true, true),\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabelString: 'add curves',\n\t\t\t\tonClick: addCurves,\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabelString: 'save',\n\t\t\t\tonClick: save,\n\t\t\t},\n\t\t],\n\t})\n\n\tcontrols.createBtn({\n\t\tlabelString: 'new drawing with above vals',\n\t\tonClick: () => doReset(false),\n\t\tparent: forces.panel,\n\t})\n\n\treturn { forces, curveVals }\n}\n\nexport function makeOverlay() {\n\tlet el = document.createElement('div')\n\tel.style.backgroundColor = 'rgba(255,255,255,0.7)'\n\tel.style.width = '100%'\n\tel.style.height = '100%'\n\tel.style.left = '0'\n\tel.style.top = '0'\n\tel.style.position = 'absolute'\n\tel.style.display = 'flex'\n\tel.style.alignItems = 'center'\n\tel.style.justifyContent = 'center'\n\tel.style.display = 'none'\n\tel.innerHTML = 'please wait...'\n\tdocument.body.appendChild(el)\n\n\treturn {\n\t\tel: el,\n\t\tshow: () => {\n\t\t\tel.style.display = 'flex'\n\t\t},\n\t\thide: () => {\n\t\t\tel.style.display = 'none'\n\t\t},\n\t}\n}\n","import { Curve, type ForceVals } from './11/Curve'\nimport { makeOverlay, makeControls } from './11/curve-controls'\n\nlet palette = ['#0d5c63', '#fc60a8', '#ff8c42', '#93032e', '#4CB5AE']\nlet colorDirection\nlet curves: Curve[] = []\nlet overlay\nlet forces, curveVals\n\nlet possibles: ForceVals[] = [\n\t{ vx1: 0.031, vx2: 0.042, vy1: 0.0978, vy2: 0.58 },\n\t{ vx1: 0.0529, vx2: 0.044986, vy1: 0.0686, vy2: 1.121 },\n\t{ vx1: 0.038, vx2: 0.07, vy1: 0.021, vy2: 1.44 },\n\t{ vx1: 0.08, vx2: 0.02, vy1: 0.05, vy2: 1.24 },\n\t{ vx1: 0.58, vx2: 0.01, vy1: 0.015, vy2: 1.2 },\n\t{ vx1: 0.654, vx2: 0.043, vy1: -0.077, vy2: 0.552 },\n\t{ vx1: 0.75, vx2: -0.015, vy1: 0.018, vy2: -0.535 },\n\t{ vx1: 0.22, vx2: 0.0164, vy1: -0.014, vy2: -1.337 },\n]\n\nlet timesAdded = 0\nlet circlePackRadius = 50\nlet circlePackAttempts = 50\n\nlet PARAMS = {\n\twidth: Math.min(window.innerWidth, 800),\n\theight: Math.min(window.innerHeight, 700),\n\tminLength: 200,\n\tidealLength: 500,\n\tmeetThreshold: 3,\n\tthickness: 10,\n\talphaVal: 230,\n\tprecision: 4,\n}\n\nfunction makeCurves(points) {\n\tlet origLength = curves.length\n\tlet longest = 0\n\tlet shortest = +curveVals.idealLength + 1\n\n\tpoints.forEach((point, i) => {\n\t\tlet curve = new Curve(point.x, point.y, forces, curveVals.thickness, curveVals.precision)\n\t\tconsole.log(`attempt curve ${i} of ${points.length}`)\n\n\t\tlet good = true\n\t\twhile (curve.points.length < curveVals.idealLength) {\n\t\t\tlet newPoint = curve.addPoint()\n\t\t\tif (curve.checkIntersects(newPoint, curves, curveVals.meetThreshold)) {\n\t\t\t\tif (curve.points.length < curveVals.minLength) {\n\t\t\t\t\tgood = false\n\t\t\t\t\tbreak\n\t\t\t\t} else {\n\t\t\t\t\tgood = true\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurve.points.push(newPoint)\n\t\t\t}\n\t\t}\n\n\t\tif (good) {\n\t\t\tcurve.getColor(colorDirection, palette, curveVals.alphaVal)\n\t\t\tcurves.push(curve)\n\t\t}\n\t})\n\n\tfor (let i = origLength; i < curves.length; i++) {\n\t\tlet len = curves[i].points.length\n\t\tif (len > longest) {\n\t\t\tlongest = len\n\t\t} else if (len < shortest) {\n\t\t\tshortest = len\n\t\t}\n\t}\n\n\tconsole.log(curves)\n\tconsole.log(\n\t\t`started at ${origLength}, finished with ${curves.length} curvy particles.\n\t\tThe longest is ${longest}. The shortest is ${shortest}`\n\t)\n}\n\nfunction addCurves() {\n\ttimesAdded++\n\n\tnoFill()\n\tstrokeCap(SQUARE)\n\tstrokeWeight(curveVals.thickness)\n\tstroke(100, 10, 250)\n\n\tlet startAt = curves.length\n\tlet ps = particlesCirclePack(circlePackRadius, circlePackAttempts * timesAdded)\n\n\tmakeCurves(ps)\n\n\tfor (let i = startAt; i < curves.length; i++) {\n\t\tcurves[i].draw()\n\t}\n}\n\nfunction redrawCurves() {\n\tclear(0, 0, width, height)\n\tdrawBgs()\n\tcurves.forEach((curve) => {\n\t\tcurve.weight = curveVals.thickness\n\t\tcurve.setAlpha(curveVals.alphaVal)\n\t\tcurve.draw()\n\t})\n}\n\nfunction particlesCirclePack(r, maxAttempts = 100) {\n\tconsole.log('starting circle pack function')\n\tlet points = []\n\tlet attempts = 0\n\tlet c = 0\n\n\twhile (attempts < maxAttempts) {\n\t\tc++\n\t\tlet newPoint = createVector(random(r / 2, width - r / 2), random(r / 2, height - r / 2))\n\t\tlet validPoint = true\n\n\t\tfor (let i = 0; i < points.length; i++) {\n\t\t\tif (newPoint.dist(points[i]) < r) {\n\t\t\t\tvalidPoint = false\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif (validPoint) {\n\t\t\tpoints.push(newPoint)\n\t\t\tattempts = 0\n\t\t} else {\n\t\t\tattempts++\n\t\t}\n\t}\n\n\tconsole.log(`took ${c} attempts to make ${points.length} points`)\n\treturn points\n}\n\nfunction drawBgs() {\n\tclear(0, 0, width, height)\n\tlet bgs = [color(255, 255, 250, 150), color(236, 222, 212, 150), color(252, 244, 237, 250)]\n\tbackground(bgs[0])\n\tstrokeWeight(width / 3)\n\tstroke(bgs[2])\n\tline(width * -0.1, height * -0.5, width, height * 1.75)\n\tline(width * 1.5, height * 1, width * -0.25, height * -0.15)\n\tline(width * 0.75, height * -0.25, width * -0.1, height * 1.1)\n\tline(width * 0.5, height * -0.2, width * 0.35, height * 1.2)\n}\n\nfunction setVars(rForceVals = true, rCurveVals = false) {\n\tconsole.log('setvars', rForceVals)\n\tcurves = []\n\tpalette = shuffle(palette)\n\tcolorDirection = random([1, 2, 3, 4, 5, 6, 7])\n\n\tif (rForceVals) {\n\t\tforces.vx1 = random(0.1, 1.2)\n\t\tforces.vx2 = random(0.01, 0.08)\n\t\tforces.vy1 = random(0.01, 0.08)\n\t\tforces.vy2 = random(0.5, 1.5)\n\t}\n\n\tif (rCurveVals) {\n\t\tcurveVals.idealLength = floor(random(50, 700))\n\t\tcurveVals.minLength = floor(random(20, min(150, curveVals.idealLength)))\n\t\tcurveVals.meetThreshold = floor(random(1, 10))\n\t\tcurveVals.thickness = floor(random(2, 14))\n\t\tcurveVals.alphaVal = floor(random(100, 255))\n\t}\n}\n\nfunction resize() {\n\tresizeCanvas(curveVals.width, curveVals.height)\n\tredrawCurves()\n}\n\nfunction doReset(rForceVals = true, rCurveVals = false) {\n\tsetVars(rForceVals, rCurveVals)\n\toverlay.show()\n\tsetTimeout(() => {\n\t\tdrawBgs()\n\t\taddCurves()\n\t\toverlay.hide()\n\t}, 50)\n}\n\nfunction setup() {\n\tlet controls = makeControls({\n\t\tparams: PARAMS,\n\t\tdoReset,\n\t\tredrawCurves,\n\t\taddCurves: () => {\n\t\t\toverlay.show()\n\t\t\tsetTimeout(() => {\n\t\t\t\taddCurves()\n\t\t\t\toverlay.hide()\n\t\t\t}, 50)\n\t\t},\n\t\tinitForceVals: {\n\t\t\tvx1: random(0.1, 1.2),\n\t\t\tvx2: random(0.01, 0.08),\n\t\t\tvy1: random(0.01, 0.08),\n\t\t\tvy2: random(0.5, 1.5),\n\t\t},\n\t\tresize: resize,\n\t\tsave: () => saveCanvas(`x${forces.vx1}-${forces.vx2}-y${forces.vy1}-${forces.vy2}`, 'png'),\n\t})\n\n\tforces = controls.forces\n\tcurveVals = controls.curveVals\n\toverlay = makeOverlay()\n\n\tcreateCanvas(curveVals.width, curveVals.height)\n\n\tdoReset()\n\tnoLoop()\n}\n\n// @ts-ignore\nwindow.setup = setup\n"],"names":["$dbeefd724cdbba7c$export$5551a2d24ff40153","forceX","forceY","colorDirection","$ee751a8038737f0e$var$findForceX","x","y","vx1","vx2","sin","width","cos","$ee751a8038737f0e$var$findForceY","vy1","vy2","height","$ee751a8038737f0e$export$b0e83c3ef8d2db1","done","nPoints","color","weight","constructor","forceVals","precision","this","points","createVector","getColor","palette","alphaVal","prev","length","colIndex","c","setAlpha","newAlpha","addPoint","checkIntersects","point","curves","threshold","intersects","i","j","p1","p2","abs","draw","stroke","strokeWeight","beginShape","curveVertex","forEach","p","endShape","$8e2a3ad07a7bf6cf$var$style","document","createElement","textContent","$parcel$interopDefault","body","appendChild","$8e2a3ad07a7bf6cf$export$c7c44baae9d9f25f","rightSide","shown","shownFromStorage","container","buildContainer","count","activePanel","panels","panelIds","tabBtns","show","localStorage","getItem","boolean","outer","createDiv","class","style","btn","createButton","parent","attribute","addClass","elt","addEventListener","setItem","removeClass","addPanelTabs","tabsContainer","addPanel","titleString","id","tabBtn","push","activatePanel","panel","b","addSection","labelString","secDiv","Object","keys","createInput","onChange","timer","inpDiv","inp","errorEl","createSpan","inputItems","input","e","clearTimeout","setTimeout","res","error","console","log","html","onClick","createBtn","d","createBtnSet","btns","className","btnsOutput","createText","text","createSlider","min","max","step","val","floor","l","s","sp2","update","v","value","createPaletteInput","onPaletteUpdate","target","test","split","slice","map","createSelect","options","useOptionsIndex","namesAndVals","selected","sDiv","lab","sel","option","name","changed","el","label","createRadio","rDiv","radio","opt","$b40b8909a2e2f588$var$Forces","controls","initialVals","sliders","key","low","round","$b40b8909a2e2f588$var$CurveVals","initVals","redrawCurves","resize","minLength","idealLength","meetThreshold","thickness","changeFn","$b40b8909a2e2f588$export$d636ceed1b2d5d64","params","doReset","addCurves","initForceVals","save","curveVals","forces","$b40b8909a2e2f588$export$fcec313a42137391","backgroundColor","left","top","position","display","alignItems","justifyContent","innerHTML","hide","$b8897662512a6c3e$var$colorDirection","$b8897662512a6c3e$var$overlay","$b8897662512a6c3e$var$forces","$b8897662512a6c3e$var$curveVals","$b8897662512a6c3e$var$palette","$b8897662512a6c3e$var$curves","$b8897662512a6c3e$var$timesAdded","$b8897662512a6c3e$var$circlePackRadius","$b8897662512a6c3e$var$circlePackAttempts","$b8897662512a6c3e$var$PARAMS","Math","window","innerWidth","innerHeight","$b8897662512a6c3e$var$addCurves","noFill","strokeCap","SQUARE","startAt","origLength","longest","shortest","curve","good","newPoint","len","$b8897662512a6c3e$var$makeCurves","r","maxAttempts","attempts","random","validPoint","dist","$b8897662512a6c3e$var$particlesCirclePack","$b8897662512a6c3e$var$redrawCurves","clear","$b8897662512a6c3e$var$drawBgs","bgs","background","line","$b8897662512a6c3e$var$resize","resizeCanvas","$b8897662512a6c3e$var$doReset","rForceVals","rCurveVals","shuffle","$b8897662512a6c3e$var$setVars","setup","saveCanvas","createCanvas","noLoop"],"version":3,"file":"11-clean.js.map"}