{"mappings":"sRACA,IAAIA,E,iVCqBJ,IAAAC,EACAC,E,iFArBA,IAAIC,EAAU,CAAC,EAoBfF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,GAElC,EAaAL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,CACT,C,sCC0BA,IAAAE,E,6CA5CA,IAAIC,EAAY,CAAC,EA6BjB,SAASC,EAAWC,GAClB,OAAQ,GAAKA,GAAKC,QAAQ,0EAA2E,MAAQ,GAC/G,CAaAJ,EA1CA,SAA4BH,GAC1B,IAAIQ,EAAQJ,EAAUJ,GAOtB,OALKQ,IACHA,EAOJ,WACE,IACE,MAAM,IAAIN,KACZ,CAAE,MAAOO,GACP,IAAIC,GAAW,GAAKD,EAAIE,OAAOC,MAAM,oEAErC,GAAIF,EAGF,OAAOL,EAAWK,EAAQ,GAE9B,CAEA,MAAO,GACT,CArBYG,GACRT,EAAUJ,GAAMQ,GAGXA,CACT,C,ICbAM,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,4F,MCAzDC,EAAiBJ,EAAA,SAAAK,aAA6C,SAAW,SAAWL,EAAA,SAAAM,QAA6C,SJIjI,MAAMC,EAAA,IAAAC,IAAAJ,GAkJNK,OAAOC,MAtIP,WACCC,aAAa,IAAK,KAClBC,WACAC,SACAC,UACD,EAkIAL,OAAOM,KAhIP,WACCC,WAAW,IACXvC,EAAIwC,aACJC,UAAUC,QACVC,SAAS,IAET,IAAIC,EAAS,GAGb,IAAK,IAAIC,EAAI,EAAGA,EAAI7C,EAAI8C,MAAOD,GAFpB,EAGV,IAAK,IAAIE,EAAI,EAAGA,EAAI/C,EAAIgD,OAAQD,GAHtB,EAGiC,CAC1C,IAAIxC,EAA0B,GAArBwC,EAAI/C,EAAI8C,MAAQD,GACrBI,EAAIC,MAAMlD,EAAImD,OAAO5C,GAAIP,EAAImD,OAAO5C,EAAI,GAAIP,EAAImD,OAAO5C,EAAI,GAAIP,EAAImD,OAAO5C,EAAI,IAClFqC,EAAOQ,KAAKH,EACb,CAGDI,MAAMrD,EAAK,EAAG,GACd4C,EAAOU,MAAK,CAACC,EAAGC,IACXC,IAAIC,IAAIH,GAAKG,IAAIF,IAAM,GACnBG,UAAUJ,GAAKI,UAAUH,GAEzBE,IAAIH,GAAKG,IAAIF,KAItB,IAAIjD,EAAI,EACR,IAAK,IAAIsC,EAAI,EAAGA,EAAIC,MAAOD,GApBhB,EAqBV,IAAK,IAAIE,EAAI,EAAGA,EAAIC,OAAQD,GArBlB,EAsBTa,KAAKhB,EAAOrC,IACZsD,KAAKhB,EAAGE,EAvBC,KAwBTxC,GAGH,EA+FAyB,OAAO8B,QA7IP,WACC9D,EAAM+D,UAAUjC,EAASkC,MACzBhC,OAAOiC,IAAMjE,CACd,C","sources":["src/scripts/basics/sortcolors.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-8a707cdb75a044dd.js","node_modules/@parcel/runtime-js/lib/runtime-7718cfc89fd2666f.js"],"sourcesContent":["// let img, density\nlet img\n// const imageUrl = new URL('../../images/rio-art.jpg?width=400&height=400', import.meta.url)\n// const imageUrl = new URL('../../images/umbrellas-pexels.jpg?width=800&height=800', import.meta.url)\nconst imageUrl = new URL(\n\t'../../images/pexels-steve-johnson.jpg?width=400&height=400',\n\timport.meta.url\n)\n// const imageUrl = new URL('../../images/balloon.jpg?width=400&height=400', import.meta.url)\n// const imageUrl = new URL('../../images/vtiny.png', import.meta.url)\n\nfunction preload() {\n\timg = loadImage(imageUrl.href)\n\twindow.img = img\n}\n\nfunction setup() {\n\tcreateCanvas(400, 400)\n\tnoStroke()\n\tnoLoop()\n\tnoSmooth()\n}\n\nfunction draw() {\n\tbackground(10)\n\timg.loadPixels()\n\ttextAlign(CENTER)\n\ttextSize(10)\n\n\tlet colors = []\n\tlet step = 5\n\n\tfor (let x = 0; x < img.width; x += step) {\n\t\tfor (let y = 0; y < img.height; y += step) {\n\t\t\tlet i = (y * img.width + x) * 4\n\t\t\tlet c = color(img.pixels[i], img.pixels[i + 1], img.pixels[i + 2], img.pixels[i + 3])\n\t\t\tcolors.push(c)\n\t\t}\n\t}\n\n\timage(img, 0, 0)\n\tcolors.sort((a, b) => {\n\t\tif (abs(hue(a) - hue(b)) < 10) {\n\t\t\treturn lightness(a) - lightness(b)\n\t\t} else {\n\t\t\treturn hue(a) - hue(b)\n\t\t}\n\t})\n\n\tlet i = 0\n\tfor (let x = 0; x < width; x += step) {\n\t\tfor (let y = 0; y < height; y += step) {\n\t\t\tfill(colors[i])\n\t\t\trect(x, y, step, step)\n\t\t\ti++\n\t\t}\n\t}\n}\n\nfunction doColors() {\n\t// let tileCount = 300\n\timg.loadPixels()\n\n\tstroke(0)\n\trect(0, 0, img.width, img.height)\n\tnoStroke()\n\n\t// let rectSize = floor(img.width / tileCount)\n\t// let rectSizeCeil = ceil(rectSize)\n\tlet colors = []\n\n\tfor (let y = 0; y < img.width; y++) {\n\t\tfor (let x = 0; x < img.height; x++) {\n\t\t\t// let px = x * rectSize\n\t\t\t// let py = y * rectSize\n\t\t\t// let i = py * img.width * 4 + px * 4\n\t\t\tlet i = (y * img.width * 4 + x * 4) * density\n\n\t\t\tlet c = color(img.pixels[i], img.pixels[i + 1], img.pixels[i + 2], img.pixels[i + 3])\n\t\t\tcolors.push(c)\n\t\t}\n\t}\n\n\tsortColors(colors, 'brightness')\n\n\tlet i = 0\n\tfor (let y = 0; y < height; y++) {\n\t\tfor (let x = 0; x < width; x++) {\n\t\t\tfill(colors[i])\n\t\t\trect(x * density, y * density, density)\n\t\t\ti++\n\t\t}\n\t}\n\n\t// for (let y = 0; y < tileCount; y++) {\n\t// \tfor (let x = 0; x < tileCount; x++) {\n\t// \t\tlet py = y * rectSize\n\t// \t\tlet px = x * rectSize\n\t// \t\tfill(colors[i])\n\t// \t\trect(px, py, rectSize, rectSize)\n\t// \t\ti++\n\t// \t}\n\t// }\n}\nfunction sortColors(colors, mode) {\n\tswitch (mode) {\n\t\tcase 'hue':\n\t\t\tcolors.sort((a, b) => hue(a) - hue(b))\n\t\t\tbreak\n\t\tcase 'red':\n\t\t\tcolors.sort((a, b) => red(a) - red(b))\n\t\t\tbreak\n\t\tcase 'green':\n\t\t\tcolors.sort((a, b) => green(a) - green(b))\n\t\t\tbreak\n\t\tcase 'blue':\n\t\t\tcolors.sort((a, b) => blue(a) - blue(b))\n\t\t\tbreak\n\t\tcase 'saturation':\n\t\t\tcolors.sort((a, b) => saturation(a) - saturation(b))\n\t\t\tbreak\n\t\tcase 'brightness':\n\t\t\tcolors.sort((a, b) => brightness(a) - brightness(b))\n\t\t\tbreak\n\t\tcase 'lightness':\n\t\t\tcolors.sort((a, b) => lightness(a) - lightness(b))\n\t\t\tbreak\n\t\tcase 'hue-saturation':\n\t\t\tcolors.sort((a, b) => {\n\t\t\t\tif (abs(hue(a) - hue(b)) < 15) {\n\t\t\t\t\treturn saturation(a) - saturation(b)\n\t\t\t\t} else {\n\t\t\t\t\treturn hue(a) - hue(b)\n\t\t\t\t}\n\t\t\t})\n\t\t\tbreak\n\t\tcase 'hue-lightness':\n\t\t\tcolors.sort((a, b) => {\n\t\t\t\tif (abs(hue(a) - hue(b)) < 15) {\n\t\t\t\t\treturn lightness(a) - lightness(b)\n\t\t\t\t} else {\n\t\t\t\t\treturn hue(a) - hue(b)\n\t\t\t\t}\n\t\t\t})\n\t\t\tbreak\n\t\tdefault:\n\t\t\tbreak\n\t}\n}\n\nwindow.setup = setup\nwindow.draw = draw\nwindow.preload = preload\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"gOwWE\\\":\\\"sortcolors.js\\\",\\\"78OUq\\\":\\\"pexels-steve-johnson.84ca58a6.jpeg\\\"}\"));","module.exports = require('./helpers/bundle-url').getBundleURL('gOwWE') + \"../../\" + require('./helpers/bundle-manifest').resolve(\"78OUq\");"],"names":["$88e3bbc00d34fee1$var$img","$f13ecebb1f16f955$export$6503ec6e8aabbaf","$f13ecebb1f16f955$export$f7ad0328861e2f03","$f13ecebb1f16f955$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","$ce4ea6902f7a0721$export$bdfd709ae4826697","$ce4ea6902f7a0721$var$bundleURL","$ce4ea6902f7a0721$var$getBaseURL","url","replace","value","err","matches","stack","match","$ce4ea6902f7a0721$var$getBundleURL","parcelRequire","register","JSON","parse","$0c3b3e04f05ace46$exports","getBundleURL","resolve","$88e3bbc00d34fee1$var$imageUrl","URL","window","setup","createCanvas","noStroke","noLoop","noSmooth","draw","background","loadPixels","textAlign","CENTER","textSize","colors","x","width","y","height","c","color","pixels","push","image","sort","a","b","abs","hue","lightness","fill","rect","preload","loadImage","href","img"],"version":3,"file":"sortcolors.js.map"}